# -*- coding: mbcs -*-
typelib_path = 'C:\\Program Files\\Microsoft Office\\Root\\Office16\\MSPPT.OLB'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes import BSTR
from ctypes import HRESULT
from comtypes.automation import VARIANT
from comtypes.automation import IDispatch
from comtypes import CoClass
from comtypes.automation import VARIANT
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
import comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8
from comtypes import IUnknown
from ctypes.wintypes import VARIANT_BOOL
import comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3
from comtypes.automation import _midlSAFEARRAY


class PlotArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A72-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A56-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Interior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6C-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartFillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5B-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlChartElementPosition'
xlChartElementPositionAutomatic = -4105
xlChartElementPositionCustom = -4114
XlChartElementPosition = c_int # enum
class ChartFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5C-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Application(CoClass):
    _reg_clsid_ = GUID('{91493441-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
class _Application(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493442-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class EApplication(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C2-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = []
Application._com_interfaces_ = [_Application]
Application._outgoing_interfaces_ = [EApplication]

PlotArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1667), 'propget'], HRESULT, 'InsideLeft',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(1667), 'propput'], HRESULT, 'InsideLeft',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1668), 'propget'], HRESULT, 'InsideTop',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(1668), 'propput'], HRESULT, 'InsideTop',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1669), 'propget'], HRESULT, 'InsideWidth',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(1669), 'propput'], HRESULT, 'InsideWidth',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1670), 'propget'], HRESULT, 'InsideHeight',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(1670), 'propput'], HRESULT, 'InsideHeight',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for PlotArea implementation
##class PlotArea_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class CustomLayout(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F3-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Shapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493475-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class HeadersFooters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493474-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ShapeRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347A-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Collection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493450-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
class Hyperlinks(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493464-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Design(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D7-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TimeLine(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DC-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SlideShowTransition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493471-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CustomerData(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F6-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Guides(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{1641E775-2277-46DE-A06D-8C49C3C5D5E7}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomLayout._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'Shapes' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HeadersFooters',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'HeadersFooters' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Background' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'Hyperlinks' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Design',
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Design' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'TimeLine',
              ( ['out', 'retval'], POINTER(POINTER(TimeLine)), 'TimeLine' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'SlideShowTransition',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowTransition)), 'SlideShowTransition' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'MatchingName',
              ( ['out', 'retval'], POINTER(BSTR), 'MatchingName' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'MatchingName',
              ( ['in'], BSTR, 'MatchingName' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Preserved',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Preserved' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'Preserved',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Preserved' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'Index' )),
    COMMETHOD([dispid(2017)], HRESULT, 'Select'),
    COMMETHOD([dispid(2018)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2019)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2020)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'Duplicate' )),
    COMMETHOD([dispid(2021)], HRESULT, 'MoveTo',
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'DisplayMasterShapes',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'DisplayMasterShapes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'FollowMasterBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FollowMasterBackground' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'FollowMasterBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FollowMasterBackground' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'ThemeColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ThemeColorScheme)), 'ThemeColorScheme' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'Guides',
              ( ['out', 'retval'], POINTER(POINTER(Guides)), 'Guides' )),
]
################################################################
## code template for CustomLayout implementation
##class CustomLayout_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return Shapes
##
##    @property
##    def HeadersFooters(self):
##        '-no docstring-'
##        #return HeadersFooters
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return Hyperlinks
##
##    @property
##    def Design(self):
##        '-no docstring-'
##        #return Design
##
##    @property
##    def TimeLine(self):
##        '-no docstring-'
##        #return TimeLine
##
##    @property
##    def SlideShowTransition(self):
##        '-no docstring-'
##        #return SlideShowTransition
##
##    def _get(self):
##        '-no docstring-'
##        #return MatchingName
##    def _set(self, MatchingName):
##        '-no docstring-'
##    MatchingName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Preserved
##    def _set(self, Preserved):
##        '-no docstring-'
##    Preserved = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return Index
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    def MoveTo(self, toPos):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayMasterShapes
##    def _set(self, DisplayMasterShapes):
##        '-no docstring-'
##    DisplayMasterShapes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FollowMasterBackground
##    def _set(self, FollowMasterBackground):
##        '-no docstring-'
##    FollowMasterBackground = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThemeColorScheme(self):
##        '-no docstring-'
##        #return ThemeColorScheme
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    @property
##    def Guides(self):
##        '-no docstring-'
##        #return Guides
##

class LineFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347F-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493452-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
LineFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginArrowheadLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength), 'BeginArrowheadLength' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'BeginArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength, 'BeginArrowheadLength' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginArrowheadStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle), 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BeginArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle, 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'BeginArrowheadWidth',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth), 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'BeginArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth, 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'DashStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineDashStyle), 'DashStyle' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'DashStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineDashStyle, 'DashStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndArrowheadLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength), 'EndArrowheadLength' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'EndArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength, 'EndArrowheadLength' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'EndArrowheadStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle), 'EndArrowheadStyle' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'EndArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle, 'EndArrowheadStyle' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'EndArrowheadWidth',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth), 'EndArrowheadWidth' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'EndArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth, 'EndArrowheadWidth' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Pattern',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineStyle), 'Style' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineStyle, 'Style' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Weight',
              ( ['out', 'retval'], POINTER(c_float), 'Weight' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Weight',
              ( ['in'], c_float, 'Weight' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'InsetPen',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'InsetPen' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'InsetPen',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'InsetPen' )),
]
################################################################
## code template for LineFormat implementation
##class LineFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadLength
##    def _set(self, BeginArrowheadLength):
##        '-no docstring-'
##    BeginArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadStyle
##    def _set(self, BeginArrowheadStyle):
##        '-no docstring-'
##    BeginArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadWidth
##    def _set(self, BeginArrowheadWidth):
##        '-no docstring-'
##    BeginArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DashStyle
##    def _set(self, DashStyle):
##        '-no docstring-'
##    DashStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadLength
##    def _set(self, EndArrowheadLength):
##        '-no docstring-'
##    EndArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadStyle
##    def _set(self, EndArrowheadStyle):
##        '-no docstring-'
##    EndArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadWidth
##    def _set(self, EndArrowheadWidth):
##        '-no docstring-'
##    EndArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Pattern
##    def _set(self, Pattern):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Weight
##    def _set(self, Weight):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return InsetPen
##    def _set(self, InsetPen):
##        '-no docstring-'
##    InsetPen = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlSeriesNameLevel'
xlSeriesNameLevelNone = -3
xlSeriesNameLevelCustom = -2
xlSeriesNameLevelAll = -1
XlSeriesNameLevel = c_int # enum

# values for enumeration 'PpTextLevelEffect'
ppAnimateLevelMixed = -2
ppAnimateLevelNone = 0
ppAnimateByFirstLevel = 1
ppAnimateBySecondLevel = 2
ppAnimateByThirdLevel = 3
ppAnimateByFourthLevel = 4
ppAnimateByFifthLevel = 5
ppAnimateByAllLevels = 16
PpTextLevelEffect = c_int # enum
class Tags(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934B9-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Collection._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10), 'restricted'], HRESULT, '_Index',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT), '_Index' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
]
################################################################
## code template for Collection implementation
##class Collection_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def _Index(self, Index):
##        '-no docstring-'
##        #return _Index
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##

Tags._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(BSTR), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Value' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Delete',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2005), 'hidden'], HRESULT, 'AddBinary',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'FilePath' )),
    COMMETHOD([dispid(2006), 'hidden'], HRESULT, 'BinaryValue',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(c_int), 'BinaryValue' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Name',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2008)], HRESULT, 'Value',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(BSTR), 'Value' )),
]
################################################################
## code template for Tags implementation
##class Tags_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Name):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, Name):
##        '-no docstring-'
##        #return 
##
##    def AddBinary(self, Name, FilePath):
##        '-no docstring-'
##        #return 
##
##    def BinaryValue(self, Name):
##        '-no docstring-'
##        #return BinaryValue
##
##    def Name(self, Index):
##        '-no docstring-'
##        #return Name
##
##    def Value(self, Index):
##        '-no docstring-'
##        #return Value
##

class Chart(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A55-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlDataLabelsType'
xlDataLabelsShowNone = -4142
xlDataLabelsShowValue = 2
xlDataLabelsShowPercent = 3
xlDataLabelsShowLabel = 4
xlDataLabelsShowLabelAndPercent = 5
xlDataLabelsShowBubbleSizes = 6
XlDataLabelsType = c_int # enum

# values for enumeration 'XlRowCol'
xlColumns = 2
xlRows = 1
XlRowCol = c_int # enum
class DataTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A63-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlBarShape'
xlBox = 0
xlPyramidToPoint = 1
xlPyramidToMax = 2
xlCylinder = 3
xlConeToPoint = 4
xlConeToMax = 5
XlBarShape = c_int # enum
class Walls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A7C-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartData(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5A-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5D-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlAxisGroup'
xlPrimary = 1
xlSecondary = 2
XlAxisGroup = c_int # enum
class ChartArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A58-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5F-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlPictureAppearance'
xlPrinter = 2
xlScreen = 1
XlPictureAppearance = c_int # enum

# values for enumeration 'XlCopyPictureFormat'
xlBitmap = 2
xlPicture = -4147
XlCopyPictureFormat = c_int # enum
class Corners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A60-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlDisplayBlanksAs'
xlInterpolated = 3
xlNotPlotted = 1
xlZero = 2
XlDisplayBlanksAs = c_int # enum
class Floor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A68-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Legend(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6E-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlCategoryLabelLevel'
xlCategoryLabelLevelNone = -3
xlCategoryLabelLevelCustom = -2
xlCategoryLabelLevelAll = -1
XlCategoryLabelLevel = c_int # enum
Chart._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType), 'RHS' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'RHS' )),
    COMMETHOD([dispid(1396), 'propget'], HRESULT, 'HasDataTable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1396), 'propput'], HRESULT, 'HasDataTable',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1401), 'hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'ChartType' ),
              ( ['in', 'optional'], VARIANT, 'TypeName' )),
    COMMETHOD([dispid(1409)], HRESULT, 'GetChartElement',
              ( ['in'], c_int, 'X' ),
              ( ['in'], c_int, 'Y' ),
              ( ['in', 'out'], POINTER(c_int), 'ElementID' ),
              ( ['in', 'out'], POINTER(c_int), 'Arg1' ),
              ( ['in', 'out'], POINTER(c_int), 'Arg2' )),
    COMMETHOD([dispid(1413)], HRESULT, 'SetSourceData',
              ( ['in'], BSTR, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'PlotBy',
              ( ['out', 'retval'], POINTER(XlRowCol), 'PlotBy' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'PlotBy',
              ( ['in'], XlRowCol, 'PlotBy' )),
    COMMETHOD([dispid(2001), 'hidden'], HRESULT, 'AutoFormat',
              ( ['in'], c_int, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' )),
    COMMETHOD([dispid(2002)], HRESULT, 'SetBackgroundPicture',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'DataTable',
              ( ['out', 'retval'], POINTER(POINTER(DataTable)), 'RHS' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'BarShape',
              ( ['out', 'retval'], POINTER(XlBarShape), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'RHS' )),
    COMMETHOD([dispid(2006)], HRESULT, 'SetDefaultChart',
              ( ['in'], VARIANT, 'Name' )),
    COMMETHOD([dispid(2007)], HRESULT, 'ApplyChartTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2008)], HRESULT, 'SaveChartTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2377), 'propget'], HRESULT, 'SideWall',
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(2378), 'propget'], HRESULT, 'BackWall',
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(2465), 'propget'], HRESULT, 'ChartStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2465), 'propput'], HRESULT, 'ChartStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2466)], HRESULT, 'ClearToMatchStyle'),
    COMMETHOD([dispid(1815), 'hidden', 'propget'], HRESULT, 'HasPivotFields',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1815), 'hidden', 'propput'], HRESULT, 'HasPivotFields',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2468)], HRESULT, 'ApplyLayout',
              ( ['in'], c_int, 'Layout' ),
              ( ['in', 'optional'], VARIANT, 'ChartType' )),
    COMMETHOD([dispid(2010)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'ChartData',
              ( ['out', 'retval'], POINTER(POINTER(ChartData)), 'ppchartdata' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'Area3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(9), 'hidden'], HRESULT, 'AreaGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(18), 'hidden', 'propget'], HRESULT, 'Bar3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'BarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(19), 'hidden', 'propget'], HRESULT, 'Column3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'ColumnGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'Line3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'LineGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(21), 'hidden', 'propget'], HRESULT, 'Pie3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(13), 'hidden'], HRESULT, 'PieGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(14), 'hidden'], HRESULT, 'DoughnutGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'RadarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(22), 'hidden', 'propget'], HRESULT, 'SurfaceGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'XYGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2014), 'hidden', 'nonbrowsable'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2016)], HRESULT, 'Axes',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'ChartArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartArea)), 'ChartArea' )),
    COMMETHOD([dispid(2018)], HRESULT, 'ChartGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'ChartTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartTitle)), 'RHS' )),
    COMMETHOD([dispid(2020)], HRESULT, 'ChartWizard',
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'HasLegend' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'CategoryTitle' ),
              ( ['in', 'optional'], VARIANT, 'ValueTitle' ),
              ( ['in', 'optional'], VARIANT, 'ExtraTitle' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2021)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2022)], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['in', 'optional'], XlPictureAppearance, 'Size', 2 ),
              ( ['in', 'lcid'], c_int, 'LocaleID', _lcid )),
    COMMETHOD([dispid(2023), 'hidden', 'propget'], HRESULT, 'Corners',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Corners)), 'RHS' )),
    COMMETHOD([dispid(2024)], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(XlDisplayBlanksAs), 'RHS' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlDisplayBlanksAs, 'RHS' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2028)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT, 'FilterName' ),
              ( ['in', 'optional'], VARIANT, 'Interactive' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'Floor',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Floor)), 'RHS' )),
    COMMETHOD([dispid(2030), 'propget'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2030), 'propput'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2031), 'propput'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2032), 'propget'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2032), 'propput'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2033), 'propget'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2033), 'propput'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2034), 'propput'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2035), 'propget'], HRESULT, 'Legend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Legend)), 'RHS' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2036), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2037), 'propget'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2037), 'propput'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'PlotArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(PlotArea)), 'RHS' )),
    COMMETHOD([dispid(2039), 'propget'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2039), 'propput'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2040), 'propget'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2040), 'propput'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2041), 'propget'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2041), 'propput'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2042)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2043)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2044)], HRESULT, 'SetElement',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoChartElementType, 'Element' )),
    COMMETHOD([dispid(2045), 'hidden', 'propget'], HRESULT, 'Subtype',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2045), 'hidden', 'propput'], HRESULT, 'Subtype',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2046), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2046), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2047), 'propget'], HRESULT, 'Walls',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(2048), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(2049), 'propget'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2049), 'propput'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['in'], VARIANT_BOOL, 'res' )),
    COMMETHOD([dispid(2050), 'propget'], HRESULT, 'ShowLegendFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2050), 'propput'], HRESULT, 'ShowLegendFieldButtons',
              ( ['in'], VARIANT_BOOL, 'res' )),
    COMMETHOD([dispid(2051), 'propget'], HRESULT, 'ShowAxisFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2051), 'propput'], HRESULT, 'ShowAxisFieldButtons',
              ( ['in'], VARIANT_BOOL, 'res' )),
    COMMETHOD([dispid(2052), 'propget'], HRESULT, 'ShowValueFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2052), 'propput'], HRESULT, 'ShowValueFieldButtons',
              ( ['in'], VARIANT_BOOL, 'res' )),
    COMMETHOD([dispid(2053), 'propget'], HRESULT, 'ShowAllFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2053), 'propput'], HRESULT, 'ShowAllFieldButtons',
              ( ['in'], VARIANT_BOOL, 'res' )),
    COMMETHOD([dispid(2054), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(2054), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(2055), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(2055), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
    COMMETHOD([dispid(2056)], HRESULT, 'FullSeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppFullSeriesCollection' )),
    COMMETHOD([dispid(2057), 'propget'], HRESULT, 'CategoryLabelLevel',
              ( ['out', 'retval'], POINTER(XlCategoryLabelLevel), 'plevel' )),
    COMMETHOD([dispid(2057), 'propput'], HRESULT, 'CategoryLabelLevel',
              ( ['in'], XlCategoryLabelLevel, 'plevel' )),
    COMMETHOD([dispid(2058), 'propget'], HRESULT, 'SeriesNameLevel',
              ( ['out', 'retval'], POINTER(XlSeriesNameLevel), 'plevel' )),
    COMMETHOD([dispid(2058), 'propput'], HRESULT, 'SeriesNameLevel',
              ( ['in'], XlSeriesNameLevel, 'plevel' )),
    COMMETHOD([dispid(2059), 'hidden', 'propget'], HRESULT, 'HasHiddenContent',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'res' )),
    COMMETHOD([dispid(2060), 'hidden'], HRESULT, 'DeleteHiddenContent'),
    COMMETHOD([dispid(2467), 'propget'], HRESULT, 'ChartColor',
              ( ['out', 'retval'], POINTER(VARIANT), 'pColor' )),
    COMMETHOD([dispid(2467), 'propput'], HRESULT, 'ChartColor',
              ( ['in'], VARIANT, 'pColor' )),
    COMMETHOD([dispid(2469)], HRESULT, 'ClearToMatchColorStyle'),
    COMMETHOD([dispid(2470)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2471)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Chart implementation
##class Chart_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataTable = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType, TypeName):
##        '-no docstring-'
##        #return 
##
##    def GetChartElement(self, X, Y):
##        '-no docstring-'
##        #return ElementID, Arg1, Arg2
##
##    def SetSourceData(self, Source, PlotBy):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return PlotBy
##    def _set(self, PlotBy):
##        '-no docstring-'
##    PlotBy = property(_get, _set, doc = _set.__doc__)
##
##    def AutoFormat(self, Gallery, Format):
##        '-no docstring-'
##        #return 
##
##    def SetBackgroundPicture(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def SetDefaultChart(self, Name):
##        '-no docstring-'
##        #return 
##
##    def ApplyChartTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def SaveChartTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SideWall(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BackWall(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartStyle = property(_get, _set, doc = _set.__doc__)
##
##    def ClearToMatchStyle(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasPivotFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDataLabelsOverMaximum = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyLayout(self, Layout, ChartType):
##        '-no docstring-'
##        #return 
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ChartData(self):
##        '-no docstring-'
##        #return ppchartdata
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Area3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def AreaGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Bar3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def BarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Column3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ColumnGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Line3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def LineGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Pie3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def PieGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def DoughnutGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def RadarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SurfaceGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def XYGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AutoScaling = property(_get, _set, doc = _set.__doc__)
##
##    def Axes(self, Type, AxisGroup, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ChartArea(self, lcid):
##        '-no docstring-'
##        #return ChartArea
##
##    def ChartGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ChartTitle(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ChartWizard(self, Source, Gallery, Format, PlotBy, CategoryLabels, SeriesLabels, HasLegend, Title, CategoryTitle, ValueTitle, ExtraTitle, lcid):
##        '-no docstring-'
##        #return 
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def CopyPicture(self, Appearance, Format, Size, LocaleID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Corners(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DepthPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayBlanksAs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Elevation = property(_get, _set, doc = _set.__doc__)
##
##    def Export(self, FileName, FilterName, Interactive):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Floor(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    GapDepth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index1, Index2, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index1, Index2, lcid, RHS):
##        '-no docstring-'
##    HasAxis = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasLegend = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HeightPercent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Legend(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlotArea(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    PlotVisibleOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    RightAngleAxes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def SeriesCollection(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def SetElement(self, Element):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Subtype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Walls(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return res
##    def _set(self, res):
##        '-no docstring-'
##    ShowReportFilterFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return res
##    def _set(self, res):
##        '-no docstring-'
##    ShowLegendFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return res
##    def _set(self, res):
##        '-no docstring-'
##    ShowAxisFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return res
##    def _set(self, res):
##        '-no docstring-'
##    ShowValueFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return res
##    def _set(self, res):
##        '-no docstring-'
##    ShowAllFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def FullSeriesCollection(self, Index):
##        '-no docstring-'
##        #return ppFullSeriesCollection
##
##    def _get(self):
##        '-no docstring-'
##        #return plevel
##    def _set(self, plevel):
##        '-no docstring-'
##    CategoryLabelLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plevel
##    def _set(self, plevel):
##        '-no docstring-'
##    SeriesNameLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasHiddenContent(self):
##        '-no docstring-'
##        #return res
##
##    def DeleteHiddenContent(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    ChartColor = property(_get, _set, doc = _set.__doc__)
##
##    def ClearToMatchColorStyle(self):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class NamedSlideShows(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345B-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class NamedSlideShow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345C-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
NamedSlideShows._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(NamedSlideShow)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT, 'safeArrayOfSlideIDs' ),
              ( ['out', 'retval'], POINTER(POINTER(NamedSlideShow)), 'Add' )),
]
################################################################
## code template for NamedSlideShows implementation
##class NamedSlideShows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Name, safeArrayOfSlideIDs):
##        '-no docstring-'
##        #return Add
##


# values for enumeration 'PpFixedFormatIntent'
ppFixedFormatIntentScreen = 1
ppFixedFormatIntentPrint = 2
PpFixedFormatIntent = c_int # enum

# values for enumeration 'PpFixedFormatType'
ppFixedFormatTypeXPS = 1
ppFixedFormatTypePDF = 2
PpFixedFormatType = c_int # enum
class HeaderFooter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149349C-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpDateTimeFormat'
ppDateTimeFormatMixed = -2
ppDateTimeMdyy = 1
ppDateTimeddddMMMMddyyyy = 2
ppDateTimedMMMMyyyy = 3
ppDateTimeMMMMdyyyy = 4
ppDateTimedMMMyy = 5
ppDateTimeMMMMyy = 6
ppDateTimeMMyy = 7
ppDateTimeMMddyyHmm = 8
ppDateTimeMMddyyhmmAMPM = 9
ppDateTimeHmm = 10
ppDateTimeHmmss = 11
ppDateTimehmmAMPM = 12
ppDateTimehmmssAMPM = 13
ppDateTimeFigureOut = 14
ppDateTimeUAQ1 = 15
ppDateTimeUAQ2 = 16
ppDateTimeUAQ3 = 17
ppDateTimeUAQ4 = 18
ppDateTimeUAQ5 = 19
ppDateTimeUAQ6 = 20
ppDateTimeUAQ7 = 21
PpDateTimeFormat = c_int # enum
HeaderFooter._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'UseFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UseFormat' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'UseFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UseFormat' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(PpDateTimeFormat), 'Format' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Format',
              ( ['in'], PpDateTimeFormat, 'Format' )),
]
################################################################
## code template for HeaderFooter implementation
##class HeaderFooter_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseFormat
##    def _set(self, UseFormat):
##        '-no docstring-'
##    UseFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Format
##    def _set(self, Format):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpRemoveDocInfoType'
ppRDIComments = 1
ppRDIRemovePersonalInformation = 4
ppRDIDocumentProperties = 8
ppRDIDocumentWorkspace = 10
ppRDIInkAnnotations = 11
ppRDIPublishPath = 13
ppRDIDocumentServerProperties = 14
ppRDIDocumentManagementPolicy = 15
ppRDIContentType = 16
ppRDISlideUpdateInformation = 17
ppRDIAtMentions = 18
ppRDIAll = 99
PpRemoveDocInfoType = c_int # enum
class Trendlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A7A-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlTrendlineType'
xlExponential = 5
xlLinear = -4132
xlLogarithmic = -4133
xlMovingAvg = 6
xlPolynomial = 3
xlPower = 4
XlTrendlineType = c_int # enum
class Trendline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A79-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Trendlines._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(181)], HRESULT, 'Add',
              ( ['in', 'optional'], XlTrendlineType, 'Type', -4132 ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Period' ),
              ( ['in', 'optional'], VARIANT, 'Forward' ),
              ( ['in', 'optional'], VARIANT, 'Backward' ),
              ( ['in', 'optional'], VARIANT, 'Intercept' ),
              ( ['in', 'optional'], VARIANT, 'DisplayEquation' ),
              ( ['in', 'optional'], VARIANT, 'DisplayRSquared' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'RHS' )),
]
################################################################
## code template for Trendlines implementation
##class Trendlines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, Order, Period, Forward, Backward, Intercept, DisplayEquation, DisplayRSquared, Name):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'PpTextUnitEffect'
ppAnimateUnitMixed = -2
ppAnimateByParagraph = 0
ppAnimateByWord = 1
ppAnimateByCharacter = 2
PpTextUnitEffect = c_int # enum

# values for enumeration 'XlBinsType'
xlBinsTypeAutomatic = 0
xlBinsTypeCategorical = 1
xlBinsTypeManual = 2
xlBinsTypeBinSize = 3
xlBinsTypeBinCount = 4
XlBinsType = c_int # enum
class Theme(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D9D60EB3-D4B4-4991-9C16-75585B3346BB}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ThemeVariants(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9E116A3C-2C6D-4D07-93AF-8675D452FCA2}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Theme._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ThemeVariants',
              ( ['out', 'retval'], POINTER(POINTER(ThemeVariants)), 'ThemeVariants' )),
]
################################################################
## code template for Theme implementation
##class Theme_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ThemeVariants(self):
##        '-no docstring-'
##        #return ThemeVariants
##


# values for enumeration 'PpChartUnitEffect'
ppAnimateChartMixed = -2
ppAnimateBySeries = 1
ppAnimateByCategory = 2
ppAnimateBySeriesElements = 3
ppAnimateByCategoryElements = 4
ppAnimateChartAllAtOnce = 5
PpChartUnitEffect = c_int # enum
NamedSlideShow._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'SlideIDs',
              ( ['out', 'retval'], POINTER(VARIANT), 'SlideIDs' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
]
################################################################
## code template for NamedSlideShow implementation
##class NamedSlideShow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SlideIDs(self):
##        '-no docstring-'
##        #return SlideIDs
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##

class AddIns(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493460-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AddIn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493461-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AddIns._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AddIn)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(POINTER(AddIn)), 'Add' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Remove',
              ( ['in'], POINTER(VARIANT), 'Index' )),
]
################################################################
## code template for AddIns implementation
##class AddIns_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return Add
##
##    def Remove(self, Index):
##        '-no docstring-'
##        #return 
##

class MediaFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E550-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class MediaBookmarks(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E556-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpResampleMediaProfile'
ppResampleMediaProfileCustom = 1
ppResampleMediaProfileSmall = 2
ppResampleMediaProfileSmaller = 3
ppResampleMediaProfileSmallest = 4
PpResampleMediaProfile = c_int # enum

# values for enumeration 'PpMediaTaskStatus'
ppMediaTaskStatusNone = 0
ppMediaTaskStatusInProgress = 1
ppMediaTaskStatusQueued = 2
ppMediaTaskStatusDone = 3
ppMediaTaskStatusFailed = 4
PpMediaTaskStatus = c_int # enum
MediaFormat._methods_ = [
    COMMETHOD([dispid(2000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Volume',
              ( ['out', 'retval'], POINTER(c_float), 'Volume' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'Volume',
              ( ['in'], c_float, 'Volume' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Muted',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Muted' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Muted',
              ( ['in'], VARIANT_BOOL, 'Muted' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Length',
              ( ['out', 'retval'], POINTER(c_int), 'Length' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'StartPoint',
              ( ['out', 'retval'], POINTER(c_int), 'StartPoint' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'StartPoint',
              ( ['in'], c_int, 'StartPoint' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'EndPoint',
              ( ['out', 'retval'], POINTER(c_int), 'EndPoint' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'EndPoint',
              ( ['in'], c_int, 'EndPoint' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'FadeInDuration',
              ( ['out', 'retval'], POINTER(c_int), 'FadeInDuration' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'FadeInDuration',
              ( ['in'], c_int, 'FadeInDuration' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'FadeOutDuration',
              ( ['out', 'retval'], POINTER(c_int), 'FadeOutDuration' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'FadeOutDuration',
              ( ['in'], c_int, 'FadeOutDuration' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'MediaBookmarks',
              ( ['out', 'retval'], POINTER(POINTER(MediaBookmarks)), 'MediaBookmarks' )),
    COMMETHOD([dispid(2010)], HRESULT, 'SetDisplayPicture',
              ( ['in'], c_int, 'Position' )),
    COMMETHOD([dispid(2011)], HRESULT, 'SetDisplayPictureFromFile',
              ( ['in'], BSTR, 'FilePath' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Resample',
              ( ['in', 'optional'], VARIANT_BOOL, 'Trim', False ),
              ( ['in', 'optional'], c_int, 'SampleHeight', 1080 ),
              ( ['in', 'optional'], c_int, 'SampleWidth', 1920 ),
              ( ['in', 'optional'], c_int, 'VideoFrameRate', 24 ),
              ( ['in', 'optional'], c_int, 'AudioSamplingRate', 48000 ),
              ( ['in', 'optional'], c_int, 'VideoBitRate', 7000000 )),
    COMMETHOD([dispid(2013)], HRESULT, 'ResampleFromProfile',
              ( ['in', 'optional'], PpResampleMediaProfile, 'profile', 2 )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'ResamplingStatus',
              ( ['out', 'retval'], POINTER(PpMediaTaskStatus), 'ResamplingStatus' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'IsLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsLinked' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'IsEmbedded',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsEmbedded' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'AudioSamplingRate',
              ( ['out', 'retval'], POINTER(c_int), 'AudioSamplingRate' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'VideoFrameRate',
              ( ['out', 'retval'], POINTER(c_int), 'VideoFrameRate' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'SampleHeight',
              ( ['out', 'retval'], POINTER(c_int), 'SampleHeight' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'SampleWidth',
              ( ['out', 'retval'], POINTER(c_int), 'SampleWidth' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'VideoCompressionType',
              ( ['out', 'retval'], POINTER(BSTR), 'VideoCompressionType' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'AudioCompressionType',
              ( ['out', 'retval'], POINTER(BSTR), 'AudioCompressionType' )),
]
################################################################
## code template for MediaFormat implementation
##class MediaFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Volume
##    def _set(self, Volume):
##        '-no docstring-'
##    Volume = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Muted
##    def _set(self, Muted):
##        '-no docstring-'
##    Muted = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    def _get(self):
##        '-no docstring-'
##        #return StartPoint
##    def _set(self, StartPoint):
##        '-no docstring-'
##    StartPoint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndPoint
##    def _set(self, EndPoint):
##        '-no docstring-'
##    EndPoint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FadeInDuration
##    def _set(self, FadeInDuration):
##        '-no docstring-'
##    FadeInDuration = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FadeOutDuration
##    def _set(self, FadeOutDuration):
##        '-no docstring-'
##    FadeOutDuration = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MediaBookmarks(self):
##        '-no docstring-'
##        #return MediaBookmarks
##
##    def SetDisplayPicture(self, Position):
##        '-no docstring-'
##        #return 
##
##    def SetDisplayPictureFromFile(self, FilePath):
##        '-no docstring-'
##        #return 
##
##    def Resample(self, Trim, SampleHeight, SampleWidth, VideoFrameRate, AudioSamplingRate, VideoBitRate):
##        '-no docstring-'
##        #return 
##
##    def ResampleFromProfile(self, profile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ResamplingStatus(self):
##        '-no docstring-'
##        #return ResamplingStatus
##
##    @property
##    def IsLinked(self):
##        '-no docstring-'
##        #return IsLinked
##
##    @property
##    def IsEmbedded(self):
##        '-no docstring-'
##        #return IsEmbedded
##
##    @property
##    def AudioSamplingRate(self):
##        '-no docstring-'
##        #return AudioSamplingRate
##
##    @property
##    def VideoFrameRate(self):
##        '-no docstring-'
##        #return VideoFrameRate
##
##    @property
##    def SampleHeight(self):
##        '-no docstring-'
##        #return SampleHeight
##
##    @property
##    def SampleWidth(self):
##        '-no docstring-'
##        #return SampleWidth
##
##    @property
##    def VideoCompressionType(self):
##        '-no docstring-'
##        #return VideoCompressionType
##
##    @property
##    def AudioCompressionType(self):
##        '-no docstring-'
##        #return AudioCompressionType
##

class Font(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493495-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Font._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'Color' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Bold',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Bold' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Bold',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Bold' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Italic',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Italic' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Italic',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Italic' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Shadow' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Shadow',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Shadow' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Emboss',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Emboss' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Emboss',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Emboss' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Underline',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Underline' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Underline',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Underline' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Subscript',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Subscript' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Subscript',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Subscript' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Superscript',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Superscript' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Superscript',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Superscript' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'BaselineOffset',
              ( ['out', 'retval'], POINTER(c_float), 'BaselineOffset' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'BaselineOffset',
              ( ['in'], c_float, 'BaselineOffset' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Embedded',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Embedded' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Embeddable',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Embeddable' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'NameFarEast',
              ( ['out', 'retval'], POINTER(BSTR), 'NameFarEast' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'NameFarEast',
              ( ['in'], BSTR, 'NameFarEast' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'NameAscii',
              ( ['out', 'retval'], POINTER(BSTR), 'NameAscii' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'NameAscii',
              ( ['in'], BSTR, 'NameAscii' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'AutoRotateNumbers',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoRotateNumbers' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'AutoRotateNumbers',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoRotateNumbers' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'NameOther',
              ( ['out', 'retval'], POINTER(BSTR), 'NameOther' )),
    COMMETHOD([dispid(2019), 'propput'], HRESULT, 'NameOther',
              ( ['in'], BSTR, 'NameOther' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'NameComplexScript',
              ( ['out', 'retval'], POINTER(BSTR), 'NameComplexScript' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'NameComplexScript',
              ( ['in'], BSTR, 'NameComplexScript' )),
]
################################################################
## code template for Font implementation
##class Font_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return Color
##
##    def _get(self):
##        '-no docstring-'
##        #return Bold
##    def _set(self, Bold):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Italic
##    def _set(self, Italic):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Shadow
##    def _set(self, Shadow):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Emboss
##    def _set(self, Emboss):
##        '-no docstring-'
##    Emboss = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Underline
##    def _set(self, Underline):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Subscript
##    def _set(self, Subscript):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Superscript
##    def _set(self, Superscript):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BaselineOffset
##    def _set(self, BaselineOffset):
##        '-no docstring-'
##    BaselineOffset = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Embedded(self):
##        '-no docstring-'
##        #return Embedded
##
##    @property
##    def Embeddable(self):
##        '-no docstring-'
##        #return Embeddable
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameFarEast
##    def _set(self, NameFarEast):
##        '-no docstring-'
##    NameFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameAscii
##    def _set(self, NameAscii):
##        '-no docstring-'
##    NameAscii = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoRotateNumbers
##    def _set(self, AutoRotateNumbers):
##        '-no docstring-'
##    AutoRotateNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameOther
##    def _set(self, NameOther):
##        '-no docstring-'
##    NameOther = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NameComplexScript
##    def _set(self, NameComplexScript):
##        '-no docstring-'
##    NameComplexScript = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpAfterEffect'
ppAfterEffectMixed = -2
ppAfterEffectNothing = 0
ppAfterEffectHide = 1
ppAfterEffectDim = 2
ppAfterEffectHideOnClick = 3
PpAfterEffect = c_int # enum
class Diagram(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DB-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class DiagramNodes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DA-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
Diagram._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNodes)), 'Nodes' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType), 'Type' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLayout',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoLayout' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'AutoLayout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoLayout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Reverse',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Reverse' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Reverse',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Reverse' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'AutoFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoFormat' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'AutoFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoFormat' )),
    COMMETHOD([dispid(10)], HRESULT, 'Convert',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType, 'Type' )),
    COMMETHOD([dispid(11)], HRESULT, 'FitText'),
]
################################################################
## code template for Diagram implementation
##class Diagram_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoLayout
##    def _set(self, AutoLayout):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Reverse
##    def _set(self, Reverse):
##        '-no docstring-'
##    Reverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoFormat
##    def _set(self, AutoFormat):
##        '-no docstring-'
##    AutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    def Convert(self, Type):
##        '-no docstring-'
##        #return 
##
##    def FitText(self):
##        '-no docstring-'
##        #return 
##

class ParagraphFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493496-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpParagraphAlignment'
ppAlignmentMixed = -2
ppAlignLeft = 1
ppAlignCenter = 2
ppAlignRight = 3
ppAlignJustify = 4
ppAlignDistribute = 5
ppAlignThaiDistribute = 6
ppAlignJustifyLow = 7
PpParagraphAlignment = c_int # enum
class BulletFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493497-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpBaselineAlignment'
ppBaselineAlignMixed = -2
ppBaselineAlignBaseline = 1
ppBaselineAlignTop = 2
ppBaselineAlignCenter = 3
ppBaselineAlignFarEast50 = 4
ppBaselineAlignAuto = 5
PpBaselineAlignment = c_int # enum

# values for enumeration 'PpDirection'
ppDirectionMixed = -2
ppDirectionLeftToRight = 1
ppDirectionRightToLeft = 2
PpDirection = c_int # enum
ParagraphFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(PpParagraphAlignment), 'Alignment' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Alignment',
              ( ['in'], PpParagraphAlignment, 'Alignment' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Bullet',
              ( ['out', 'retval'], POINTER(POINTER(BulletFormat)), 'Bullet' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'LineRuleBefore',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LineRuleBefore' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'LineRuleBefore',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LineRuleBefore' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'LineRuleAfter',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LineRuleAfter' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'LineRuleAfter',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LineRuleAfter' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'LineRuleWithin',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LineRuleWithin' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'LineRuleWithin',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LineRuleWithin' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'SpaceBefore',
              ( ['out', 'retval'], POINTER(c_float), 'SpaceBefore' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'SpaceBefore' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'SpaceAfter' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'SpaceAfter' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'SpaceWithin',
              ( ['out', 'retval'], POINTER(c_float), 'SpaceWithin' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'SpaceWithin',
              ( ['in'], c_float, 'SpaceWithin' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'BaseLineAlignment',
              ( ['out', 'retval'], POINTER(PpBaselineAlignment), 'BaseLineAlignment' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'BaseLineAlignment',
              ( ['in'], PpBaselineAlignment, 'BaseLineAlignment' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'FarEastLineBreakControl',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FarEastLineBreakControl' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'FarEastLineBreakControl',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FarEastLineBreakControl' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WordWrap' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'HangingPunctuation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HangingPunctuation' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'HangingPunctuation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'HangingPunctuation' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'TextDirection',
              ( ['out', 'retval'], POINTER(PpDirection), 'TextDirection' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'TextDirection',
              ( ['in'], PpDirection, 'TextDirection' )),
]
################################################################
## code template for ParagraphFormat implementation
##class ParagraphFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Bullet(self):
##        '-no docstring-'
##        #return Bullet
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRuleBefore
##    def _set(self, LineRuleBefore):
##        '-no docstring-'
##    LineRuleBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRuleAfter
##    def _set(self, LineRuleAfter):
##        '-no docstring-'
##    LineRuleAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LineRuleWithin
##    def _set(self, LineRuleWithin):
##        '-no docstring-'
##    LineRuleWithin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SpaceBefore
##    def _set(self, SpaceBefore):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SpaceAfter
##    def _set(self, SpaceAfter):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SpaceWithin
##    def _set(self, SpaceWithin):
##        '-no docstring-'
##    SpaceWithin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BaseLineAlignment
##    def _set(self, BaseLineAlignment):
##        '-no docstring-'
##    BaseLineAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FarEastLineBreakControl
##    def _set(self, FarEastLineBreakControl):
##        '-no docstring-'
##    FarEastLineBreakControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HangingPunctuation
##    def _set(self, HangingPunctuation):
##        '-no docstring-'
##    HangingPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextDirection
##    def _set(self, TextDirection):
##        '-no docstring-'
##    TextDirection = property(_get, _set, doc = _set.__doc__)
##

class ThemeVariant(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C9195677-B4F9-4228-BFD0-40C1F77D2F6A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ThemeVariants._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ThemeVariant)), 'Item' )),
]
################################################################
## code template for ThemeVariants implementation
##class ThemeVariants_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##


# values for enumeration 'PpAdvanceMode'
ppAdvanceModeMixed = -2
ppAdvanceOnClick = 1
ppAdvanceOnTime = 2
PpAdvanceMode = c_int # enum
class SoundFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493473-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpSoundFormatType'
ppSoundFormatMixed = -2
ppSoundFormatNone = 0
ppSoundFormatWAV = 1
ppSoundFormatMIDI = 2
ppSoundFormatCDAudio = 3
PpSoundFormatType = c_int # enum
SoundFormat._methods_ = [
    COMMETHOD([dispid(2000)], HRESULT, 'Play'),
    COMMETHOD([dispid(2001)], HRESULT, 'Import',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2002)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(PpSoundFormatType), 'Export' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpSoundFormatType), 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SourceFullName',
              ( ['out', 'retval'], POINTER(BSTR), 'SourceFullName' )),
]
################################################################
## code template for SoundFormat implementation
##class SoundFormat_Impl(object):
##    def Play(self):
##        '-no docstring-'
##        #return 
##
##    def Import(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return Export
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def SourceFullName(self):
##        '-no docstring-'
##        #return SourceFullName
##

AddIn._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'FullName' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'Path' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Registered',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Registered' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Registered',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Registered' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AutoLoad',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoLoad' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'AutoLoad',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoLoad' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Loaded',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Loaded' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Loaded',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Loaded' )),
    COMMETHOD([dispid(2009), 'hidden', 'propget'], HRESULT, 'DisplayAlerts',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayAlerts' )),
    COMMETHOD([dispid(2009), 'hidden', 'propput'], HRESULT, 'DisplayAlerts',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayAlerts' )),
    COMMETHOD([dispid(2010), 'hidden', 'propget'], HRESULT, 'RegisteredInHKLM',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RegisteredInHKLM' )),
]
################################################################
## code template for AddIn implementation
##class AddIn_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return FullName
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return Path
##
##    def _get(self):
##        '-no docstring-'
##        #return Registered
##    def _set(self, Registered):
##        '-no docstring-'
##    Registered = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoLoad
##    def _set(self, AutoLoad):
##        '-no docstring-'
##    AutoLoad = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Loaded
##    def _set(self, Loaded):
##        '-no docstring-'
##    Loaded = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayAlerts
##    def _set(self, DisplayAlerts):
##        '-no docstring-'
##    DisplayAlerts = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RegisteredInHKLM(self):
##        '-no docstring-'
##        #return RegisteredInHKLM
##

class Broadcast(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E558-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Broadcast._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Start',
              ( ['in'], BSTR, 'serverUrl' )),
    COMMETHOD([dispid(2004)], HRESULT, 'End'),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'AttendeeUrl',
              ( ['out', 'retval'], POINTER(BSTR), 'AttendeeUrl' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'IsBroadcasting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsBroadcasting' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Pause'),
    COMMETHOD([dispid(2008)], HRESULT, 'Resume'),
    COMMETHOD([dispid(2009)], HRESULT, 'AddMeetingNotes',
              ( ['in'], BSTR, 'notesUrl' ),
              ( ['in'], BSTR, 'notesWacUrl' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'State',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBroadcastState), 'BroadcastState' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Capabilities',
              ( ['out', 'retval'], POINTER(c_int), 'Capabilities' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'SessionID',
              ( ['out', 'retval'], POINTER(BSTR), 'SessionID' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'PresenterServiceUrl',
              ( ['out', 'retval'], POINTER(BSTR), 'PresenterServiceUrl' )),
]
################################################################
## code template for Broadcast implementation
##class Broadcast_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Start(self, serverUrl):
##        '-no docstring-'
##        #return 
##
##    def End(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AttendeeUrl(self):
##        '-no docstring-'
##        #return AttendeeUrl
##
##    @property
##    def IsBroadcasting(self):
##        '-no docstring-'
##        #return IsBroadcasting
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def Resume(self):
##        '-no docstring-'
##        #return 
##
##    def AddMeetingNotes(self, notesUrl, notesWacUrl):
##        '-no docstring-'
##        #return 
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return BroadcastState
##
##    @property
##    def Capabilities(self):
##        '-no docstring-'
##        #return Capabilities
##
##    @property
##    def SessionID(self):
##        '-no docstring-'
##        #return SessionID
##
##    @property
##    def PresenterServiceUrl(self):
##        '-no docstring-'
##        #return PresenterServiceUrl
##


# values for enumeration 'PpSoundEffectType'
ppSoundEffectsMixed = -2
ppSoundNone = 0
ppSoundStopPrevious = 1
ppSoundFile = 2
PpSoundEffectType = c_int # enum
class AnimationPoint(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934EB-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AnimationPoint._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Time',
              ( ['out', 'retval'], POINTER(c_float), 'Time' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Time',
              ( ['in'], c_float, 'Time' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(VARIANT), 'Value' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'Formula' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'Formula' )),
]
################################################################
## code template for AnimationPoint implementation
##class AnimationPoint_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Time
##    def _set(self, Time):
##        '-no docstring-'
##    Time = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Value
##    def _set(self, Value):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Formula
##    def _set(self, Formula):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpFollowColors'
ppFollowColorsMixed = -2
ppFollowColorsNone = 0
ppFollowColorsScheme = 1
ppFollowColorsTextAndBackground = 2
PpFollowColors = c_int # enum
class ChartFont(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A69-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DataTable._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'HasBorderHorizontal',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'HasBorderHorizontal',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'HasBorderVertical',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'HasBorderVertical',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'HasBorderOutline',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HasBorderOutline',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppLine' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'pfont' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Select'),
    COMMETHOD([dispid(2008)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2010), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2010), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for DataTable implementation
##class DataTable_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderOutline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppLine
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return pfont
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

ThemeVariant._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'Width' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'Height' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Id',
              ( ['out', 'retval'], POINTER(BSTR), 'Id' )),
]
################################################################
## code template for ThemeVariant implementation
##class ThemeVariant_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return Id
##


# values for enumeration 'PpGuideOrientation'
ppHorizontalGuide = 1
ppVerticalGuide = 2
PpGuideOrientation = c_int # enum

# values for enumeration 'PpSlideShowState'
ppSlideShowRunning = 1
ppSlideShowPaused = 2
ppSlideShowBlackScreen = 3
ppSlideShowWhiteScreen = 4
ppSlideShowDone = 5
PpSlideShowState = c_int # enum
class HiLoLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6B-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HiLoLines._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2006)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for HiLoLines implementation
##class HiLoLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'PpSlideShowAdvanceMode'
ppSlideShowManualAdvance = 1
ppSlideShowUseSlideTimings = 2
ppSlideShowRehearseNewTimings = 3
PpSlideShowAdvanceMode = c_int # enum

# values for enumeration 'PpHTMLVersion'
ppHTMLv3 = 1
ppHTMLv4 = 2
ppHTMLDual = 3
ppHTMLAutodetect = 4
PpHTMLVersion = c_int # enum

# values for enumeration 'PpRevisionInfo'
ppRevisionInfoNone = 0
ppRevisionInfoBaseline = 1
ppRevisionInfoMerged = 2
PpRevisionInfo = c_int # enum
class Research(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F7-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Research._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Query',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'QueryString' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'QueryLanguage' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseSelection', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'LaunchQuery', True )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetLanguagePair',
              ( ['in'], POINTER(VARIANT), 'Language1' ),
              ( ['in'], POINTER(VARIANT), 'Language2' )),
    COMMETHOD([dispid(2005)], HRESULT, 'IsResearchService',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsResearchService' )),
]
################################################################
## code template for Research implementation
##class Research_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Query(self, ServiceID, QueryString, QueryLanguage, UseSelection, LaunchQuery):
##        '-no docstring-'
##        #return 
##
##    def SetLanguagePair(self, Language1, Language2):
##        '-no docstring-'
##        #return 
##
##    def IsResearchService(self, ServiceID):
##        '-no docstring-'
##        #return IsResearchService
##

class ChartColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A59-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ChartColorFormat._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1646), 'propget'], HRESULT, 'SchemeColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1646), 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(0), 'nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'RGB',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for ChartColorFormat implementation
##class ChartColorFormat_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def RGB(self):
##        '-no docstring-'
##        #return RHS
##

class Placeholders(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493476-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Shape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493479-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Placeholders._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'FindByName',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'FindByName' )),
]
################################################################
## code template for Placeholders implementation
##class Placeholders_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def FindByName(self, Index):
##        '-no docstring-'
##        #return FindByName
##


# values for enumeration 'MsoAnimAfterEffect'
msoAnimAfterEffectMixed = -1
msoAnimAfterEffectNone = 0
msoAnimAfterEffectDim = 1
msoAnimAfterEffectHide = 2
msoAnimAfterEffectHideOnNextClick = 3
MsoAnimAfterEffect = c_int # enum

# values for enumeration 'PpFileDialogType'
ppFileDialogOpen = 1
ppFileDialogSave = 2
PpFileDialogType = c_int # enum

# values for enumeration 'PpColorSchemeIndex'
ppSchemeColorMixed = -2
ppNotSchemeColor = 0
ppBackground = 1
ppForeground = 2
ppShadow = 3
ppTitle = 4
ppFill = 5
ppAccent1 = 6
ppAccent2 = 7
ppAccent3 = 8
PpColorSchemeIndex = c_int # enum
ColorFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType), 'RGB' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType, 'RGB' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoColorType), 'Type' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'SchemeColor',
              ( ['out', 'retval'], POINTER(PpColorSchemeIndex), 'SchemeColor' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], PpColorSchemeIndex, 'SchemeColor' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'TintAndShade',
              ( ['out', 'retval'], POINTER(c_float), 'pValue' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'TintAndShade',
              ( ['in'], c_float, 'pValue' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ObjectThemeColor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoThemeColorIndex), 'ObjectThemeColor' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'ObjectThemeColor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoThemeColorIndex, 'ObjectThemeColor' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Brightness',
              ( ['out', 'retval'], POINTER(c_float), 'Brightness' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'Brightness' )),
]
################################################################
## code template for ColorFormat implementation
##class ColorFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RGB
##    def _set(self, RGB):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return SchemeColor
##    def _set(self, SchemeColor):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pValue
##    def _set(self, pValue):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ObjectThemeColor
##    def _set(self, ObjectThemeColor):
##        '-no docstring-'
##    ObjectThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Brightness
##    def _set(self, Brightness):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##

Floor._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for Floor implementation
##class Floor_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##


# values for enumeration 'PpPrintOutputType'
ppPrintOutputSlides = 1
ppPrintOutputTwoSlideHandouts = 2
ppPrintOutputThreeSlideHandouts = 3
ppPrintOutputSixSlideHandouts = 4
ppPrintOutputNotesPages = 5
ppPrintOutputOutline = 6
ppPrintOutputBuildSlides = 7
ppPrintOutputFourSlideHandouts = 8
ppPrintOutputNineSlideHandouts = 9
ppPrintOutputOneSlideHandouts = 10
PpPrintOutputType = c_int # enum

# values for enumeration 'PpPublishSourceType'
ppPublishAll = 1
ppPublishSlideRange = 2
ppPublishNamedSlideShow = 3
PpPublishSourceType = c_int # enum
class SlideShowWindows(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493456-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SlideShowWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493453-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SlideShowWindows._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SlideShowWindow)), 'Item' )),
]
################################################################
## code template for SlideShowWindows implementation
##class SlideShowWindows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

class AnimationPoints(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934EA-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AnimationPoints._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AnimationPoint)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(AnimationPoint)), 'Add' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Smooth',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Smooth' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Smooth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Smooth' )),
]
################################################################
## code template for AnimationPoints implementation
##class AnimationPoints_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Index):
##        '-no docstring-'
##        #return Add
##
##    def _get(self):
##        '-no docstring-'
##        #return Smooth
##    def _set(self, Smooth):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpShapeFormat'
ppShapeFormatGIF = 0
ppShapeFormatJPG = 1
ppShapeFormatPNG = 2
ppShapeFormatBMP = 3
ppShapeFormatWMF = 4
ppShapeFormatEMF = 5
PpShapeFormat = c_int # enum

# values for enumeration 'MsoAnimateByLevel'
msoAnimateLevelMixed = -1
msoAnimateLevelNone = 0
msoAnimateTextByAllLevels = 1
msoAnimateTextByFirstLevel = 2
msoAnimateTextBySecondLevel = 3
msoAnimateTextByThirdLevel = 4
msoAnimateTextByFourthLevel = 5
msoAnimateTextByFifthLevel = 6
msoAnimateChartAllAtOnce = 7
msoAnimateChartByCategory = 8
msoAnimateChartByCategoryElements = 9
msoAnimateChartBySeries = 10
msoAnimateChartBySeriesElements = 11
msoAnimateDiagramAllAtOnce = 12
msoAnimateDiagramDepthByNode = 13
msoAnimateDiagramDepthByBranch = 14
msoAnimateDiagramBreadthByNode = 15
msoAnimateDiagramBreadthByLevel = 16
msoAnimateDiagramClockwise = 17
msoAnimateDiagramClockwiseIn = 18
msoAnimateDiagramClockwiseOut = 19
msoAnimateDiagramCounterClockwise = 20
msoAnimateDiagramCounterClockwiseIn = 21
msoAnimateDiagramCounterClockwiseOut = 22
msoAnimateDiagramInByRing = 23
msoAnimateDiagramOutByRing = 24
msoAnimateDiagramUp = 25
msoAnimateDiagramDown = 26
MsoAnimateByLevel = c_int # enum

# values for enumeration 'XlOrientation'
xlDownward = -4170
xlHorizontal = -4128
xlUpward = -4171
xlVertical = -4166
XlOrientation = c_int # enum

# values for enumeration 'MsoAnimProperty'
msoAnimNone = 0
msoAnimX = 1
msoAnimY = 2
msoAnimWidth = 3
msoAnimHeight = 4
msoAnimOpacity = 5
msoAnimRotation = 6
msoAnimColor = 7
msoAnimVisibility = 8
msoAnimTextFontBold = 100
msoAnimTextFontColor = 101
msoAnimTextFontEmboss = 102
msoAnimTextFontItalic = 103
msoAnimTextFontName = 104
msoAnimTextFontShadow = 105
msoAnimTextFontSize = 106
msoAnimTextFontSubscript = 107
msoAnimTextFontSuperscript = 108
msoAnimTextFontUnderline = 109
msoAnimTextFontStrikeThrough = 110
msoAnimTextBulletCharacter = 111
msoAnimTextBulletFontName = 112
msoAnimTextBulletNumber = 113
msoAnimTextBulletColor = 114
msoAnimTextBulletRelativeSize = 115
msoAnimTextBulletStyle = 116
msoAnimTextBulletType = 117
msoAnimShapePictureContrast = 1000
msoAnimShapePictureBrightness = 1001
msoAnimShapePictureGamma = 1002
msoAnimShapePictureGrayscale = 1003
msoAnimShapeFillOn = 1004
msoAnimShapeFillColor = 1005
msoAnimShapeFillOpacity = 1006
msoAnimShapeFillBackColor = 1007
msoAnimShapeLineOn = 1008
msoAnimShapeLineColor = 1009
msoAnimShapeShadowOn = 1010
msoAnimShapeShadowType = 1011
msoAnimShapeShadowColor = 1012
msoAnimShapeShadowOpacity = 1013
msoAnimShapeShadowOffsetX = 1014
msoAnimShapeShadowOffsetY = 1015
MsoAnimProperty = c_int # enum

# values for enumeration 'PpPrintHandoutOrder'
ppPrintHandoutVerticalFirst = 1
ppPrintHandoutHorizontalFirst = 2
PpPrintHandoutOrder = c_int # enum
class UpBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A7B-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
UpBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for UpBars implementation
##class UpBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class SeriesLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A77-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SeriesLines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for SeriesLines implementation
##class SeriesLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'PpPrintColorType'
ppPrintColor = 1
ppPrintBlackAndWhite = 2
ppPrintPureBlackAndWhite = 3
PpPrintColorType = c_int # enum
class Coauthoring(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E557-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Coauthoring._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'MergeMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'MergeMode' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'FavorServerEditsDuringMerge',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'FavorServerEditsDuringMerge' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'FavorServerEditsDuringMerge',
              ( ['in'], VARIANT_BOOL, 'FavorServerEditsDuringMerge' )),
    COMMETHOD([dispid(2005)], HRESULT, 'EndReview'),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'PendingUpdates',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'PendingUpdates' )),
    COMMETHOD([dispid(2007), 'hidden', 'propget'], HRESULT, 'CoauthorCount',
              ( ['out', 'retval'], POINTER(c_int), 'CoauthorCount' )),
]
################################################################
## code template for Coauthoring implementation
##class Coauthoring_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def MergeMode(self):
##        '-no docstring-'
##        #return MergeMode
##
##    def _get(self):
##        '-no docstring-'
##        #return FavorServerEditsDuringMerge
##    def _set(self, FavorServerEditsDuringMerge):
##        '-no docstring-'
##    FavorServerEditsDuringMerge = property(_get, _set, doc = _set.__doc__)
##
##    def EndReview(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PendingUpdates(self):
##        '-no docstring-'
##        #return PendingUpdates
##
##    @property
##    def CoauthorCount(self):
##        '-no docstring-'
##        #return CoauthorCount
##

class Slide(CoClass):
    _reg_clsid_ = GUID('{91493445-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
class _Slide(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346A-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SldEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346D-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
Slide._com_interfaces_ = [_Slide]
Slide._outgoing_interfaces_ = [SldEvents]


# values for enumeration 'XlChartPictureType'
xlStackScale = 3
xlStack = 2
xlStretch = 1
XlChartPictureType = c_int # enum

# values for enumeration 'PpExportMode'
ppRelativeToSlide = 1
ppClipRelativeToSlide = 2
ppScaleToFit = 3
ppScaleXY = 4
PpExportMode = c_int # enum

# values for enumeration 'MsoAnimDirection'
msoAnimDirectionNone = 0
msoAnimDirectionUp = 1
msoAnimDirectionRight = 2
msoAnimDirectionDown = 3
msoAnimDirectionLeft = 4
msoAnimDirectionOrdinalMask = 5
msoAnimDirectionUpLeft = 6
msoAnimDirectionUpRight = 7
msoAnimDirectionDownRight = 8
msoAnimDirectionDownLeft = 9
msoAnimDirectionTop = 10
msoAnimDirectionBottom = 11
msoAnimDirectionTopLeft = 12
msoAnimDirectionTopRight = 13
msoAnimDirectionBottomRight = 14
msoAnimDirectionBottomLeft = 15
msoAnimDirectionHorizontal = 16
msoAnimDirectionVertical = 17
msoAnimDirectionAcross = 18
msoAnimDirectionIn = 19
msoAnimDirectionOut = 20
msoAnimDirectionClockwise = 21
msoAnimDirectionCounterclockwise = 22
msoAnimDirectionHorizontalIn = 23
msoAnimDirectionHorizontalOut = 24
msoAnimDirectionVerticalIn = 25
msoAnimDirectionVerticalOut = 26
msoAnimDirectionSlightly = 27
msoAnimDirectionCenter = 28
msoAnimDirectionInSlightly = 29
msoAnimDirectionInCenter = 30
msoAnimDirectionInBottom = 31
msoAnimDirectionOutSlightly = 32
msoAnimDirectionOutCenter = 33
msoAnimDirectionOutBottom = 34
msoAnimDirectionFontBold = 35
msoAnimDirectionFontItalic = 36
msoAnimDirectionFontUnderline = 37
msoAnimDirectionFontStrikethrough = 38
msoAnimDirectionFontShadow = 39
msoAnimDirectionFontAllCaps = 40
msoAnimDirectionInstant = 41
msoAnimDirectionGradual = 42
msoAnimDirectionCycleClockwise = 43
msoAnimDirectionCycleCounterclockwise = 44
MsoAnimDirection = c_int # enum
class ColorScheme(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346F-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpSlideLayout'
ppLayoutMixed = -2
ppLayoutTitle = 1
ppLayoutText = 2
ppLayoutTwoColumnText = 3
ppLayoutTable = 4
ppLayoutTextAndChart = 5
ppLayoutChartAndText = 6
ppLayoutOrgchart = 7
ppLayoutChart = 8
ppLayoutTextAndClipart = 9
ppLayoutClipartAndText = 10
ppLayoutTitleOnly = 11
ppLayoutBlank = 12
ppLayoutTextAndObject = 13
ppLayoutObjectAndText = 14
ppLayoutLargeObject = 15
ppLayoutObject = 16
ppLayoutTextAndMediaClip = 17
ppLayoutMediaClipAndText = 18
ppLayoutObjectOverText = 19
ppLayoutTextOverObject = 20
ppLayoutTextAndTwoObjects = 21
ppLayoutTwoObjectsAndText = 22
ppLayoutTwoObjectsOverText = 23
ppLayoutFourObjects = 24
ppLayoutVerticalText = 25
ppLayoutClipArtAndVerticalText = 26
ppLayoutVerticalTitleAndText = 27
ppLayoutVerticalTitleAndTextOverChart = 28
ppLayoutTwoObjects = 29
ppLayoutObjectAndTwoObjects = 30
ppLayoutTwoObjectsAndObject = 31
ppLayoutCustom = 32
ppLayoutSectionHeader = 33
ppLayoutComparison = 34
ppLayoutContentWithCaption = 35
ppLayoutPictureWithCaption = 36
PpSlideLayout = c_int # enum
class SlideRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346B-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class _Master(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346C-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Comments(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D4-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_Slide._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'Shapes' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HeadersFooters',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'HeadersFooters' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'SlideShowTransition',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowTransition)), 'SlideShowTransition' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'ColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(ColorScheme)), 'ColorScheme' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'ColorScheme',
              ( ['in'], POINTER(ColorScheme), 'ColorScheme' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Background' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SlideID',
              ( ['out', 'retval'], POINTER(c_int), 'SlideID' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'PrintSteps',
              ( ['out', 'retval'], POINTER(c_int), 'PrintSteps' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Select'),
    COMMETHOD([dispid(2012)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2013)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Layout',
              ( ['out', 'retval'], POINTER(PpSlideLayout), 'Layout' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'Layout',
              ( ['in'], PpSlideLayout, 'Layout' )),
    COMMETHOD([dispid(2015)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'Duplicate' )),
    COMMETHOD([dispid(2016)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Tags',
              ( ['out', 'retval'], POINTER(POINTER(Tags)), 'Tags' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'SlideIndex',
              ( ['out', 'retval'], POINTER(c_int), 'SlideIndex' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'SlideNumber',
              ( ['out', 'retval'], POINTER(c_int), 'SlideNumber' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'DisplayMasterShapes',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'DisplayMasterShapes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'FollowMasterBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FollowMasterBackground' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'FollowMasterBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FollowMasterBackground' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'NotesPage',
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'NotesPage' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'Master',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'Master' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'Hyperlinks' )),
    COMMETHOD([dispid(2025)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'FilterName' ),
              ( ['in', 'optional'], c_int, 'ScaleWidth', 0 ),
              ( ['in', 'optional'], c_int, 'ScaleHeight', 0 )),
    COMMETHOD([dispid(2026), 'hidden', 'propget'], HRESULT, 'Scripts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Scripts)), 'Scripts' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'Comments',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'Comments' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'Design',
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Design' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'Design',
              ( ['in'], POINTER(Design), 'Design' )),
    COMMETHOD([dispid(2030)], HRESULT, 'MoveTo',
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'TimeLine',
              ( ['out', 'retval'], POINTER(POINTER(TimeLine)), 'TimeLine' )),
    COMMETHOD([dispid(2032)], HRESULT, 'ApplyTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2033), 'hidden', 'propget'], HRESULT, 'SectionNumber',
              ( ['out', 'retval'], POINTER(c_int), 'SectionNumber' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'CustomLayout',
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'CustomLayout' )),
    COMMETHOD([dispid(2034), 'propput'], HRESULT, 'CustomLayout',
              ( ['in'], POINTER(CustomLayout), 'CustomLayout' )),
    COMMETHOD([dispid(2035)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'themeName' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'ThemeColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ThemeColorScheme)), 'ThemeColorScheme' )),
    COMMETHOD([dispid(2037)], HRESULT, 'ApplyThemeColorScheme',
              ( ['in'], BSTR, 'themeColorSchemeName' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(2038), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(2039), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(2040)], HRESULT, 'PublishSlides',
              ( ['in'], BSTR, 'SlideLibraryUrl' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Overwrite', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseSlideOrder', False )),
    COMMETHOD([dispid(2041)], HRESULT, 'MoveToSectionStart',
              ( ['in'], c_int, 'toSection' )),
    COMMETHOD([dispid(2042), 'propget'], HRESULT, 'sectionIndex',
              ( ['out', 'retval'], POINTER(c_int), 'sectionIndex' )),
    COMMETHOD([dispid(2043), 'propget'], HRESULT, 'HasNotesPage',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasNotesPage' )),
    COMMETHOD([dispid(2044)], HRESULT, 'ApplyTemplate2',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'VariantGUID' )),
]
################################################################
## code template for _Slide implementation
##class _Slide_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return Shapes
##
##    @property
##    def HeadersFooters(self):
##        '-no docstring-'
##        #return HeadersFooters
##
##    @property
##    def SlideShowTransition(self):
##        '-no docstring-'
##        #return SlideShowTransition
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorScheme
##    def _set(self, ColorScheme):
##        '-no docstring-'
##    ColorScheme = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlideID(self):
##        '-no docstring-'
##        #return SlideID
##
##    @property
##    def PrintSteps(self):
##        '-no docstring-'
##        #return PrintSteps
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Layout
##    def _set(self, Layout):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tags(self):
##        '-no docstring-'
##        #return Tags
##
##    @property
##    def SlideIndex(self):
##        '-no docstring-'
##        #return SlideIndex
##
##    @property
##    def SlideNumber(self):
##        '-no docstring-'
##        #return SlideNumber
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayMasterShapes
##    def _set(self, DisplayMasterShapes):
##        '-no docstring-'
##    DisplayMasterShapes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FollowMasterBackground
##    def _set(self, FollowMasterBackground):
##        '-no docstring-'
##    FollowMasterBackground = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NotesPage(self):
##        '-no docstring-'
##        #return NotesPage
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return Master
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return Hyperlinks
##
##    def Export(self, FileName, FilterName, ScaleWidth, ScaleHeight):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return Scripts
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return Comments
##
##    def _get(self):
##        '-no docstring-'
##        #return Design
##    def _set(self, Design):
##        '-no docstring-'
##    Design = property(_get, _set, doc = _set.__doc__)
##
##    def MoveTo(self, toPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TimeLine(self):
##        '-no docstring-'
##        #return TimeLine
##
##    def ApplyTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SectionNumber(self):
##        '-no docstring-'
##        #return SectionNumber
##
##    def _get(self):
##        '-no docstring-'
##        #return CustomLayout
##    def _set(self, CustomLayout):
##        '-no docstring-'
##    CustomLayout = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyTheme(self, themeName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ThemeColorScheme(self):
##        '-no docstring-'
##        #return ThemeColorScheme
##
##    def ApplyThemeColorScheme(self, themeColorSchemeName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    def PublishSlides(self, SlideLibraryUrl, Overwrite, UseSlideOrder):
##        '-no docstring-'
##        #return 
##
##    def MoveToSectionStart(self, toSection):
##        '-no docstring-'
##        #return 
##
##    @property
##    def sectionIndex(self):
##        '-no docstring-'
##        #return sectionIndex
##
##    @property
##    def HasNotesPage(self):
##        '-no docstring-'
##        #return HasNotesPage
##
##    def ApplyTemplate2(self, FileName, VariantGUID):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'PpSelectionType'
ppSelectionNone = 0
ppSelectionSlides = 1
ppSelectionShapes = 2
ppSelectionText = 3
PpSelectionType = c_int # enum
class SectionProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E551-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SectionProperties._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Name',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Rename',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['in'], BSTR, 'sectionName' )),
    COMMETHOD([dispid(2006)], HRESULT, 'SlidesCount',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['out', 'retval'], POINTER(c_int), 'SlidesCount' )),
    COMMETHOD([dispid(2007)], HRESULT, 'FirstSlide',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['out', 'retval'], POINTER(c_int), 'FirstSlide' )),
    COMMETHOD([dispid(2008)], HRESULT, 'AddBeforeSlide',
              ( ['in'], c_int, 'SlideIndex' ),
              ( ['in'], BSTR, 'sectionName' ),
              ( ['out', 'retval'], POINTER(c_int), 'BeforeSlide' )),
    COMMETHOD([dispid(2009)], HRESULT, 'AddSection',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['in', 'optional'], VARIANT, 'sectionName' ),
              ( ['out', 'retval'], POINTER(c_int), 'Section' )),
    COMMETHOD([dispid(2010)], HRESULT, 'Move',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Delete',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['in'], VARIANT_BOOL, 'deleteSlides' )),
    COMMETHOD([dispid(2012)], HRESULT, 'SectionID',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['out', 'retval'], POINTER(BSTR), 'SectionID' )),
]
################################################################
## code template for SectionProperties implementation
##class SectionProperties_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Name(self, sectionIndex):
##        '-no docstring-'
##        #return Name
##
##    def Rename(self, sectionIndex, sectionName):
##        '-no docstring-'
##        #return 
##
##    def SlidesCount(self, sectionIndex):
##        '-no docstring-'
##        #return SlidesCount
##
##    def FirstSlide(self, sectionIndex):
##        '-no docstring-'
##        #return FirstSlide
##
##    def AddBeforeSlide(self, SlideIndex, sectionName):
##        '-no docstring-'
##        #return BeforeSlide
##
##    def AddSection(self, sectionIndex, sectionName):
##        '-no docstring-'
##        #return Section
##
##    def Move(self, sectionIndex, toPos):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, sectionIndex, deleteSlides):
##        '-no docstring-'
##        #return 
##
##    def SectionID(self, sectionIndex):
##        '-no docstring-'
##        #return SectionID
##


# values for enumeration 'XlColorIndex'
xlColorIndexAutomatic = -4105
xlColorIndexNone = -4142
XlColorIndex = c_int # enum

# values for enumeration 'XlConstants'
xlAutomatic = -4105
xlCombination = -4111
xlCustom = -4114
xlBar = 2
xlColumn = 3
xl3DBar = -4099
xl3DSurface = -4103
xlDefaultAutoFormat = -1
xlNone = -4142
xlAbove = 0
xlBelow = 1
xlBoth = 1
xlBottom = -4107
xlCenter = -4108
xlChecker = 9
xlCircle = 8
xlCorner = 2
xlCrissCross = 16
xlCross = 4
xlDiamond = 2
xlDistributed = -4117
xlFill = 5
xlFixedValue = 1
xlGeneral = 1
xlGray16 = 17
xlGray25 = -4124
xlGray50 = -4125
xlGray75 = -4126
xlGray8 = 18
xlGrid = 15
xlHigh = -4127
xlInside = 2
xlJustify = -4130
xlLeft = -4131
xlLightDown = 13
xlLightHorizontal = 11
xlLightUp = 14
xlLightVertical = 12
xlLow = -4134
xlMaximum = 2
xlMinimum = 4
xlMinusValues = 3
xlNextToAxis = 4
xlOpaque = 3
xlOutside = 3
xlPercent = 2
xlPlus = 9
xlPlusValues = 2
xlRight = -4152
xlScale = 3
xlSemiGray75 = 10
xlShowLabel = 4
xlShowLabelAndPercent = 5
xlShowPercent = 3
xlShowValue = 2
xlSingle = 2
xlSolid = 1
xlSquare = 1
xlStar = 5
xlStError = 4
xlTop = -4160
xlTransparent = 2
xlTriangle = 3
XlConstants = c_int # enum
class ActionSetting(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348D-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpActionType'
ppActionMixed = -2
ppActionNone = 0
ppActionNextSlide = 1
ppActionPreviousSlide = 2
ppActionFirstSlide = 3
ppActionLastSlide = 4
ppActionLastSlideViewed = 5
ppActionEndShow = 6
ppActionHyperlink = 7
ppActionRunMacro = 8
ppActionRunProgram = 9
ppActionNamedSlideShow = 10
ppActionOLEVerb = 11
ppActionPlay = 12
PpActionType = c_int # enum
class Hyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493465-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SoundEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493472-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ActionSetting._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Action',
              ( ['out', 'retval'], POINTER(PpActionType), 'Action' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Action',
              ( ['in'], PpActionType, 'Action' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ActionVerb',
              ( ['out', 'retval'], POINTER(BSTR), 'ActionVerb' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ActionVerb',
              ( ['in'], BSTR, 'ActionVerb' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'AnimateAction',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AnimateAction' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'AnimateAction',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AnimateAction' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Run',
              ( ['out', 'retval'], POINTER(BSTR), 'Run' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Run',
              ( ['in'], BSTR, 'Run' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'SlideShowName',
              ( ['out', 'retval'], POINTER(BSTR), 'SlideShowName' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'SlideShowName',
              ( ['in'], BSTR, 'SlideShowName' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Hyperlink',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'Hyperlink' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SoundEffect',
              ( ['out', 'retval'], POINTER(POINTER(SoundEffect)), 'SoundEffect' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'ShowAndReturn',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowAndReturn' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'ShowAndReturn',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowAndReturn' )),
]
################################################################
## code template for ActionSetting implementation
##class ActionSetting_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Action
##    def _set(self, Action):
##        '-no docstring-'
##    Action = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ActionVerb
##    def _set(self, ActionVerb):
##        '-no docstring-'
##    ActionVerb = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AnimateAction
##    def _set(self, AnimateAction):
##        '-no docstring-'
##    AnimateAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Run
##    def _set(self, Run):
##        '-no docstring-'
##    Run = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideShowName
##    def _set(self, SlideShowName):
##        '-no docstring-'
##    SlideShowName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return Hyperlink
##
##    @property
##    def SoundEffect(self):
##        '-no docstring-'
##        #return SoundEffect
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowAndReturn
##    def _set(self, ShowAndReturn):
##        '-no docstring-'
##    ShowAndReturn = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlErrorBarDirection'
xlChartX = -4168
xlChartY = 1
XlErrorBarDirection = c_int # enum
class SetEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F1-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SetEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Property',
              ( ['out', 'retval'], POINTER(MsoAnimProperty), 'Property' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Property',
              ( ['in'], MsoAnimProperty, 'Property' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'To',
              ( ['out', 'retval'], POINTER(VARIANT), 'To' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'To',
              ( ['in'], VARIANT, 'To' )),
]
################################################################
## code template for SetEffect implementation
##class SetEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Property
##    def _set(self, Property):
##        '-no docstring-'
##    Property = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return To
##    def _set(self, To):
##        '-no docstring-'
##    To = property(_get, _set, doc = _set.__doc__)
##

class FileConverters(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A50-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FileConverter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A51-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FileConverters._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(FileConverter)), 'Item' )),
]
################################################################
## code template for FileConverters implementation
##class FileConverters_Impl(object):
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##


# values for enumeration 'XlErrorBarInclude'
xlErrorBarIncludeBoth = 1
xlErrorBarIncludeMinusValues = 3
xlErrorBarIncludeNone = -4142
xlErrorBarIncludePlusValues = 2
XlErrorBarInclude = c_int # enum

# values for enumeration 'PpSlideSizeType'
ppSlideSizeOnScreen = 1
ppSlideSizeLetterPaper = 2
ppSlideSizeA4Paper = 3
ppSlideSize35MM = 4
ppSlideSizeOverhead = 5
ppSlideSizeBanner = 6
ppSlideSizeCustom = 7
ppSlideSizeLedgerPaper = 8
ppSlideSizeA3Paper = 9
ppSlideSizeB4ISOPaper = 10
ppSlideSizeB5ISOPaper = 11
ppSlideSizeB4JISPaper = 12
ppSlideSizeB5JISPaper = 13
ppSlideSizeHagakiCard = 14
ppSlideSizeOnScreen16x9 = 15
ppSlideSizeOnScreen16x10 = 16
PpSlideSizeType = c_int # enum
class RGBColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493470-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RGBColor._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType), 'RGB' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType, 'RGB' )),
]
################################################################
## code template for RGBColor implementation
##class RGBColor_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return RGB
##    def _set(self, RGB):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##

class Pane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CC-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpViewType'
ppViewSlide = 1
ppViewSlideMaster = 2
ppViewNotesPage = 3
ppViewHandoutMaster = 4
ppViewNotesMaster = 5
ppViewOutline = 6
ppViewSlideSorter = 7
ppViewTitleMaster = 8
ppViewNormal = 9
ppViewPrintPreview = 10
ppViewThumbnails = 11
ppViewMasterThumbnails = 12
PpViewType = c_int # enum
Pane._methods_ = [
    COMMETHOD([dispid(2000), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2001)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Active' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ViewType',
              ( ['out', 'retval'], POINTER(PpViewType), 'ViewType' )),
]
################################################################
## code template for Pane implementation
##class Pane_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return Active
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def ViewType(self):
##        '-no docstring-'
##        #return ViewType
##


# values for enumeration 'XlErrorBarType'
xlErrorBarTypeCustom = -4114
xlErrorBarTypeFixedValue = 1
xlErrorBarTypePercent = 2
xlErrorBarTypeStDev = -4155
xlErrorBarTypeStError = 4
XlErrorBarType = c_int # enum
class ExtraColors(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493468-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ExtraColors._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType, 'Type' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Clear'),
]
################################################################
## code template for ExtraColors implementation
##class ExtraColors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Type):
##        '-no docstring-'
##        #return 
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##

class Panes(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CB-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Panes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'Item' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
]
################################################################
## code template for Panes implementation
##class Panes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##

FileConverter._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'CanOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'CanOpen' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'CanSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'CanSave' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ClassName',
              ( ['out', 'retval'], POINTER(BSTR), 'ClassName' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'Creator' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Extensions',
              ( ['out', 'retval'], POINTER(BSTR), 'Extensions' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'FormatName',
              ( ['out', 'retval'], POINTER(BSTR), 'FormatName' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'Parent' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'Path' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'OpenFormat',
              ( ['out', 'retval'], POINTER(c_int), 'OpenFormat' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'SaveFormat',
              ( ['out', 'retval'], POINTER(c_int), 'SaveFormat' )),
]
################################################################
## code template for FileConverter implementation
##class FileConverter_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def CanOpen(self):
##        '-no docstring-'
##        #return CanOpen
##
##    @property
##    def CanSave(self):
##        '-no docstring-'
##        #return CanSave
##
##    @property
##    def ClassName(self):
##        '-no docstring-'
##        #return ClassName
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return Creator
##
##    @property
##    def Extensions(self):
##        '-no docstring-'
##        #return Extensions
##
##    @property
##    def FormatName(self):
##        '-no docstring-'
##        #return FormatName
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return Path
##
##    @property
##    def OpenFormat(self):
##        '-no docstring-'
##        #return OpenFormat
##
##    @property
##    def SaveFormat(self):
##        '-no docstring-'
##        #return SaveFormat
##

Design._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'SlideMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'SlideMaster' )),
    COMMETHOD([dispid(2004), 'hidden', 'propget'], HRESULT, 'TitleMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'TitleMaster' )),
    COMMETHOD([dispid(2005), 'hidden', 'propget'], HRESULT, 'HasTitleMaster',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTitleMaster' )),
    COMMETHOD([dispid(2006), 'hidden'], HRESULT, 'AddTitleMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'TitleMaster' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'Index' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Preserved',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Preserved' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Preserved',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Preserved' )),
    COMMETHOD([dispid(2010)], HRESULT, 'MoveTo',
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Delete'),
]
################################################################
## code template for Design implementation
##class Design_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def SlideMaster(self):
##        '-no docstring-'
##        #return SlideMaster
##
##    @property
##    def TitleMaster(self):
##        '-no docstring-'
##        #return TitleMaster
##
##    @property
##    def HasTitleMaster(self):
##        '-no docstring-'
##        #return HasTitleMaster
##
##    def AddTitleMaster(self):
##        '-no docstring-'
##        #return TitleMaster
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return Index
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Preserved
##    def _set(self, Preserved):
##        '-no docstring-'
##    Preserved = property(_get, _set, doc = _set.__doc__)
##
##    def MoveTo(self, toPos):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Presentation(CoClass):
    _reg_clsid_ = GUID('{91493444-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
class _Presentation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149349D-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class PresEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{91493463-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
Presentation._com_interfaces_ = [_Presentation]
Presentation._outgoing_interfaces_ = [PresEvents]

class Sequence(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DE-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Sequences(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DD-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TimeLine._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'MainSequence',
              ( ['out', 'retval'], POINTER(POINTER(Sequence)), 'MainSequence' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'InteractiveSequences',
              ( ['out', 'retval'], POINTER(POINTER(Sequences)), 'InteractiveSequences' )),
]
################################################################
## code template for TimeLine implementation
##class TimeLine_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def MainSequence(self):
##        '-no docstring-'
##        #return MainSequence
##
##    @property
##    def InteractiveSequences(self):
##        '-no docstring-'
##        #return InteractiveSequences
##

class Slides(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493469-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PageSetup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493466-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ColorSchemes(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149346E-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SlideShowSettings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345A-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Fonts(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493467-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DocumentWindows(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493455-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DocumentWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493457-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PrintOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345D-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpSaveAsFileType'
ppSaveAsPresentation = 1
ppSaveAsPowerPoint7 = 2
ppSaveAsPowerPoint4 = 3
ppSaveAsPowerPoint3 = 4
ppSaveAsTemplate = 5
ppSaveAsRTF = 6
ppSaveAsShow = 7
ppSaveAsAddIn = 8
ppSaveAsPowerPoint4FarEast = 10
ppSaveAsDefault = 11
ppSaveAsHTML = 12
ppSaveAsHTMLv3 = 13
ppSaveAsHTMLDual = 14
ppSaveAsMetaFile = 15
ppSaveAsGIF = 16
ppSaveAsJPG = 17
ppSaveAsPNG = 18
ppSaveAsBMP = 19
ppSaveAsWebArchive = 20
ppSaveAsTIF = 21
ppSaveAsPresForReview = 22
ppSaveAsEMF = 23
ppSaveAsOpenXMLPresentation = 24
ppSaveAsOpenXMLPresentationMacroEnabled = 25
ppSaveAsOpenXMLTemplate = 26
ppSaveAsOpenXMLTemplateMacroEnabled = 27
ppSaveAsOpenXMLShow = 28
ppSaveAsOpenXMLShowMacroEnabled = 29
ppSaveAsOpenXMLAddin = 30
ppSaveAsOpenXMLTheme = 31
ppSaveAsPDF = 32
ppSaveAsXPS = 33
ppSaveAsXMLPresentation = 34
ppSaveAsOpenDocumentPresentation = 35
ppSaveAsOpenXMLPicturePresentation = 36
ppSaveAsWMV = 37
ppSaveAsStrictOpenXMLPresentation = 38
ppSaveAsMP4 = 39
ppSaveAsExternalConverter = 64000
PpSaveAsFileType = c_int # enum

# values for enumeration 'PpFarEastLineBreakLevel'
ppFarEastLineBreakLevelNormal = 1
ppFarEastLineBreakLevelStrict = 2
ppFarEastLineBreakLevelCustom = 3
PpFarEastLineBreakLevel = c_int # enum
class PublishObjects(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CF-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class WebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CE-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Designs(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D6-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PrintRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345F-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpPrintRangeType'
ppPrintAll = 1
ppPrintSelection = 2
ppPrintCurrent = 3
ppPrintSlideRange = 4
ppPrintNamedSlideShow = 5
ppPrintSection = 6
PpPrintRangeType = c_int # enum
_Presentation._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'SlideMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'SlideMaster' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'TitleMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'TitleMaster' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'HasTitleMaster',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTitleMaster' )),
    COMMETHOD([dispid(2006)], HRESULT, 'AddTitleMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'TitleMaster' )),
    COMMETHOD([dispid(2007)], HRESULT, 'ApplyTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'TemplateName',
              ( ['out', 'retval'], POINTER(BSTR), 'TemplateName' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'NotesMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'NotesMaster' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'HandoutMaster',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'HandoutMaster' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Slides',
              ( ['out', 'retval'], POINTER(POINTER(Slides)), 'Slides' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'PageSetup' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'ColorSchemes',
              ( ['out', 'retval'], POINTER(POINTER(ColorSchemes)), 'ColorSchemes' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'ExtraColors',
              ( ['out', 'retval'], POINTER(POINTER(ExtraColors)), 'ExtraColors' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'SlideShowSettings',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowSettings)), 'SlideShowSettings' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Fonts',
              ( ['out', 'retval'], POINTER(POINTER(Fonts)), 'Fonts' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindows)), 'Windows' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'Tags',
              ( ['out', 'retval'], POINTER(POINTER(Tags)), 'Tags' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'DefaultShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'DefaultShape' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'BuiltInDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'BuiltInDocumentProperties' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'CustomDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'CustomDocumentProperties' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'VBProject',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBProject)), 'VBProject' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ReadOnly',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ReadOnly' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'FullName' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'Path' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Saved',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Saved' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Saved',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Saved' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'LayoutDirection',
              ( ['out', 'retval'], POINTER(PpDirection), 'LayoutDirection' )),
    COMMETHOD([dispid(2028), 'propput'], HRESULT, 'LayoutDirection',
              ( ['in'], PpDirection, 'LayoutDirection' )),
    COMMETHOD([dispid(2029)], HRESULT, 'NewWindow',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindow)), 'NewWindow' )),
    COMMETHOD([dispid(2030)], HRESULT, 'FollowHyperlink',
              ( ['in'], BSTR, 'Address' ),
              ( ['in', 'optional'], BSTR, 'SubAddress', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'NewWindow', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'AddHistory', True ),
              ( ['in', 'optional'], BSTR, 'ExtraInfo', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtraInfoMethod, 'Method', 0 ),
              ( ['in', 'optional'], BSTR, 'HeaderInfo', '' )),
    COMMETHOD([dispid(2031)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(2032), 'restricted'], HRESULT, 'Unused'),
    COMMETHOD([dispid(2033), 'propget'], HRESULT, 'PrintOptions',
              ( ['out', 'retval'], POINTER(POINTER(PrintOptions)), 'PrintOptions' )),
    COMMETHOD([dispid(2034)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], c_int, 'From', -1 ),
              ( ['in', 'optional'], c_int, 'To', -1 ),
              ( ['in', 'optional'], BSTR, 'PrintToFile', '' ),
              ( ['in', 'optional'], c_int, 'Copies', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Collate', -99 )),
    COMMETHOD([dispid(2035)], HRESULT, 'Save'),
    COMMETHOD([dispid(2036)], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], PpSaveAsFileType, 'FileFormat', 11 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'EmbedTrueTypeFonts', -2 )),
    COMMETHOD([dispid(2037)], HRESULT, 'SaveCopyAs',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], PpSaveAsFileType, 'FileFormat', 11 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'EmbedTrueTypeFonts', -2 )),
    COMMETHOD([dispid(2038)], HRESULT, 'Export',
              ( ['in'], BSTR, 'Path' ),
              ( ['in'], BSTR, 'FilterName' ),
              ( ['in', 'optional'], c_int, 'ScaleWidth', 0 ),
              ( ['in', 'optional'], c_int, 'ScaleHeight', 0 )),
    COMMETHOD([dispid(2039)], HRESULT, 'Close'),
    COMMETHOD([dispid(2040), 'hidden'], HRESULT, 'SetUndoText',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(2041), 'propget'], HRESULT, 'Container',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Container' )),
    COMMETHOD([dispid(2042), 'propget'], HRESULT, 'DisplayComments',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayComments' )),
    COMMETHOD([dispid(2042), 'propput'], HRESULT, 'DisplayComments',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayComments' )),
    COMMETHOD([dispid(2043), 'propget'], HRESULT, 'FarEastLineBreakLevel',
              ( ['out', 'retval'], POINTER(PpFarEastLineBreakLevel), 'FarEastLineBreakLevel' )),
    COMMETHOD([dispid(2043), 'propput'], HRESULT, 'FarEastLineBreakLevel',
              ( ['in'], PpFarEastLineBreakLevel, 'FarEastLineBreakLevel' )),
    COMMETHOD([dispid(2044), 'propget'], HRESULT, 'NoLineBreakBefore',
              ( ['out', 'retval'], POINTER(BSTR), 'NoLineBreakBefore' )),
    COMMETHOD([dispid(2044), 'propput'], HRESULT, 'NoLineBreakBefore',
              ( ['in'], BSTR, 'NoLineBreakBefore' )),
    COMMETHOD([dispid(2045), 'propget'], HRESULT, 'NoLineBreakAfter',
              ( ['out', 'retval'], POINTER(BSTR), 'NoLineBreakAfter' )),
    COMMETHOD([dispid(2045), 'propput'], HRESULT, 'NoLineBreakAfter',
              ( ['in'], BSTR, 'NoLineBreakAfter' )),
    COMMETHOD([dispid(2046)], HRESULT, 'UpdateLinks'),
    COMMETHOD([dispid(2047), 'propget'], HRESULT, 'SlideShowWindow',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowWindow)), 'SlideShowWindow' )),
    COMMETHOD([dispid(2048), 'propget'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFarEastLineBreakLanguageID), 'FarEastLineBreakLanguage' )),
    COMMETHOD([dispid(2048), 'propput'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFarEastLineBreakLanguageID, 'FarEastLineBreakLanguage' )),
    COMMETHOD([dispid(2049), 'hidden'], HRESULT, 'WebPagePreview'),
    COMMETHOD([dispid(2050), 'propget'], HRESULT, 'DefaultLanguageID',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLanguageID), 'DefaultLanguageID' )),
    COMMETHOD([dispid(2050), 'propput'], HRESULT, 'DefaultLanguageID',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLanguageID, 'DefaultLanguageID' )),
    COMMETHOD([dispid(2051), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'CommandBars' )),
    COMMETHOD([dispid(2052), 'hidden', 'propget'], HRESULT, 'PublishObjects',
              ( ['out', 'retval'], POINTER(POINTER(PublishObjects)), 'PublishObjects' )),
    COMMETHOD([dispid(2053), 'hidden', 'propget'], HRESULT, 'WebOptions',
              ( ['out', 'retval'], POINTER(POINTER(WebOptions)), 'WebOptions' )),
    COMMETHOD([dispid(2054), 'hidden', 'propget'], HRESULT, 'HTMLProject',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.HTMLProject)), 'HTMLProject' )),
    COMMETHOD([dispid(2055), 'hidden'], HRESULT, 'ReloadAs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'cp' )),
    COMMETHOD([dispid(2056), 'hidden'], HRESULT, 'MakeIntoTemplate',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'IsDesignTemplate' )),
    COMMETHOD([dispid(2057), 'propget'], HRESULT, 'EnvelopeVisible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'EnvelopeVisible' )),
    COMMETHOD([dispid(2057), 'propput'], HRESULT, 'EnvelopeVisible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'EnvelopeVisible' )),
    COMMETHOD([dispid(2058), 'hidden'], HRESULT, 'sblt',
              ( ['in'], BSTR, 's' )),
    COMMETHOD([dispid(2059), 'propget'], HRESULT, 'VBASigned',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'VBASigned' )),
    COMMETHOD([dispid(2061), 'propget'], HRESULT, 'SnapToGrid',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'SnapToGrid' )),
    COMMETHOD([dispid(2061), 'propput'], HRESULT, 'SnapToGrid',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SnapToGrid' )),
    COMMETHOD([dispid(2062), 'propget'], HRESULT, 'GridDistance',
              ( ['out', 'retval'], POINTER(c_float), 'GridDistance' )),
    COMMETHOD([dispid(2062), 'propput'], HRESULT, 'GridDistance',
              ( ['in'], c_float, 'GridDistance' )),
    COMMETHOD([dispid(2063), 'propget'], HRESULT, 'Designs',
              ( ['out', 'retval'], POINTER(POINTER(Designs)), 'Designs' )),
    COMMETHOD([dispid(2064)], HRESULT, 'Merge',
              ( ['in'], BSTR, 'Path' )),
    COMMETHOD([dispid(2065)], HRESULT, 'CheckIn',
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveChanges', True ),
              ( ['in', 'optional'], VARIANT, 'Comments' ),
              ( ['in', 'optional'], VARIANT, 'MakePublic' )),
    COMMETHOD([dispid(2066)], HRESULT, 'CanCheckIn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'CanCheckIn' )),
    COMMETHOD([dispid(2067), 'propget'], HRESULT, 'Signatures',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SignatureSet)), 'Signatures' )),
    COMMETHOD([dispid(2068), 'propget'], HRESULT, 'RemovePersonalInformation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RemovePersonalInformation' )),
    COMMETHOD([dispid(2068), 'propput'], HRESULT, 'RemovePersonalInformation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RemovePersonalInformation' )),
    COMMETHOD([dispid(2069), 'hidden'], HRESULT, 'SendForReview',
              ( ['in', 'optional'], BSTR, 'Recipients' ),
              ( ['in', 'optional'], BSTR, 'Subject' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ShowMessage', True ),
              ( ['in', 'optional'], VARIANT, 'IncludeAttachment' )),
    COMMETHOD([dispid(2070), 'hidden'], HRESULT, 'ReplyWithChanges',
              ( ['in', 'optional'], VARIANT_BOOL, 'ShowMessage', True )),
    COMMETHOD([dispid(2071)], HRESULT, 'EndReview'),
    COMMETHOD([dispid(2072), 'hidden', 'propget'], HRESULT, 'HasRevisionInfo',
              ( ['out', 'retval'], POINTER(PpRevisionInfo), 'HasRevisionInfo' )),
    COMMETHOD([dispid(2073), 'hidden'], HRESULT, 'AddBaseline',
              ( ['in', 'optional'], BSTR, 'FileName', '' )),
    COMMETHOD([dispid(2074), 'hidden'], HRESULT, 'RemoveBaseline'),
    COMMETHOD([dispid(2075), 'propget'], HRESULT, 'PasswordEncryptionProvider',
              ( ['out', 'retval'], POINTER(BSTR), 'PasswordEncryptionProvider' )),
    COMMETHOD([dispid(2076), 'propget'], HRESULT, 'PasswordEncryptionAlgorithm',
              ( ['out', 'retval'], POINTER(BSTR), 'PasswordEncryptionAlgorithm' )),
    COMMETHOD([dispid(2077), 'propget'], HRESULT, 'PasswordEncryptionKeyLength',
              ( ['out', 'retval'], POINTER(c_int), 'PasswordEncryptionKeyLength' )),
    COMMETHOD([dispid(2078), 'propget'], HRESULT, 'PasswordEncryptionFileProperties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'PasswordEncryptionFileProperties' )),
    COMMETHOD([dispid(2079)], HRESULT, 'SetPasswordEncryptionOptions',
              ( ['in'], BSTR, 'PasswordEncryptionProvider' ),
              ( ['in'], BSTR, 'PasswordEncryptionAlgorithm' ),
              ( ['in'], c_int, 'PasswordEncryptionKeyLength' ),
              ( ['in'], VARIANT_BOOL, 'PasswordEncryptionFileProperties' )),
    COMMETHOD([dispid(2080), 'propget'], HRESULT, 'Password',
              ( ['out', 'retval'], POINTER(BSTR), 'Password' )),
    COMMETHOD([dispid(2080), 'propput'], HRESULT, 'Password',
              ( ['in'], BSTR, 'Password' )),
    COMMETHOD([dispid(2081), 'propget'], HRESULT, 'WritePassword',
              ( ['out', 'retval'], POINTER(BSTR), 'WritePassword' )),
    COMMETHOD([dispid(2081), 'propput'], HRESULT, 'WritePassword',
              ( ['in'], BSTR, 'WritePassword' )),
    COMMETHOD([dispid(2082), 'propget'], HRESULT, 'Permission',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Permission)), 'Permission' )),
    COMMETHOD([dispid(2083), 'propget'], HRESULT, 'SharedWorkspace',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SharedWorkspace)), 'SharedWorkspace' )),
    COMMETHOD([dispid(2084), 'propget'], HRESULT, 'Sync',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Sync)), 'Sync' )),
    COMMETHOD([dispid(2085)], HRESULT, 'SendFaxOverInternet',
              ( ['in', 'optional'], BSTR, 'Recipients' ),
              ( ['in', 'optional'], BSTR, 'Subject' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ShowMessage', False )),
    COMMETHOD([dispid(2086), 'propget'], HRESULT, 'DocumentLibraryVersions',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.DocumentLibraryVersions)), 'DocumentLibraryVersions' )),
    COMMETHOD([dispid(2087), 'propget'], HRESULT, 'ContentTypeProperties',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MetaProperties)), 'ContentTypeProperties' )),
    COMMETHOD([dispid(2088), 'hidden', 'propget'], HRESULT, 'SectionCount',
              ( ['out', 'retval'], POINTER(c_int), 'SectionCount' )),
    COMMETHOD([dispid(2089), 'hidden', 'propget'], HRESULT, 'HasSections',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HasSections' )),
    COMMETHOD([dispid(2090), 'hidden'], HRESULT, 'NewSectionAfter',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], VARIANT_BOOL, 'AfterSlide' ),
              ( ['in'], BSTR, 'sectionTitle' ),
              ( ['out'], POINTER(c_int), 'newSectionIndex' )),
    COMMETHOD([dispid(2091), 'hidden'], HRESULT, 'DeleteSection',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(2092), 'hidden'], HRESULT, 'DisableSections'),
    COMMETHOD([dispid(2093), 'hidden'], HRESULT, 'sectionTitle',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(BSTR), 'sectionTitle' )),
    COMMETHOD([dispid(2094)], HRESULT, 'RemoveDocumentInformation',
              ( ['in'], PpRemoveDocInfoType, 'Type' )),
    COMMETHOD([dispid(2095)], HRESULT, 'CheckInWithVersion',
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveChanges', True ),
              ( ['in', 'optional'], VARIANT, 'Comments' ),
              ( ['in', 'optional'], VARIANT, 'MakePublic' ),
              ( ['in', 'optional'], VARIANT, 'VersionType' )),
    COMMETHOD([dispid(2096)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], BSTR, 'Path' ),
              ( ['in'], PpFixedFormatType, 'FixedFormatType' ),
              ( ['in', 'optional'], PpFixedFormatIntent, 'Intent', 1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FrameSlides', 0 ),
              ( ['in', 'optional'], PpPrintHandoutOrder, 'HandoutOrder', 1 ),
              ( ['in', 'optional'], PpPrintOutputType, 'OutputType', 1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintHiddenSlides', 0 ),
              ( ['in', 'optional'], POINTER(PrintRange), 'PrintRange', 0 ),
              ( ['in', 'optional'], PpPrintRangeType, 'RangeType', 1 ),
              ( ['in', 'optional'], BSTR, 'SlideShowName', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProperties', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRMSettings', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT, 'ExternalExporter' )),
    COMMETHOD([dispid(2097), 'propget'], HRESULT, 'ServerPolicy',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ServerPolicy)), 'ServerPolicy' )),
    COMMETHOD([dispid(2098)], HRESULT, 'GetWorkflowTasks',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WorkflowTasks)), 'GetWorkflowTasks' )),
    COMMETHOD([dispid(2099)], HRESULT, 'GetWorkflowTemplates',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WorkflowTemplates)), 'GetWorkflowTemplates' )),
    COMMETHOD([dispid(2100)], HRESULT, 'LockServerFile'),
    COMMETHOD([dispid(2101), 'propget'], HRESULT, 'DocumentInspectors',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.DocumentInspectors)), 'DocumentInspectors' )),
    COMMETHOD([dispid(2102), 'propget'], HRESULT, 'HasVBProject',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HasVBProject' )),
    COMMETHOD([dispid(2103), 'propget'], HRESULT, 'CustomXMLParts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLParts)), 'CustomXMLParts' )),
    COMMETHOD([dispid(2104), 'propget'], HRESULT, 'Final',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Final' )),
    COMMETHOD([dispid(2104), 'propput'], HRESULT, 'Final',
              ( ['in'], VARIANT_BOOL, 'Final' )),
    COMMETHOD([dispid(2105)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'themeName' )),
    COMMETHOD([dispid(2106), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(2107), 'propget'], HRESULT, 'Research',
              ( ['out', 'retval'], POINTER(POINTER(Research)), 'Research' )),
    COMMETHOD([dispid(2108)], HRESULT, 'PublishSlides',
              ( ['in'], BSTR, 'SlideLibraryUrl' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Overwrite', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseSlideOrder', False )),
    COMMETHOD([dispid(2109), 'propget'], HRESULT, 'EncryptionProvider',
              ( ['out', 'retval'], POINTER(BSTR), 'EncryptionProvider' )),
    COMMETHOD([dispid(2109), 'propput'], HRESULT, 'EncryptionProvider',
              ( ['in'], BSTR, 'EncryptionProvider' )),
    COMMETHOD([dispid(2110), 'hidden'], HRESULT, 'Convert'),
    COMMETHOD([dispid(2111), 'propget'], HRESULT, 'SectionProperties',
              ( ['out', 'retval'], POINTER(POINTER(SectionProperties)), 'SectionProperties' )),
    COMMETHOD([dispid(2112), 'propget'], HRESULT, 'Coauthoring',
              ( ['out', 'retval'], POINTER(POINTER(Coauthoring)), 'Coauthoring' )),
    COMMETHOD([dispid(2113)], HRESULT, 'MergeWithBaseline',
              ( ['in'], BSTR, 'withPresentation' ),
              ( ['in'], BSTR, 'baselinePresentation' )),
    COMMETHOD([dispid(2114), 'propget'], HRESULT, 'InMergeMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'InMergeMode' )),
    COMMETHOD([dispid(2115)], HRESULT, 'AcceptAll'),
    COMMETHOD([dispid(2116)], HRESULT, 'RejectAll'),
    COMMETHOD([dispid(2117)], HRESULT, 'EnsureAllMediaUpgraded'),
    COMMETHOD([dispid(2118), 'propget'], HRESULT, 'Broadcast',
              ( ['out', 'retval'], POINTER(POINTER(Broadcast)), 'Broadcast' )),
    COMMETHOD([dispid(2119), 'propget'], HRESULT, 'HasNotesMaster',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HasNotesMaster' )),
    COMMETHOD([dispid(2120), 'propget'], HRESULT, 'HasHandoutMaster',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HasHandoutMaster' )),
    COMMETHOD([dispid(2121)], HRESULT, 'Convert2',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2122), 'propget'], HRESULT, 'CreateVideoStatus',
              ( ['out', 'retval'], POINTER(PpMediaTaskStatus), 'CreateVideoStatus' )),
    COMMETHOD([dispid(2123)], HRESULT, 'CreateVideo',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseTimingsAndNarrations', True ),
              ( ['in', 'optional'], c_int, 'DefaultSlideDuration', 5 ),
              ( ['in', 'optional'], c_int, 'VertResolution', 720 ),
              ( ['in', 'optional'], c_int, 'FramesPerSecond', 30 ),
              ( ['in', 'optional'], c_int, 'Quality', 85 )),
    COMMETHOD([dispid(2124)], HRESULT, 'ApplyTemplate2',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'VariantGUID' )),
    COMMETHOD([dispid(2125), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pfChartDataPointTrack' )),
    COMMETHOD([dispid(2125), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'pfChartDataPointTrack' )),
    COMMETHOD([dispid(2126)], HRESULT, 'ExportAsFixedFormat2',
              ( ['in'], BSTR, 'Path' ),
              ( ['in'], PpFixedFormatType, 'FixedFormatType' ),
              ( ['in', 'optional'], PpFixedFormatIntent, 'Intent', 1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FrameSlides', 0 ),
              ( ['in', 'optional'], PpPrintHandoutOrder, 'HandoutOrder', 1 ),
              ( ['in', 'optional'], PpPrintOutputType, 'OutputType', 1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintHiddenSlides', 0 ),
              ( ['in', 'optional'], POINTER(PrintRange), 'PrintRange', 0 ),
              ( ['in', 'optional'], PpPrintRangeType, 'RangeType', 1 ),
              ( ['in', 'optional'], BSTR, 'SlideShowName', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProperties', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRMSettings', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeMarkup', False ),
              ( ['in', 'optional'], VARIANT, 'ExternalExporter' )),
    COMMETHOD([dispid(2127), 'propget'], HRESULT, 'Guides',
              ( ['out', 'retval'], POINTER(POINTER(Guides)), 'Guides' )),
    COMMETHOD([dispid(2128), 'propget'], HRESULT, 'WorkIdentity',
              ( ['out', 'retval'], POINTER(BSTR), 'WorkIdentity' )),
    COMMETHOD([dispid(2128), 'propput'], HRESULT, 'WorkIdentity',
              ( ['in'], BSTR, 'WorkIdentity' )),
    COMMETHOD([dispid(2129), 'propget'], HRESULT, 'AutoSaveOn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pfAutoSaveOn' )),
    COMMETHOD([dispid(2129), 'propput'], HRESULT, 'AutoSaveOn',
              ( ['in'], VARIANT_BOOL, 'pfAutoSaveOn' )),
]
################################################################
## code template for _Presentation implementation
##class _Presentation_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def SlideMaster(self):
##        '-no docstring-'
##        #return SlideMaster
##
##    @property
##    def TitleMaster(self):
##        '-no docstring-'
##        #return TitleMaster
##
##    @property
##    def HasTitleMaster(self):
##        '-no docstring-'
##        #return HasTitleMaster
##
##    def AddTitleMaster(self):
##        '-no docstring-'
##        #return TitleMaster
##
##    def ApplyTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TemplateName(self):
##        '-no docstring-'
##        #return TemplateName
##
##    @property
##    def NotesMaster(self):
##        '-no docstring-'
##        #return NotesMaster
##
##    @property
##    def HandoutMaster(self):
##        '-no docstring-'
##        #return HandoutMaster
##
##    @property
##    def Slides(self):
##        '-no docstring-'
##        #return Slides
##
##    @property
##    def PageSetup(self):
##        '-no docstring-'
##        #return PageSetup
##
##    @property
##    def ColorSchemes(self):
##        '-no docstring-'
##        #return ColorSchemes
##
##    @property
##    def ExtraColors(self):
##        '-no docstring-'
##        #return ExtraColors
##
##    @property
##    def SlideShowSettings(self):
##        '-no docstring-'
##        #return SlideShowSettings
##
##    @property
##    def Fonts(self):
##        '-no docstring-'
##        #return Fonts
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return Windows
##
##    @property
##    def Tags(self):
##        '-no docstring-'
##        #return Tags
##
##    @property
##    def DefaultShape(self):
##        '-no docstring-'
##        #return DefaultShape
##
##    @property
##    def BuiltInDocumentProperties(self):
##        '-no docstring-'
##        #return BuiltInDocumentProperties
##
##    @property
##    def CustomDocumentProperties(self):
##        '-no docstring-'
##        #return CustomDocumentProperties
##
##    @property
##    def VBProject(self):
##        '-no docstring-'
##        #return VBProject
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return ReadOnly
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return FullName
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return Path
##
##    def _get(self):
##        '-no docstring-'
##        #return Saved
##    def _set(self, Saved):
##        '-no docstring-'
##    Saved = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LayoutDirection
##    def _set(self, LayoutDirection):
##        '-no docstring-'
##    LayoutDirection = property(_get, _set, doc = _set.__doc__)
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return NewWindow
##
##    def FollowHyperlink(self, Address, SubAddress, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
##        '-no docstring-'
##        #return 
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def Unused(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PrintOptions(self):
##        '-no docstring-'
##        #return PrintOptions
##
##    def PrintOut(self, From, To, PrintToFile, Copies, Collate):
##        '-no docstring-'
##        #return 
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, FileName, FileFormat, EmbedTrueTypeFonts):
##        '-no docstring-'
##        #return 
##
##    def SaveCopyAs(self, FileName, FileFormat, EmbedTrueTypeFonts):
##        '-no docstring-'
##        #return 
##
##    def Export(self, Path, FilterName, ScaleWidth, ScaleHeight):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def SetUndoText(self, Text):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Container(self):
##        '-no docstring-'
##        #return Container
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayComments
##    def _set(self, DisplayComments):
##        '-no docstring-'
##    DisplayComments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FarEastLineBreakLevel
##    def _set(self, FarEastLineBreakLevel):
##        '-no docstring-'
##    FarEastLineBreakLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NoLineBreakBefore
##    def _set(self, NoLineBreakBefore):
##        '-no docstring-'
##    NoLineBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NoLineBreakAfter
##    def _set(self, NoLineBreakAfter):
##        '-no docstring-'
##    NoLineBreakAfter = property(_get, _set, doc = _set.__doc__)
##
##    def UpdateLinks(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SlideShowWindow(self):
##        '-no docstring-'
##        #return SlideShowWindow
##
##    def _get(self):
##        '-no docstring-'
##        #return FarEastLineBreakLanguage
##    def _set(self, FarEastLineBreakLanguage):
##        '-no docstring-'
##    FarEastLineBreakLanguage = property(_get, _set, doc = _set.__doc__)
##
##    def WebPagePreview(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DefaultLanguageID
##    def _set(self, DefaultLanguageID):
##        '-no docstring-'
##    DefaultLanguageID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return CommandBars
##
##    @property
##    def PublishObjects(self):
##        '-no docstring-'
##        #return PublishObjects
##
##    @property
##    def WebOptions(self):
##        '-no docstring-'
##        #return WebOptions
##
##    @property
##    def HTMLProject(self):
##        '-no docstring-'
##        #return HTMLProject
##
##    def ReloadAs(self, cp):
##        '-no docstring-'
##        #return 
##
##    def MakeIntoTemplate(self, IsDesignTemplate):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return EnvelopeVisible
##    def _set(self, EnvelopeVisible):
##        '-no docstring-'
##    EnvelopeVisible = property(_get, _set, doc = _set.__doc__)
##
##    def sblt(self, s):
##        '-no docstring-'
##        #return 
##
##    @property
##    def VBASigned(self):
##        '-no docstring-'
##        #return VBASigned
##
##    def _get(self):
##        '-no docstring-'
##        #return SnapToGrid
##    def _set(self, SnapToGrid):
##        '-no docstring-'
##    SnapToGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return GridDistance
##    def _set(self, GridDistance):
##        '-no docstring-'
##    GridDistance = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Designs(self):
##        '-no docstring-'
##        #return Designs
##
##    def Merge(self, Path):
##        '-no docstring-'
##        #return 
##
##    def CheckIn(self, SaveChanges, Comments, MakePublic):
##        '-no docstring-'
##        #return 
##
##    def CanCheckIn(self):
##        '-no docstring-'
##        #return CanCheckIn
##
##    @property
##    def Signatures(self):
##        '-no docstring-'
##        #return Signatures
##
##    def _get(self):
##        '-no docstring-'
##        #return RemovePersonalInformation
##    def _set(self, RemovePersonalInformation):
##        '-no docstring-'
##    RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
##
##    def SendForReview(self, Recipients, Subject, ShowMessage, IncludeAttachment):
##        '-no docstring-'
##        #return 
##
##    def ReplyWithChanges(self, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    def EndReview(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasRevisionInfo(self):
##        '-no docstring-'
##        #return HasRevisionInfo
##
##    def AddBaseline(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def RemoveBaseline(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PasswordEncryptionProvider(self):
##        '-no docstring-'
##        #return PasswordEncryptionProvider
##
##    @property
##    def PasswordEncryptionAlgorithm(self):
##        '-no docstring-'
##        #return PasswordEncryptionAlgorithm
##
##    @property
##    def PasswordEncryptionKeyLength(self):
##        '-no docstring-'
##        #return PasswordEncryptionKeyLength
##
##    @property
##    def PasswordEncryptionFileProperties(self):
##        '-no docstring-'
##        #return PasswordEncryptionFileProperties
##
##    def SetPasswordEncryptionOptions(self, PasswordEncryptionProvider, PasswordEncryptionAlgorithm, PasswordEncryptionKeyLength, PasswordEncryptionFileProperties):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Password
##    def _set(self, Password):
##        '-no docstring-'
##    Password = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WritePassword
##    def _set(self, WritePassword):
##        '-no docstring-'
##    WritePassword = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Permission(self):
##        '-no docstring-'
##        #return Permission
##
##    @property
##    def SharedWorkspace(self):
##        '-no docstring-'
##        #return SharedWorkspace
##
##    @property
##    def Sync(self):
##        '-no docstring-'
##        #return Sync
##
##    def SendFaxOverInternet(self, Recipients, Subject, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DocumentLibraryVersions(self):
##        '-no docstring-'
##        #return DocumentLibraryVersions
##
##    @property
##    def ContentTypeProperties(self):
##        '-no docstring-'
##        #return ContentTypeProperties
##
##    @property
##    def SectionCount(self):
##        '-no docstring-'
##        #return SectionCount
##
##    @property
##    def HasSections(self):
##        '-no docstring-'
##        #return HasSections
##
##    def NewSectionAfter(self, Index, AfterSlide, sectionTitle):
##        '-no docstring-'
##        #return newSectionIndex
##
##    def DeleteSection(self, Index):
##        '-no docstring-'
##        #return 
##
##    def DisableSections(self):
##        '-no docstring-'
##        #return 
##
##    def sectionTitle(self, Index):
##        '-no docstring-'
##        #return sectionTitle
##
##    def RemoveDocumentInformation(self, Type):
##        '-no docstring-'
##        #return 
##
##    def CheckInWithVersion(self, SaveChanges, Comments, MakePublic, VersionType):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, Path, FixedFormatType, Intent, FrameSlides, HandoutOrder, OutputType, PrintHiddenSlides, PrintRange, RangeType, SlideShowName, IncludeDocProperties, KeepIRMSettings, DocStructureTags, BitmapMissingFonts, UseISO19005_1, ExternalExporter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ServerPolicy(self):
##        '-no docstring-'
##        #return ServerPolicy
##
##    def GetWorkflowTasks(self):
##        '-no docstring-'
##        #return GetWorkflowTasks
##
##    def GetWorkflowTemplates(self):
##        '-no docstring-'
##        #return GetWorkflowTemplates
##
##    def LockServerFile(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DocumentInspectors(self):
##        '-no docstring-'
##        #return DocumentInspectors
##
##    @property
##    def HasVBProject(self):
##        '-no docstring-'
##        #return HasVBProject
##
##    @property
##    def CustomXMLParts(self):
##        '-no docstring-'
##        #return CustomXMLParts
##
##    def _get(self):
##        '-no docstring-'
##        #return Final
##    def _set(self, Final):
##        '-no docstring-'
##    Final = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyTheme(self, themeName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    @property
##    def Research(self):
##        '-no docstring-'
##        #return Research
##
##    def PublishSlides(self, SlideLibraryUrl, Overwrite, UseSlideOrder):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return EncryptionProvider
##    def _set(self, EncryptionProvider):
##        '-no docstring-'
##    EncryptionProvider = property(_get, _set, doc = _set.__doc__)
##
##    def Convert(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SectionProperties(self):
##        '-no docstring-'
##        #return SectionProperties
##
##    @property
##    def Coauthoring(self):
##        '-no docstring-'
##        #return Coauthoring
##
##    def MergeWithBaseline(self, withPresentation, baselinePresentation):
##        '-no docstring-'
##        #return 
##
##    @property
##    def InMergeMode(self):
##        '-no docstring-'
##        #return InMergeMode
##
##    def AcceptAll(self):
##        '-no docstring-'
##        #return 
##
##    def RejectAll(self):
##        '-no docstring-'
##        #return 
##
##    def EnsureAllMediaUpgraded(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Broadcast(self):
##        '-no docstring-'
##        #return Broadcast
##
##    @property
##    def HasNotesMaster(self):
##        '-no docstring-'
##        #return HasNotesMaster
##
##    @property
##    def HasHandoutMaster(self):
##        '-no docstring-'
##        #return HasHandoutMaster
##
##    def Convert2(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CreateVideoStatus(self):
##        '-no docstring-'
##        #return CreateVideoStatus
##
##    def CreateVideo(self, FileName, UseTimingsAndNarrations, DefaultSlideDuration, VertResolution, FramesPerSecond, Quality):
##        '-no docstring-'
##        #return 
##
##    def ApplyTemplate2(self, FileName, VariantGUID):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pfChartDataPointTrack
##    def _set(self, pfChartDataPointTrack):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    def ExportAsFixedFormat2(self, Path, FixedFormatType, Intent, FrameSlides, HandoutOrder, OutputType, PrintHiddenSlides, PrintRange, RangeType, SlideShowName, IncludeDocProperties, KeepIRMSettings, DocStructureTags, BitmapMissingFonts, UseISO19005_1, IncludeMarkup, ExternalExporter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Guides(self):
##        '-no docstring-'
##        #return Guides
##
##    def _get(self):
##        '-no docstring-'
##        #return WorkIdentity
##    def _set(self, WorkIdentity):
##        '-no docstring-'
##    WorkIdentity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfAutoSaveOn
##    def _set(self, pfAutoSaveOn):
##        '-no docstring-'
##    AutoSaveOn = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlHAlign'
xlHAlignCenter = -4108
xlHAlignCenterAcrossSelection = 7
xlHAlignDistributed = -4117
xlHAlignFill = 5
xlHAlignGeneral = 1
xlHAlignJustify = -4130
xlHAlignLeft = -4131
xlHAlignRight = -4152
XlHAlign = c_int # enum

# values for enumeration 'MsoAnimFilterEffectType'
msoAnimFilterEffectTypeNone = 0
msoAnimFilterEffectTypeBarn = 1
msoAnimFilterEffectTypeBlinds = 2
msoAnimFilterEffectTypeBox = 3
msoAnimFilterEffectTypeCheckerboard = 4
msoAnimFilterEffectTypeCircle = 5
msoAnimFilterEffectTypeDiamond = 6
msoAnimFilterEffectTypeDissolve = 7
msoAnimFilterEffectTypeFade = 8
msoAnimFilterEffectTypeImage = 9
msoAnimFilterEffectTypePixelate = 10
msoAnimFilterEffectTypePlus = 11
msoAnimFilterEffectTypeRandomBar = 12
msoAnimFilterEffectTypeSlide = 13
msoAnimFilterEffectTypeStretch = 14
msoAnimFilterEffectTypeStrips = 15
msoAnimFilterEffectTypeWedge = 16
msoAnimFilterEffectTypeWheel = 17
msoAnimFilterEffectTypeWipe = 18
MsoAnimFilterEffectType = c_int # enum
class MouseTracker(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{914934BE-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
MouseTracker._methods_ = [
    COMMETHOD([], HRESULT, 'OnTrack',
              ( ['in'], c_float, 'X' ),
              ( ['in'], c_float, 'Y' )),
    COMMETHOD([], HRESULT, 'EndTrack',
              ( ['in'], c_float, 'X' ),
              ( ['in'], c_float, 'Y' )),
]
################################################################
## code template for MouseTracker implementation
##class MouseTracker_Impl(object):
##    def OnTrack(self, X, Y):
##        '-no docstring-'
##        #return 
##
##    def EndTrack(self, X, Y):
##        '-no docstring-'
##        #return 
##

Designs._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], BSTR, 'designName' ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Add' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Load',
              ( ['in'], BSTR, 'TemplateName' ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Load' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Clone',
              ( ['in'], POINTER(Design), 'pOriginal' ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Clone' )),
]
################################################################
## code template for Designs implementation
##class Designs_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, designName, Index):
##        '-no docstring-'
##        #return Add
##
##    def Load(self, TemplateName, Index):
##        '-no docstring-'
##        #return Load
##
##    def Clone(self, pOriginal, Index):
##        '-no docstring-'
##        #return Clone
##


# values for enumeration 'XlTickLabelOrientation'
xlTickLabelOrientationAutomatic = -4105
xlTickLabelOrientationDownward = -4170
xlTickLabelOrientationHorizontal = -4128
xlTickLabelOrientationUpward = -4171
xlTickLabelOrientationVertical = -4166
XlTickLabelOrientation = c_int # enum
SoundEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpSoundEffectType), 'Type' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Type',
              ( ['in'], PpSoundEffectType, 'Type' )),
    COMMETHOD([dispid(2005)], HRESULT, 'ImportFromFile',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2006)], HRESULT, 'Play'),
]
################################################################
## code template for SoundEffect implementation
##class SoundEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def ImportFromFile(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def Play(self):
##        '-no docstring-'
##        #return 
##

class DefaultWebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CD-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpFrameColors'
ppFrameColorsBrowserColors = 1
ppFrameColorsPresentationSchemeTextColor = 2
ppFrameColorsPresentationSchemeAccentColor = 3
ppFrameColorsWhiteTextOnBlack = 4
ppFrameColorsBlackTextOnWhite = 5
PpFrameColors = c_int # enum
DefaultWebOptions._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'IncludeNavigation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IncludeNavigation' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'IncludeNavigation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'IncludeNavigation' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'FrameColors',
              ( ['out', 'retval'], POINTER(PpFrameColors), 'FrameColors' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'FrameColors',
              ( ['in'], PpFrameColors, 'FrameColors' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ResizeGraphics',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ResizeGraphics' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ResizeGraphics',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ResizeGraphics' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ShowSlideAnimation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowSlideAnimation' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ShowSlideAnimation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowSlideAnimation' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'OrganizeInFolder' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'OrganizeInFolder' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UseLongFileNames' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UseLongFileNames' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'RelyOnVML',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RelyOnVML' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelyOnVML' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'AllowPNG',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AllowPNG' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AllowPNG' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ScreenSize',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize), 'ScreenSize' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize, 'ScreenSize' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Encoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'Encoding' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'Encoding' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'UpdateLinksOnSave',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UpdateLinksOnSave' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'UpdateLinksOnSave',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UpdateLinksOnSave' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'CheckIfOfficeIsHTMLEditor' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'CheckIfOfficeIsHTMLEditor' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AlwaysSaveInDefaultEncoding' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AlwaysSaveInDefaultEncoding' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Fonts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WebPageFonts)), 'Fonts' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'FolderSuffix',
              ( ['out', 'retval'], POINTER(BSTR), 'FolderSuffix' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'TargetBrowser',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser), 'TargetBrowser' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser, 'TargetBrowser' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'SaveNewWebPagesAsWebArchives' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveNewWebPagesAsWebArchives' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'HTMLVersion',
              ( ['out', 'retval'], POINTER(PpHTMLVersion), 'HTMLVersion' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'HTMLVersion',
              ( ['in'], PpHTMLVersion, 'HTMLVersion' )),
]
################################################################
## code template for DefaultWebOptions implementation
##class DefaultWebOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return IncludeNavigation
##    def _set(self, IncludeNavigation):
##        '-no docstring-'
##    IncludeNavigation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FrameColors
##    def _set(self, FrameColors):
##        '-no docstring-'
##    FrameColors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ResizeGraphics
##    def _set(self, ResizeGraphics):
##        '-no docstring-'
##    ResizeGraphics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowSlideAnimation
##    def _set(self, ShowSlideAnimation):
##        '-no docstring-'
##    ShowSlideAnimation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OrganizeInFolder
##    def _set(self, OrganizeInFolder):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseLongFileNames
##    def _set(self, UseLongFileNames):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RelyOnVML
##    def _set(self, RelyOnVML):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AllowPNG
##    def _set(self, AllowPNG):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ScreenSize
##    def _set(self, ScreenSize):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Encoding
##    def _set(self, Encoding):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UpdateLinksOnSave
##    def _set(self, UpdateLinksOnSave):
##        '-no docstring-'
##    UpdateLinksOnSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CheckIfOfficeIsHTMLEditor
##    def _set(self, CheckIfOfficeIsHTMLEditor):
##        '-no docstring-'
##    CheckIfOfficeIsHTMLEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AlwaysSaveInDefaultEncoding
##    def _set(self, AlwaysSaveInDefaultEncoding):
##        '-no docstring-'
##    AlwaysSaveInDefaultEncoding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fonts(self):
##        '-no docstring-'
##        #return Fonts
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return FolderSuffix
##
##    def _get(self):
##        '-no docstring-'
##        #return TargetBrowser
##    def _set(self, TargetBrowser):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SaveNewWebPagesAsWebArchives
##    def _set(self, SaveNewWebPagesAsWebArchives):
##        '-no docstring-'
##    SaveNewWebPagesAsWebArchives = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HTMLVersion
##    def _set(self, HTMLVersion):
##        '-no docstring-'
##    HTMLVersion = property(_get, _set, doc = _set.__doc__)
##

Hyperlink._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHyperlinkType), 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Address',
              ( ['out', 'retval'], POINTER(BSTR), 'Address' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Address',
              ( ['in'], BSTR, 'Address' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'SubAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'SubAddress' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'SubAddress',
              ( ['in'], BSTR, 'SubAddress' )),
    COMMETHOD([dispid(2006)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'EmailSubject',
              ( ['out', 'retval'], POINTER(BSTR), 'EmailSubject' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'EmailSubject',
              ( ['in'], BSTR, 'EmailSubject' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'ScreenTip',
              ( ['out', 'retval'], POINTER(BSTR), 'ScreenTip' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'ScreenTip',
              ( ['in'], BSTR, 'ScreenTip' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'TextToDisplay',
              ( ['out', 'retval'], POINTER(BSTR), 'TextToDisplay' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'TextToDisplay',
              ( ['in'], BSTR, 'TextToDisplay' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'ShowAndReturn',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowAndReturn' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'ShowAndReturn',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowAndReturn' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Follow'),
    COMMETHOD([dispid(2012)], HRESULT, 'CreateNewDocument',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'EditNow' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Overwrite' )),
    COMMETHOD([dispid(2013)], HRESULT, 'Delete'),
]
################################################################
## code template for Hyperlink implementation
##class Hyperlink_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return Address
##    def _set(self, Address):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SubAddress
##    def _set(self, SubAddress):
##        '-no docstring-'
##    SubAddress = property(_get, _set, doc = _set.__doc__)
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return EmailSubject
##    def _set(self, EmailSubject):
##        '-no docstring-'
##    EmailSubject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ScreenTip
##    def _set(self, ScreenTip):
##        '-no docstring-'
##    ScreenTip = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextToDisplay
##    def _set(self, TextToDisplay):
##        '-no docstring-'
##    TextToDisplay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowAndReturn
##    def _set(self, ShowAndReturn):
##        '-no docstring-'
##    ShowAndReturn = property(_get, _set, doc = _set.__doc__)
##
##    def Follow(self):
##        '-no docstring-'
##        #return 
##
##    def CreateNewDocument(self, FileName, EditNow, Overwrite):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'PpBulletType'
ppBulletMixed = -2
ppBulletNone = 0
ppBulletUnnumbered = 1
ppBulletNumbered = 2
ppBulletPicture = 3
PpBulletType = c_int # enum

# values for enumeration 'PpNumberedBulletStyle'
ppBulletStyleMixed = -2
ppBulletAlphaLCPeriod = 0
ppBulletAlphaUCPeriod = 1
ppBulletArabicParenRight = 2
ppBulletArabicPeriod = 3
ppBulletRomanLCParenBoth = 4
ppBulletRomanLCParenRight = 5
ppBulletRomanLCPeriod = 6
ppBulletRomanUCPeriod = 7
ppBulletAlphaLCParenBoth = 8
ppBulletAlphaLCParenRight = 9
ppBulletAlphaUCParenBoth = 10
ppBulletAlphaUCParenRight = 11
ppBulletArabicParenBoth = 12
ppBulletArabicPlain = 13
ppBulletRomanUCParenBoth = 14
ppBulletRomanUCParenRight = 15
ppBulletSimpChinPlain = 16
ppBulletSimpChinPeriod = 17
ppBulletCircleNumDBPlain = 18
ppBulletCircleNumWDWhitePlain = 19
ppBulletCircleNumWDBlackPlain = 20
ppBulletTradChinPlain = 21
ppBulletTradChinPeriod = 22
ppBulletArabicAlphaDash = 23
ppBulletArabicAbjadDash = 24
ppBulletHebrewAlphaDash = 25
ppBulletKanjiKoreanPlain = 26
ppBulletKanjiKoreanPeriod = 27
ppBulletArabicDBPlain = 28
ppBulletArabicDBPeriod = 29
ppBulletThaiAlphaPeriod = 30
ppBulletThaiAlphaParenRight = 31
ppBulletThaiAlphaParenBoth = 32
ppBulletThaiNumPeriod = 33
ppBulletThaiNumParenRight = 34
ppBulletThaiNumParenBoth = 35
ppBulletHindiAlphaPeriod = 36
ppBulletHindiNumPeriod = 37
ppBulletKanjiSimpChinDBPeriod = 38
ppBulletHindiNumParenRight = 39
ppBulletHindiAlpha1Period = 40
PpNumberedBulletStyle = c_int # enum
BulletFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(0), 'hidden', 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Character',
              ( ['out', 'retval'], POINTER(c_int), 'Character' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Character',
              ( ['in'], c_int, 'Character' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'RelativeSize',
              ( ['out', 'retval'], POINTER(c_float), 'RelativeSize' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'RelativeSize',
              ( ['in'], c_float, 'RelativeSize' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'UseTextColor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UseTextColor' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'UseTextColor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UseTextColor' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'UseTextFont',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UseTextFont' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'UseTextFont',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UseTextFont' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'Font' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpBulletType), 'Type' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Type',
              ( ['in'], PpBulletType, 'Type' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(PpNumberedBulletStyle), 'Style' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Style',
              ( ['in'], PpNumberedBulletStyle, 'Style' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'StartValue',
              ( ['out', 'retval'], POINTER(c_int), 'StartValue' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'StartValue',
              ( ['in'], c_int, 'StartValue' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Picture',
              ( ['in'], BSTR, 'Picture' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Number',
              ( ['out', 'retval'], POINTER(c_int), 'Number' )),
]
################################################################
## code template for BulletFormat implementation
##class BulletFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Character
##    def _set(self, Character):
##        '-no docstring-'
##    Character = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RelativeSize
##    def _set(self, RelativeSize):
##        '-no docstring-'
##    RelativeSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseTextColor
##    def _set(self, UseTextColor):
##        '-no docstring-'
##    UseTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseTextFont
##    def _set(self, UseTextFont):
##        '-no docstring-'
##    UseTextFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return Font
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return StartValue
##    def _set(self, StartValue):
##        '-no docstring-'
##    StartValue = property(_get, _set, doc = _set.__doc__)
##
##    def Picture(self, Picture):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Number(self):
##        '-no docstring-'
##        #return Number
##


# values for enumeration 'XlMarkerStyle'
xlMarkerStyleAutomatic = -4105
xlMarkerStyleCircle = 8
xlMarkerStyleDash = -4115
xlMarkerStyleDiamond = 2
xlMarkerStyleDot = -4118
xlMarkerStyleNone = -4142
xlMarkerStylePicture = -4147
xlMarkerStylePlus = 9
xlMarkerStyleSquare = 1
xlMarkerStyleStar = 5
xlMarkerStyleTriangle = 3
xlMarkerStyleX = -4168
XlMarkerStyle = c_int # enum

# values for enumeration 'PpSlideShowType'
ppShowTypeSpeaker = 1
ppShowTypeWindow = 2
ppShowTypeKiosk = 3
ppShowTypeWindow2 = 4
PpSlideShowType = c_int # enum

# values for enumeration 'PpSlideShowRangeType'
ppShowAll = 1
ppShowSlideRange = 2
ppShowNamedSlideShow = 3
PpSlideShowRangeType = c_int # enum
SlideShowSettings._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'PointerColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'PointerColor' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'NamedSlideShows',
              ( ['out', 'retval'], POINTER(POINTER(NamedSlideShows)), 'NamedSlideShows' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'StartingSlide',
              ( ['out', 'retval'], POINTER(c_int), 'StartingSlide' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'StartingSlide',
              ( ['in'], c_int, 'StartingSlide' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'EndingSlide',
              ( ['out', 'retval'], POINTER(c_int), 'EndingSlide' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'EndingSlide',
              ( ['in'], c_int, 'EndingSlide' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AdvanceMode',
              ( ['out', 'retval'], POINTER(PpSlideShowAdvanceMode), 'AdvanceMode' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'AdvanceMode',
              ( ['in'], PpSlideShowAdvanceMode, 'AdvanceMode' )),
    COMMETHOD([dispid(2008)], HRESULT, 'Run',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowWindow)), 'Run' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'LoopUntilStopped',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LoopUntilStopped' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'LoopUntilStopped',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LoopUntilStopped' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'ShowType',
              ( ['out', 'retval'], POINTER(PpSlideShowType), 'ShowType' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'ShowType',
              ( ['in'], PpSlideShowType, 'ShowType' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'ShowWithNarration',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowWithNarration' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'ShowWithNarration',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowWithNarration' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'ShowWithAnimation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowWithAnimation' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'ShowWithAnimation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowWithAnimation' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'SlideShowName',
              ( ['out', 'retval'], POINTER(BSTR), 'SlideShowName' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'SlideShowName',
              ( ['in'], BSTR, 'SlideShowName' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'RangeType',
              ( ['out', 'retval'], POINTER(PpSlideShowRangeType), 'RangeType' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'RangeType',
              ( ['in'], PpSlideShowRangeType, 'RangeType' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'ShowScrollbar',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowScrollbar' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'ShowScrollbar',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowScrollbar' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'ShowPresenterView',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowPresenterView' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'ShowPresenterView',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowPresenterView' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'ShowMediaControls',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowMediaControls' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'ShowMediaControls',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowMediaControls' )),
]
################################################################
## code template for SlideShowSettings implementation
##class SlideShowSettings_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def PointerColor(self):
##        '-no docstring-'
##        #return PointerColor
##
##    @property
##    def NamedSlideShows(self):
##        '-no docstring-'
##        #return NamedSlideShows
##
##    def _get(self):
##        '-no docstring-'
##        #return StartingSlide
##    def _set(self, StartingSlide):
##        '-no docstring-'
##    StartingSlide = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndingSlide
##    def _set(self, EndingSlide):
##        '-no docstring-'
##    EndingSlide = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceMode
##    def _set(self, AdvanceMode):
##        '-no docstring-'
##    AdvanceMode = property(_get, _set, doc = _set.__doc__)
##
##    def Run(self):
##        '-no docstring-'
##        #return Run
##
##    def _get(self):
##        '-no docstring-'
##        #return LoopUntilStopped
##    def _set(self, LoopUntilStopped):
##        '-no docstring-'
##    LoopUntilStopped = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowType
##    def _set(self, ShowType):
##        '-no docstring-'
##    ShowType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowWithNarration
##    def _set(self, ShowWithNarration):
##        '-no docstring-'
##    ShowWithNarration = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowWithAnimation
##    def _set(self, ShowWithAnimation):
##        '-no docstring-'
##    ShowWithAnimation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideShowName
##    def _set(self, SlideShowName):
##        '-no docstring-'
##    SlideShowName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RangeType
##    def _set(self, RangeType):
##        '-no docstring-'
##    RangeType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowScrollbar
##    def _set(self, ShowScrollbar):
##        '-no docstring-'
##    ShowScrollbar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowPresenterView
##    def _set(self, ShowPresenterView):
##        '-no docstring-'
##    ShowPresenterView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowMediaControls
##    def _set(self, ShowMediaControls):
##        '-no docstring-'
##    ShowMediaControls = property(_get, _set, doc = _set.__doc__)
##

class Player(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E552-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpPlayerState'
ppPlaying = 0
ppPaused = 1
ppStopped = 2
ppNotReady = 3
PpPlayerState = c_int # enum
Player._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Play'),
    COMMETHOD([dispid(2004)], HRESULT, 'Pause'),
    COMMETHOD([dispid(2005)], HRESULT, 'Stop'),
    COMMETHOD([dispid(2006)], HRESULT, 'GoToNextBookmark'),
    COMMETHOD([dispid(2007)], HRESULT, 'GoToPreviousBookmark'),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'CurrentPosition',
              ( ['out', 'retval'], POINTER(c_int), 'CurrentPosition' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'CurrentPosition',
              ( ['in'], c_int, 'CurrentPosition' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'State',
              ( ['out', 'retval'], POINTER(PpPlayerState), 'State' )),
]
################################################################
## code template for Player implementation
##class Player_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Play(self):
##        '-no docstring-'
##        #return 
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def Stop(self):
##        '-no docstring-'
##        #return 
##
##    def GoToNextBookmark(self):
##        '-no docstring-'
##        #return 
##
##    def GoToPreviousBookmark(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return CurrentPosition
##    def _set(self, CurrentPosition):
##        '-no docstring-'
##    CurrentPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return State
##

class CanvasShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934EC-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class FreeformBuilder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493478-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CanvasShapes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Callout' )),
    COMMETHOD([dispid(11)], HRESULT, 'AddConnector',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Connector' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Curve' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Label' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Line' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Picture' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Polyline' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontBold' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'TextEffect' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Textbox' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['out', 'retval'], POINTER(POINTER(FreeformBuilder)), 'FreeformBuilder' )),
    COMMETHOD([dispid(21)], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Range' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Background' )),
]
################################################################
## code template for CanvasShapes implementation
##class CanvasShapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Callout
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Connector
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Curve
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Label
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Line
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Picture
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Polyline
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return TextEffect
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Textbox
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return FreeformBuilder
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##

SldEvents._methods_ = [
]
################################################################
## code template for SldEvents implementation
##class SldEvents_Impl(object):

class PlaySettings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348E-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PlaySettings._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ActionVerb',
              ( ['out', 'retval'], POINTER(BSTR), 'ActionVerb' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ActionVerb',
              ( ['in'], BSTR, 'ActionVerb' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HideWhileNotPlaying',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HideWhileNotPlaying' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'HideWhileNotPlaying',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'HideWhileNotPlaying' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'LoopUntilStopped',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LoopUntilStopped' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'LoopUntilStopped',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LoopUntilStopped' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'PlayOnEntry',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PlayOnEntry' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'PlayOnEntry',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PlayOnEntry' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'RewindMovie',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RewindMovie' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'RewindMovie',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RewindMovie' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'PauseAnimation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PauseAnimation' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'PauseAnimation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PauseAnimation' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'StopAfterSlides',
              ( ['out', 'retval'], POINTER(c_int), 'StopAfterSlides' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'StopAfterSlides',
              ( ['in'], c_int, 'StopAfterSlides' )),
]
################################################################
## code template for PlaySettings implementation
##class PlaySettings_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return ActionVerb
##    def _set(self, ActionVerb):
##        '-no docstring-'
##    ActionVerb = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HideWhileNotPlaying
##    def _set(self, HideWhileNotPlaying):
##        '-no docstring-'
##    HideWhileNotPlaying = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LoopUntilStopped
##    def _set(self, LoopUntilStopped):
##        '-no docstring-'
##    LoopUntilStopped = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PlayOnEntry
##    def _set(self, PlayOnEntry):
##        '-no docstring-'
##    PlayOnEntry = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RewindMovie
##    def _set(self, RewindMovie):
##        '-no docstring-'
##    RewindMovie = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PauseAnimation
##    def _set(self, PauseAnimation):
##        '-no docstring-'
##    PauseAnimation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return StopAfterSlides
##    def _set(self, StopAfterSlides):
##        '-no docstring-'
##    StopAfterSlides = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlPivotFieldOrientation'
xlColumnField = 2
xlDataField = 4
xlHidden = 0
xlPageField = 3
xlRowField = 1
XlPivotFieldOrientation = c_int # enum

# values for enumeration 'MsoAnimFilterEffectSubtype'
msoAnimFilterEffectSubtypeNone = 0
msoAnimFilterEffectSubtypeInVertical = 1
msoAnimFilterEffectSubtypeOutVertical = 2
msoAnimFilterEffectSubtypeInHorizontal = 3
msoAnimFilterEffectSubtypeOutHorizontal = 4
msoAnimFilterEffectSubtypeHorizontal = 5
msoAnimFilterEffectSubtypeVertical = 6
msoAnimFilterEffectSubtypeIn = 7
msoAnimFilterEffectSubtypeOut = 8
msoAnimFilterEffectSubtypeAcross = 9
msoAnimFilterEffectSubtypeFromLeft = 10
msoAnimFilterEffectSubtypeFromRight = 11
msoAnimFilterEffectSubtypeFromTop = 12
msoAnimFilterEffectSubtypeFromBottom = 13
msoAnimFilterEffectSubtypeDownLeft = 14
msoAnimFilterEffectSubtypeUpLeft = 15
msoAnimFilterEffectSubtypeDownRight = 16
msoAnimFilterEffectSubtypeUpRight = 17
msoAnimFilterEffectSubtypeSpokes1 = 18
msoAnimFilterEffectSubtypeSpokes2 = 19
msoAnimFilterEffectSubtypeSpokes3 = 20
msoAnimFilterEffectSubtypeSpokes4 = 21
msoAnimFilterEffectSubtypeSpokes8 = 22
msoAnimFilterEffectSubtypeLeft = 23
msoAnimFilterEffectSubtypeRight = 24
msoAnimFilterEffectSubtypeDown = 25
msoAnimFilterEffectSubtypeUp = 26
MsoAnimFilterEffectSubtype = c_int # enum
Fonts._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Replace',
              ( ['in'], BSTR, 'Original' ),
              ( ['in'], BSTR, 'Replacement' )),
]
################################################################
## code template for Fonts implementation
##class Fonts_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Replace(self, Original, Replacement):
##        '-no docstring-'
##        #return 
##

class TabStop(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493494-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpTabStopType'
ppTabStopMixed = -2
ppTabStopLeft = 1
ppTabStopCenter = 2
ppTabStopRight = 3
ppTabStopDecimal = 4
PpTabStopType = c_int # enum
TabStop._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpTabStopType), 'Type' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Type',
              ( ['in'], PpTabStopType, 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(c_float), 'Position' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Position',
              ( ['in'], c_float, 'Position' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Clear'),
]
################################################################
## code template for TabStop implementation
##class TabStop_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlSizeRepresents'
xlSizeIsWidth = 2
xlSizeIsArea = 1
XlSizeRepresents = c_int # enum
class LegendEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A70-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LegendKey(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A71-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
LegendEntry._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(174), 'propget'], HRESULT, 'LegendKey',
              ( ['out', 'retval'], POINTER(POINTER(LegendKey)), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for LegendEntry implementation
##class LegendEntry_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LegendKey(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##


# values for enumeration 'XlValueSortOrder'
xlValueNone = 0
xlValueAscending = 1
xlValueDescending = 2
XlValueSortOrder = c_int # enum

# values for enumeration 'XlGradientStopPositionType'
xlGradientStopPositionTypeExtremeValue = 0
xlGradientStopPositionTypeNumber = 1
xlGradientStopPositionTypePercent = 2
XlGradientStopPositionType = c_int # enum

# values for enumeration 'XlLegendPosition'
xlLegendPositionBottom = -4107
xlLegendPositionCorner = 2
xlLegendPositionLeft = -4131
xlLegendPositionRight = -4152
xlLegendPositionTop = -4160
xlLegendPositionCustom = -4161
XlLegendPosition = c_int # enum

# values for enumeration 'PpUpdateOption'
ppUpdateOptionMixed = -2
ppUpdateOptionManual = 1
ppUpdateOptionAutomatic = 2
PpUpdateOption = c_int # enum

# values for enumeration 'XlPattern'
xlPatternAutomatic = -4105
xlPatternChecker = 9
xlPatternCrissCross = 16
xlPatternDown = -4121
xlPatternGray16 = 17
xlPatternGray25 = -4124
xlPatternGray50 = -4125
xlPatternGray75 = -4126
xlPatternGray8 = 18
xlPatternGrid = 15
xlPatternHorizontal = -4128
xlPatternLightDown = 13
xlPatternLightHorizontal = 11
xlPatternLightUp = 14
xlPatternLightVertical = 12
xlPatternNone = -4142
xlPatternSemiGray75 = 10
xlPatternSolid = 1
xlPatternUp = -4162
xlPatternVertical = -4166
xlPatternLinearGradient = 4000
xlPatternRectangularGradient = 4001
XlPattern = c_int # enum

# values for enumeration 'XlDataLabelSeparator'
xlDataLabelSeparatorDefault = 1
XlDataLabelSeparator = c_int # enum

# values for enumeration 'XlGeoProjectionType'
xlGeoProjectionTypeAutomatic = 0
xlGeoProjectionTypeMercator = 1
xlGeoProjectionTypeMiller = 2
xlGeoProjectionTypeAlbers = 3
xlGeoProjectionTypeRobinson = 4
XlGeoProjectionType = c_int # enum
class DiagramNodeChildren(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D9-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class DiagramNode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D8-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
DiagramNodeChildren._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'Node' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], VARIANT, 'Index', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'NewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'iDiagramNodes' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FirstChild',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'First' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LastChild',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'Last' )),
]
################################################################
## code template for DiagramNodeChildren implementation
##class DiagramNodeChildren_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Node
##
##    def AddNode(self, Index, NodeType):
##        '-no docstring-'
##        #return NewNode
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iDiagramNodes
##
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return First
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return Last
##


# values for enumeration 'XlChartSplitType'
xlSplitByPosition = 1
xlSplitByPercentValue = 3
xlSplitByCustomSplit = 4
xlSplitByValue = 2
XlChartSplitType = c_int # enum

# values for enumeration 'PpWindowState'
ppWindowNormal = 1
ppWindowMinimized = 2
ppWindowMaximized = 3
PpWindowState = c_int # enum

# values for enumeration 'XlGeoMappingLevel'
xlGeoMappingLevelAutomatic = 0
xlGeoMappingLevelDataOnly = 1
xlGeoMappingLevelPostalCode = 2
xlGeoMappingLevelCounty = 3
xlGeoMappingLevelState = 4
xlGeoMappingLevelCountryRegion = 5
xlGeoMappingLevelCountryRegionList = 6
xlGeoMappingLevelWorld = 7
XlGeoMappingLevel = c_int # enum
class TextRange(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348F-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ActionSettings(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348C-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpChangeCase'
ppCaseSentence = 1
ppCaseLower = 2
ppCaseUpper = 3
ppCaseTitle = 4
ppCaseToggle = 5
PpChangeCase = c_int # enum

# values for enumeration 'PpPasteDataType'
ppPasteDefault = 0
ppPasteBitmap = 1
ppPasteEnhancedMetafile = 2
ppPasteMetafilePicture = 3
ppPasteGIF = 4
ppPasteJPG = 5
ppPastePNG = 6
ppPasteText = 7
ppPasteHTML = 8
ppPasteRTF = 9
ppPasteOLEObject = 10
ppPasteShape = 11
ppPasteSVG = 12
PpPasteDataType = c_int # enum
TextRange._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ActionSettings',
              ( ['out', 'retval'], POINTER(POINTER(ActionSettings)), 'ActionSettings' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Start',
              ( ['out', 'retval'], POINTER(c_int), 'Start' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Length',
              ( ['out', 'retval'], POINTER(c_int), 'Length' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'BoundLeft',
              ( ['out', 'retval'], POINTER(c_float), 'BoundLeft' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'BoundTop',
              ( ['out', 'retval'], POINTER(c_float), 'BoundTop' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'BoundWidth',
              ( ['out', 'retval'], POINTER(c_float), 'BoundWidth' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'BoundHeight',
              ( ['out', 'retval'], POINTER(c_float), 'BoundHeight' )),
    COMMETHOD([dispid(2010)], HRESULT, 'Paragraphs',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Paragraphs' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Sentences',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Sentences' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Words',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Words' )),
    COMMETHOD([dispid(2013)], HRESULT, 'Characters',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Characters' )),
    COMMETHOD([dispid(2014)], HRESULT, 'Lines',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Lines' )),
    COMMETHOD([dispid(2015)], HRESULT, 'Runs',
              ( ['in', 'optional'], c_int, 'Start', -1 ),
              ( ['in', 'optional'], c_int, 'Length', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Runs' )),
    COMMETHOD([dispid(2016)], HRESULT, 'TrimText',
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'TrimText' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(2017)], HRESULT, 'InsertAfter',
              ( ['in', 'optional'], BSTR, 'NewText', '' ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'After' )),
    COMMETHOD([dispid(2018)], HRESULT, 'InsertBefore',
              ( ['in', 'optional'], BSTR, 'NewText', '' ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Before' )),
    COMMETHOD([dispid(2019)], HRESULT, 'InsertDateTime',
              ( ['in'], PpDateTimeFormat, 'DateTimeFormat' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'InsertAsField', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'DateTime' )),
    COMMETHOD([dispid(2020)], HRESULT, 'InsertSlideNumber',
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'SlideNumber' )),
    COMMETHOD([dispid(2021)], HRESULT, 'InsertSymbol',
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_int, 'CharNumber' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Unicode', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Symbol' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'Font' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'ParagraphFormat' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'IndentLevel',
              ( ['out', 'retval'], POINTER(c_int), 'IndentLevel' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'IndentLevel',
              ( ['in'], c_int, 'IndentLevel' )),
    COMMETHOD([dispid(2025)], HRESULT, 'Select'),
    COMMETHOD([dispid(2026)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2027)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2028)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2029)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Paste' )),
    COMMETHOD([dispid(2030)], HRESULT, 'ChangeCase',
              ( ['in'], PpChangeCase, 'Type' )),
    COMMETHOD([dispid(2031)], HRESULT, 'AddPeriods'),
    COMMETHOD([dispid(2032)], HRESULT, 'RemovePeriods'),
    COMMETHOD([dispid(2033)], HRESULT, 'Find',
              ( ['in'], BSTR, 'FindWhat' ),
              ( ['in', 'optional'], c_int, 'After', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'MatchCase', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WholeWords', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Find' )),
    COMMETHOD([dispid(2034)], HRESULT, 'Replace',
              ( ['in'], BSTR, 'FindWhat' ),
              ( ['in'], BSTR, 'ReplaceWhat' ),
              ( ['in', 'optional'], c_int, 'After', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'MatchCase', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WholeWords', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'Replace' )),
    COMMETHOD([dispid(2035)], HRESULT, 'RotatedBounds',
              ( ['out'], POINTER(c_float), 'X1' ),
              ( ['out'], POINTER(c_float), 'Y1' ),
              ( ['out'], POINTER(c_float), 'X2' ),
              ( ['out'], POINTER(c_float), 'Y2' ),
              ( ['out'], POINTER(c_float), 'X3' ),
              ( ['out'], POINTER(c_float), 'Y3' ),
              ( ['out'], POINTER(c_float), 'x4' ),
              ( ['out'], POINTER(c_float), 'y4' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLanguageID), 'LanguageID' )),
    COMMETHOD([dispid(2036), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLanguageID, 'LanguageID' )),
    COMMETHOD([dispid(2037)], HRESULT, 'RtlRun'),
    COMMETHOD([dispid(2038)], HRESULT, 'LtrRun'),
    COMMETHOD([dispid(2039)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], PpPasteDataType, 'DataType', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayAsIcon', 0 ),
              ( ['in', 'optional'], BSTR, 'IconFileName', '' ),
              ( ['in', 'optional'], c_int, 'IconIndex', 0 ),
              ( ['in', 'optional'], BSTR, 'IconLabel', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Link', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'PasteSpecial' )),
]
################################################################
## code template for TextRange implementation
##class TextRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def ActionSettings(self):
##        '-no docstring-'
##        #return ActionSettings
##
##    @property
##    def Start(self):
##        '-no docstring-'
##        #return Start
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    @property
##    def BoundLeft(self):
##        '-no docstring-'
##        #return BoundLeft
##
##    @property
##    def BoundTop(self):
##        '-no docstring-'
##        #return BoundTop
##
##    @property
##    def BoundWidth(self):
##        '-no docstring-'
##        #return BoundWidth
##
##    @property
##    def BoundHeight(self):
##        '-no docstring-'
##        #return BoundHeight
##
##    def Paragraphs(self, Start, Length):
##        '-no docstring-'
##        #return Paragraphs
##
##    def Sentences(self, Start, Length):
##        '-no docstring-'
##        #return Sentences
##
##    def Words(self, Start, Length):
##        '-no docstring-'
##        #return Words
##
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return Characters
##
##    def Lines(self, Start, Length):
##        '-no docstring-'
##        #return Lines
##
##    def Runs(self, Start, Length):
##        '-no docstring-'
##        #return Runs
##
##    def TrimText(self):
##        '-no docstring-'
##        #return TrimText
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def InsertAfter(self, NewText):
##        '-no docstring-'
##        #return After
##
##    def InsertBefore(self, NewText):
##        '-no docstring-'
##        #return Before
##
##    def InsertDateTime(self, DateTimeFormat, InsertAsField):
##        '-no docstring-'
##        #return DateTime
##
##    def InsertSlideNumber(self):
##        '-no docstring-'
##        #return SlideNumber
##
##    def InsertSymbol(self, FontName, CharNumber, Unicode):
##        '-no docstring-'
##        #return Symbol
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return Font
##
##    @property
##    def ParagraphFormat(self):
##        '-no docstring-'
##        #return ParagraphFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return IndentLevel
##    def _set(self, IndentLevel):
##        '-no docstring-'
##    IndentLevel = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return Paste
##
##    def ChangeCase(self, Type):
##        '-no docstring-'
##        #return 
##
##    def AddPeriods(self):
##        '-no docstring-'
##        #return 
##
##    def RemovePeriods(self):
##        '-no docstring-'
##        #return 
##
##    def Find(self, FindWhat, After, MatchCase, WholeWords):
##        '-no docstring-'
##        #return Find
##
##    def Replace(self, FindWhat, ReplaceWhat, After, MatchCase, WholeWords):
##        '-no docstring-'
##        #return Replace
##
##    def RotatedBounds(self):
##        '-no docstring-'
##        #return X1, Y1, X2, Y2, X3, Y3, x4, y4
##
##    def _get(self):
##        '-no docstring-'
##        #return LanguageID
##    def _set(self, LanguageID):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def RtlRun(self):
##        '-no docstring-'
##        #return 
##
##    def LtrRun(self):
##        '-no docstring-'
##        #return 
##
##    def PasteSpecial(self, DataType, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Link):
##        '-no docstring-'
##        #return PasteSpecial
##


# values for enumeration 'XlCategorySortOrder'
xlIndexAscending = 0
xlIndexDescending = 1
xlCategoryAscending = 2
xlCategoryDescending = 3
XlCategorySortOrder = c_int # enum
LegendKey._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(235), 'hidden'], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'Smooth',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2003), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for LegendKey implementation
##class LegendKey_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##

class MouseDownHandler(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{914934BF-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
MouseDownHandler._methods_ = [
    COMMETHOD([], HRESULT, 'OnMouseDown',
              ( ['in'], POINTER(IUnknown), 'activeWin' )),
]
################################################################
## code template for MouseDownHandler implementation
##class MouseDownHandler_Impl(object):
##    def OnMouseDown(self, activeWin):
##        '-no docstring-'
##        #return 
##

class Global(CoClass):
    _reg_clsid_ = GUID('{91493443-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['appobject', 'hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
class _Global(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493451-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
Global._com_interfaces_ = [_Global]

class Ruler(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493490-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TabStops(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493493-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class RulerLevels(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493491-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Ruler._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'TabStops',
              ( ['out', 'retval'], POINTER(POINTER(TabStops)), 'TabStops' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Levels',
              ( ['out', 'retval'], POINTER(POINTER(RulerLevels)), 'Levels' )),
]
################################################################
## code template for Ruler implementation
##class Ruler_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def TabStops(self):
##        '-no docstring-'
##        #return TabStops
##
##    @property
##    def Levels(self):
##        '-no docstring-'
##        #return Levels
##

class ChartCharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A57-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartTitle._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'RHS' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2012), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(2013), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppinterior' )),
    COMMETHOD([dispid(2014)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(2018)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'Height' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'Width' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2028)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2029)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for ChartTitle implementation
##class ChartTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppinterior
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class _PowerRex(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D3-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
_PowerRex._methods_ = [
    COMMETHOD([dispid(2001), 'hidden'], HRESULT, 'OnAsfEncoderEvent',
              ( ['in'], VARIANT, 'erorCode' ),
              ( ['in'], VARIANT, 'bstrErrorDesc' )),
]
################################################################
## code template for _PowerRex implementation
##class _PowerRex_Impl(object):
##    def OnAsfEncoderEvent(self, erorCode, bstrErrorDesc):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'PpArrangeStyle'
ppArrangeTiled = 1
ppArrangeCascade = 2
PpArrangeStyle = c_int # enum
class DataLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A61-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Trendline._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'DataLabel',
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(190), 'propget'], HRESULT, 'DisplayEquation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(190), 'propput'], HRESULT, 'DisplayEquation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(189), 'propget'], HRESULT, 'DisplayRSquared',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(189), 'propput'], HRESULT, 'DisplayRSquared',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(186), 'propget'], HRESULT, 'Intercept',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(186), 'propput'], HRESULT, 'Intercept',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(187), 'propget'], HRESULT, 'InterceptIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(187), 'propput'], HRESULT, 'InterceptIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(188), 'propget'], HRESULT, 'NameIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(188), 'propput'], HRESULT, 'NameIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(192), 'propget'], HRESULT, 'Order',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(192), 'propput'], HRESULT, 'Order',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(184), 'propget'], HRESULT, 'Period',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(184), 'propput'], HRESULT, 'Period',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(XlTrendlineType), 'RHS' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Type',
              ( ['in'], XlTrendlineType, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2650), 'propget'], HRESULT, 'Backward2',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2650), 'propput'], HRESULT, 'Backward2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2651), 'propget'], HRESULT, 'Forward2',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2651), 'propput'], HRESULT, 'Forward2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'Backward',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2003), 'hidden', 'propput'], HRESULT, 'Backward',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2004), 'hidden', 'propget'], HRESULT, 'Forward',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2004), 'hidden', 'propput'], HRESULT, 'Forward',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2005)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2006)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Trendline implementation
##class Trendline_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayEquation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRSquared = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Intercept = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InterceptIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NameIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Period = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class FilterEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F0-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FilterEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(MsoAnimFilterEffectType), 'Type' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoAnimFilterEffectType, 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Subtype',
              ( ['out', 'retval'], POINTER(MsoAnimFilterEffectSubtype), 'Subtype' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Subtype',
              ( ['in'], MsoAnimFilterEffectSubtype, 'Subtype' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Reveal',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Reveal' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Reveal',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Reveal' )),
]
################################################################
## code template for FilterEffect implementation
##class FilterEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Subtype
##    def _set(self, Subtype):
##        '-no docstring-'
##    Subtype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Reveal
##    def _set(self, Reveal):
##        '-no docstring-'
##    Reveal = property(_get, _set, doc = _set.__doc__)
##

class CommandEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934EF-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoAnimCommandType'
msoAnimCommandTypeEvent = 0
msoAnimCommandTypeCall = 1
msoAnimCommandTypeVerb = 2
MsoAnimCommandType = c_int # enum
CommandEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(MsoAnimCommandType), 'Type' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoAnimCommandType, 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Command',
              ( ['out', 'retval'], POINTER(BSTR), 'Command' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Command',
              ( ['in'], BSTR, 'Command' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'bookmark',
              ( ['out', 'retval'], POINTER(BSTR), 'bookmark' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'bookmark',
              ( ['in'], BSTR, 'bookmark' )),
]
################################################################
## code template for CommandEffect implementation
##class CommandEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Command
##    def _set(self, Command):
##        '-no docstring-'
##    Command = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return bookmark
##    def _set(self, bookmark):
##        '-no docstring-'
##    bookmark = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlDataLabelPosition'
xlLabelPositionCenter = -4108
xlLabelPositionAbove = 0
xlLabelPositionBelow = 1
xlLabelPositionLeft = -4131
xlLabelPositionRight = -4152
xlLabelPositionOutsideEnd = 2
xlLabelPositionInsideEnd = 3
xlLabelPositionInsideBase = 4
xlLabelPositionBestFit = 5
xlLabelPositionMixed = 6
xlLabelPositionCustom = 7
XlDataLabelPosition = c_int # enum
DataLabel._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(603), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'RHS' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(137), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(975), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(975), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'AutoText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(193), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(193), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(194), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(194), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1097), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1097), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(171), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(171), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'ShowSeriesName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ShowCategoryName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'ShowValue',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'ShowPercentage',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'ShowBubbleSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_Height',
              ( ['out', 'retval'], POINTER(c_double), 'Height' )),
    COMMETHOD([dispid(2004), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_Width',
              ( ['out', 'retval'], POINTER(c_double), 'Width' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'ShowRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2028), 'propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'Height' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'Height' )),
    COMMETHOD([dispid(2030), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'Width' )),
    COMMETHOD([dispid(2030), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'Width' )),
    COMMETHOD([dispid(2031)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2032)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for DataLabel implementation
##class DataLabel_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def _Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def _Width(self):
##        '-no docstring-'
##        #return Width
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlRegionLabelOptions'
xlRegionLabelOptionsNone = 0
xlRegionLabelOptionsBestFitOnly = 1
xlRegionLabelOptionsShowAll = 2
XlRegionLabelOptions = c_int # enum
class RulerLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493492-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RulerLevel._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'FirstMargin',
              ( ['out', 'retval'], POINTER(c_float), 'FirstMargin' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'FirstMargin',
              ( ['in'], c_float, 'FirstMargin' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'LeftMargin',
              ( ['out', 'retval'], POINTER(c_float), 'LeftMargin' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'LeftMargin',
              ( ['in'], c_float, 'LeftMargin' )),
]
################################################################
## code template for RulerLevel implementation
##class RulerLevel_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return FirstMargin
##    def _set(self, FirstMargin):
##        '-no docstring-'
##    FirstMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LeftMargin
##    def _set(self, LeftMargin):
##        '-no docstring-'
##    LeftMargin = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpIndentControl'
ppIndentControlMixed = -2
ppIndentReplaceAttr = 1
ppIndentKeepAttr = 2
PpIndentControl = c_int # enum
class CustomLayouts(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F2-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomLayouts._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'Add' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Paste',
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'Paste' )),
]
################################################################
## code template for CustomLayouts implementation
##class CustomLayouts_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Index):
##        '-no docstring-'
##        #return Add
##
##    def Paste(self, Index):
##        '-no docstring-'
##        #return Paste
##

ChartCharacters._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(252)], HRESULT, 'Insert',
              ( ['in'], BSTR, 'String' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1522), 'propget'], HRESULT, 'PhoneticCharacters',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1522), 'propput'], HRESULT, 'PhoneticCharacters',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for ChartCharacters implementation
##class ChartCharacters_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def Insert(self, String):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticCharacters = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##


# values for enumeration 'PpMouseActivation'
ppMouseClick = 1
ppMouseOver = 2
PpMouseActivation = c_int # enum
ActionSettings._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], PpMouseActivation, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ActionSetting)), 'Item' )),
]
################################################################
## code template for ActionSettings implementation
##class ActionSettings_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

class TableBackground(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F8-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347E-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PictureFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347D-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ShadowFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493480-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TableBackground._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Picture',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'Picture' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ReflectionFormat)), 'Reflection' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
]
################################################################
## code template for TableBackground implementation
##class TableBackground_Impl(object):
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return Picture
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##


# values for enumeration 'XlRgbColor'
rgbAliceBlue = 16775408
rgbAntiqueWhite = 14150650
rgbAqua = 16776960
rgbAquamarine = 13959039
rgbAzure = 16777200
rgbBeige = 14480885
rgbBisque = 12903679
rgbBlack = 0
rgbBlanchedAlmond = 13495295
rgbBlue = 16711680
rgbBlueViolet = 14822282
rgbBrown = 2763429
rgbBurlyWood = 8894686
rgbCadetBlue = 10526303
rgbChartreuse = 65407
rgbCoral = 5275647
rgbCornflowerBlue = 15570276
rgbCornsilk = 14481663
rgbCrimson = 3937500
rgbDarkBlue = 9109504
rgbDarkCyan = 9145088
rgbDarkGoldenrod = 755384
rgbDarkGreen = 25600
rgbDarkGray = 11119017
rgbDarkGrey = 11119017
rgbDarkKhaki = 7059389
rgbDarkMagenta = 9109643
rgbDarkOliveGreen = 3107669
rgbDarkOrange = 36095
rgbDarkOrchid = 13382297
rgbDarkRed = 139
rgbDarkSalmon = 8034025
rgbDarkSeaGreen = 9419919
rgbDarkSlateBlue = 9125192
rgbDarkSlateGray = 5197615
rgbDarkSlateGrey = 5197615
rgbDarkTurquoise = 13749760
rgbDarkViolet = 13828244
rgbDeepPink = 9639167
rgbDeepSkyBlue = 16760576
rgbDimGray = 6908265
rgbDimGrey = 6908265
rgbDodgerBlue = 16748574
rgbFireBrick = 2237106
rgbFloralWhite = 15792895
rgbForestGreen = 2263842
rgbFuchsia = 16711935
rgbGainsboro = 14474460
rgbGhostWhite = 16775416
rgbGold = 55295
rgbGoldenrod = 2139610
rgbGray = 8421504
rgbGreen = 32768
rgbGrey = 8421504
rgbGreenYellow = 3145645
rgbHoneydew = 15794160
rgbHotPink = 11823615
rgbIndianRed = 6053069
rgbIndigo = 8519755
rgbIvory = 15794175
rgbKhaki = 9234160
rgbLavender = 16443110
rgbLavenderBlush = 16118015
rgbLawnGreen = 64636
rgbLemonChiffon = 13499135
rgbLightBlue = 15128749
rgbLightCoral = 8421616
rgbLightCyan = 9145088
rgbLightGoldenrodYellow = 13826810
rgbLightGray = 13882323
rgbLightGreen = 9498256
rgbLightGrey = 13882323
rgbLightPink = 12695295
rgbLightSalmon = 8036607
rgbLightSeaGreen = 11186720
rgbLightSkyBlue = 16436871
rgbLightSlateGray = 10061943
rgbLightSlateGrey = 10061943
rgbLightSteelBlue = 14599344
rgbLightYellow = 14745599
rgbLime = 65280
rgbLimeGreen = 3329330
rgbLinen = 15134970
rgbMaroon = 128
rgbMediumAquamarine = 11206502
rgbMediumBlue = 13434880
rgbMediumOrchid = 13850042
rgbMediumPurple = 14381203
rgbMediumSeaGreen = 7451452
rgbMediumSlateBlue = 15624315
rgbMediumSpringGreen = 10156544
rgbMediumTurquoise = 13422920
rgbMediumVioletRed = 8721863
rgbMidnightBlue = 7346457
rgbMintCream = 16449525
rgbMistyRose = 14804223
rgbMoccasin = 11920639
rgbNavajoWhite = 11394815
rgbNavy = 8388608
rgbNavyBlue = 8388608
rgbOldLace = 15136253
rgbOlive = 32896
rgbOliveDrab = 2330219
rgbOrange = 42495
rgbOrangeRed = 17919
rgbOrchid = 14053594
rgbPaleGoldenrod = 7071982
rgbPaleGreen = 10025880
rgbPaleTurquoise = 15658671
rgbPaleVioletRed = 9662683
rgbPapayaWhip = 14020607
rgbPeachPuff = 12180223
rgbPeru = 4163021
rgbPink = 13353215
rgbPlum = 14524637
rgbPowderBlue = 15130800
rgbPurple = 8388736
rgbRed = 255
rgbRosyBrown = 9408444
rgbRoyalBlue = 14772545
rgbSalmon = 7504122
rgbSandyBrown = 6333684
rgbSeaGreen = 5737262
rgbSeashell = 15660543
rgbSienna = 2970272
rgbSilver = 12632256
rgbSkyBlue = 15453831
rgbSlateBlue = 13458026
rgbSlateGray = 9470064
rgbSlateGrey = 9470064
rgbSnow = 16448255
rgbSpringGreen = 8388352
rgbSteelBlue = 11829830
rgbTan = 9221330
rgbTeal = 8421376
rgbThistle = 14204888
rgbTomato = 4678655
rgbTurquoise = 13688896
rgbYellow = 65535
rgbYellowGreen = 3329434
rgbViolet = 15631086
rgbWheat = 11788021
rgbWhite = 16777215
rgbWhiteSmoke = 16119285
XlRgbColor = c_int # enum

# values for enumeration 'XlSeriesColorGradientStyle'
xlSeriesColorGradientStyleSequential = 0
xlSeriesColorGradientStyleDiverging = 1
XlSeriesColorGradientStyle = c_int # enum
class TableStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F5-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TableStyle._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Id',
              ( ['out', 'retval'], POINTER(BSTR), 'Id' )),
]
################################################################
## code template for TableStyle implementation
##class TableStyle_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return Id
##

Corners._methods_ = [
    COMMETHOD([dispid(150), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235), 'hidden'], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for Corners implementation
##class Corners_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##


# values for enumeration 'PpMediaType'
ppMediaTypeMixed = -2
ppMediaTypeOther = 1
ppMediaTypeSound = 2
ppMediaTypeMovie = 3
PpMediaType = c_int # enum

# values for enumeration 'XlParentDataLabelOptions'
xlParentDataLabelOptionsNone = 0
xlParentDataLabelOptionsBanner = 1
xlParentDataLabelOptionsOverlapping = 2
XlParentDataLabelOptions = c_int # enum
class DataLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A62-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DataLabels._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(137), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(975), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(975), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'AutoText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(193), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(193), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(194), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(194), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1097), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1097), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(171), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(171), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'ShowSeriesName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ShowCategoryName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'ShowValue',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'ShowPercentage',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'ShowBubbleSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([dispid(2028)], HRESULT, 'Propagate',
              ( ['in'], VARIANT, 'Index' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'ShowRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2030)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2031)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for DataLabels implementation
##class DataLabels_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Propagate(self, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class OCXExtenderEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C1-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
OCXExtenderEvents._methods_ = [
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
]
################################################################
## code template for OCXExtenderEvents implementation
##class OCXExtenderEvents_Impl(object):
##    def GotFocus(self):
##        '-no docstring-'
##        #return 
##
##    def LostFocus(self):
##        '-no docstring-'
##        #return 
##

class TickLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A78-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TickLabels._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(2002)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'ppval' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(XlTickLabelOrientation), 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Orientation',
              ( ['in'], XlTickLabelOrientation, 'RHS' )),
    COMMETHOD([dispid(2009)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2010), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2010), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Depth',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Offset',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'Offset',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'MultiLevel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'MultiLevel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for TickLabels implementation
##class TickLabels_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Depth(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Offset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpSlideShowPointerType'
ppSlideShowPointerNone = 0
ppSlideShowPointerArrow = 1
ppSlideShowPointerPen = 2
ppSlideShowPointerAlwaysHidden = 3
ppSlideShowPointerAutoArrow = 4
ppSlideShowPointerEraser = 5
PpSlideShowPointerType = c_int # enum
Walls._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(162), 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for Walls implementation
##class Walls_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

Slides._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'FindBySlideID',
              ( ['in'], c_int, 'SlideID' ),
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'FindBySlideID' )),
    COMMETHOD([dispid(2004), 'hidden'], HRESULT, 'Add',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], PpSlideLayout, 'Layout' ),
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'Add' )),
    COMMETHOD([dispid(2005)], HRESULT, 'InsertFromFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], c_int, 'SlideStart', 1 ),
              ( ['in', 'optional'], c_int, 'SlideEnd', -1 ),
              ( ['out', 'retval'], POINTER(c_int), 'FromFile' )),
    COMMETHOD([dispid(2006)], HRESULT, 'Range',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'Range' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Paste',
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'Paste' )),
    COMMETHOD([dispid(2008)], HRESULT, 'AddSlide',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], POINTER(CustomLayout), 'pCustomLayout' ),
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'Slide' )),
]
################################################################
## code template for Slides implementation
##class Slides_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def FindBySlideID(self, SlideID):
##        '-no docstring-'
##        #return FindBySlideID
##
##    def Add(self, Index, Layout):
##        '-no docstring-'
##        #return Add
##
##    def InsertFromFile(self, FileName, Index, SlideStart, SlideEnd):
##        '-no docstring-'
##        #return FromFile
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    def Paste(self, Index):
##        '-no docstring-'
##        #return Paste
##
##    def AddSlide(self, Index, pCustomLayout):
##        '-no docstring-'
##        #return Slide
##

class ScaleEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E7-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ScaleEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ByX',
              ( ['out', 'retval'], POINTER(c_float), 'ByX' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ByX',
              ( ['in'], c_float, 'ByX' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ByY',
              ( ['out', 'retval'], POINTER(c_float), 'ByY' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ByY',
              ( ['in'], c_float, 'ByY' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'FromX',
              ( ['out', 'retval'], POINTER(c_float), 'FromX' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'FromX',
              ( ['in'], c_float, 'FromX' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'FromY',
              ( ['out', 'retval'], POINTER(c_float), 'FromY' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'FromY',
              ( ['in'], c_float, 'FromY' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'ToX',
              ( ['out', 'retval'], POINTER(c_float), 'ToX' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'ToX',
              ( ['in'], c_float, 'ToX' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'ToY',
              ( ['out', 'retval'], POINTER(c_float), 'ToY' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'ToY',
              ( ['in'], c_float, 'ToY' )),
]
################################################################
## code template for ScaleEffect implementation
##class ScaleEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return ByX
##    def _set(self, ByX):
##        '-no docstring-'
##    ByX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ByY
##    def _set(self, ByY):
##        '-no docstring-'
##    ByY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FromX
##    def _set(self, FromX):
##        '-no docstring-'
##    FromX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FromY
##    def _set(self, FromY):
##        '-no docstring-'
##    FromY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ToX
##    def _set(self, ToX):
##        '-no docstring-'
##    ToX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ToY
##    def _set(self, ToY):
##        '-no docstring-'
##    ToY = property(_get, _set, doc = _set.__doc__)
##

PageSetup._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'FirstSlideNumber',
              ( ['out', 'retval'], POINTER(c_int), 'FirstSlideNumber' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'FirstSlideNumber',
              ( ['in'], c_int, 'FirstSlideNumber' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SlideHeight',
              ( ['out', 'retval'], POINTER(c_float), 'SlideHeight' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'SlideHeight',
              ( ['in'], c_float, 'SlideHeight' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'SlideWidth',
              ( ['out', 'retval'], POINTER(c_float), 'SlideWidth' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'SlideWidth',
              ( ['in'], c_float, 'SlideWidth' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'SlideSize',
              ( ['out', 'retval'], POINTER(PpSlideSizeType), 'SlideSize' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'SlideSize',
              ( ['in'], PpSlideSizeType, 'SlideSize' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'NotesOrientation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrientation), 'NotesOrientation' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'NotesOrientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrientation, 'NotesOrientation' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'SlideOrientation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrientation), 'SlideOrientation' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'SlideOrientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrientation, 'SlideOrientation' )),
]
################################################################
## code template for PageSetup implementation
##class PageSetup_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return FirstSlideNumber
##    def _set(self, FirstSlideNumber):
##        '-no docstring-'
##    FirstSlideNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideHeight
##    def _set(self, SlideHeight):
##        '-no docstring-'
##    SlideHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideWidth
##    def _set(self, SlideWidth):
##        '-no docstring-'
##    SlideWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideSize
##    def _set(self, SlideSize):
##        '-no docstring-'
##    SlideSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NotesOrientation
##    def _set(self, NotesOrientation):
##        '-no docstring-'
##    NotesOrientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideOrientation
##    def _set(self, SlideOrientation):
##        '-no docstring-'
##    SlideOrientation = property(_get, _set, doc = _set.__doc__)
##

class AutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934ED-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AutoCorrect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'DisplayAutoCorrectOptions' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['in'], VARIANT_BOOL, 'DisplayAutoCorrectOptions' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'DisplayAutoLayoutOptions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'DisplayAutoLayoutOptions' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'DisplayAutoLayoutOptions',
              ( ['in'], VARIANT_BOOL, 'DisplayAutoLayoutOptions' )),
]
################################################################
## code template for AutoCorrect implementation
##class AutoCorrect_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return DisplayAutoCorrectOptions
##    def _set(self, DisplayAutoCorrectOptions):
##        '-no docstring-'
##    DisplayAutoCorrectOptions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayAutoLayoutOptions
##    def _set(self, DisplayAutoLayoutOptions):
##        '-no docstring-'
##    DisplayAutoLayoutOptions = property(_get, _set, doc = _set.__doc__)
##

class Library(object):
    'Microsoft PowerPoint 16.0 Object Library'
    name = 'PowerPoint'
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)


# values for enumeration 'XlReadingOrder'
xlContext = -5002
xlLTR = -5003
xlRTL = -5004
XlReadingOrder = c_int # enum

# values for enumeration 'XlScaleType'
xlScaleLinear = -4132
xlScaleLogarithmic = -4133
XlScaleType = c_int # enum

# values for enumeration 'PpAlertLevel'
ppAlertsNone = 1
ppAlertsAll = 2
PpAlertLevel = c_int # enum
class ObjectVerbs(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348A-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ObjectVerbs._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(BSTR), 'Item' )),
]
################################################################
## code template for ObjectVerbs implementation
##class ObjectVerbs_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##


# values for enumeration 'XlTickLabelPosition'
xlTickLabelPositionHigh = -4127
xlTickLabelPositionLow = -4134
xlTickLabelPositionNextToAxis = 4
xlTickLabelPositionNone = -4142
XlTickLabelPosition = c_int # enum
class PrintRanges(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149345E-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PrintOptions._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'PrintColorType',
              ( ['out', 'retval'], POINTER(PpPrintColorType), 'PrintColorType' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'PrintColorType',
              ( ['in'], PpPrintColorType, 'PrintColorType' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Collate',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Collate' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Collate',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Collate' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'FitToPage',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FitToPage' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'FitToPage',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FitToPage' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'FrameSlides',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FrameSlides' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'FrameSlides',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FrameSlides' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'NumberOfCopies',
              ( ['out', 'retval'], POINTER(c_int), 'NumberOfCopies' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'NumberOfCopies',
              ( ['in'], c_int, 'NumberOfCopies' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'OutputType',
              ( ['out', 'retval'], POINTER(PpPrintOutputType), 'OutputType' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'OutputType',
              ( ['in'], PpPrintOutputType, 'OutputType' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'PrintHiddenSlides',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PrintHiddenSlides' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'PrintHiddenSlides',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintHiddenSlides' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'PrintInBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PrintInBackground' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'PrintInBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintInBackground' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'RangeType',
              ( ['out', 'retval'], POINTER(PpPrintRangeType), 'RangeType' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'RangeType',
              ( ['in'], PpPrintRangeType, 'RangeType' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Ranges',
              ( ['out', 'retval'], POINTER(POINTER(PrintRanges)), 'Ranges' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'PrintFontsAsGraphics',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PrintFontsAsGraphics' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'PrintFontsAsGraphics',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintFontsAsGraphics' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'SlideShowName',
              ( ['out', 'retval'], POINTER(BSTR), 'SlideShowName' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'SlideShowName',
              ( ['in'], BSTR, 'SlideShowName' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'ActivePrinter',
              ( ['out', 'retval'], POINTER(BSTR), 'ActivePrinter' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in'], BSTR, 'ActivePrinter' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'HandoutOrder',
              ( ['out', 'retval'], POINTER(PpPrintHandoutOrder), 'HandoutOrder' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'HandoutOrder',
              ( ['in'], PpPrintHandoutOrder, 'HandoutOrder' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'PrintComments',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'PrintComments' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'PrintComments',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'PrintComments' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'sectionIndex',
              ( ['out', 'retval'], POINTER(c_int), 'sectionIndex' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'sectionIndex',
              ( ['in'], c_int, 'sectionIndex' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'HighQuality',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HighQuality' )),
    COMMETHOD([dispid(2019), 'propput'], HRESULT, 'HighQuality',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'HighQuality' )),
]
################################################################
## code template for PrintOptions implementation
##class PrintOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return PrintColorType
##    def _set(self, PrintColorType):
##        '-no docstring-'
##    PrintColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Collate
##    def _set(self, Collate):
##        '-no docstring-'
##    Collate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FitToPage
##    def _set(self, FitToPage):
##        '-no docstring-'
##    FitToPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FrameSlides
##    def _set(self, FrameSlides):
##        '-no docstring-'
##    FrameSlides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NumberOfCopies
##    def _set(self, NumberOfCopies):
##        '-no docstring-'
##    NumberOfCopies = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OutputType
##    def _set(self, OutputType):
##        '-no docstring-'
##    OutputType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return PrintHiddenSlides
##    def _set(self, PrintHiddenSlides):
##        '-no docstring-'
##    PrintHiddenSlides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PrintInBackground
##    def _set(self, PrintInBackground):
##        '-no docstring-'
##    PrintInBackground = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RangeType
##    def _set(self, RangeType):
##        '-no docstring-'
##    RangeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Ranges(self):
##        '-no docstring-'
##        #return Ranges
##
##    def _get(self):
##        '-no docstring-'
##        #return PrintFontsAsGraphics
##    def _set(self, PrintFontsAsGraphics):
##        '-no docstring-'
##    PrintFontsAsGraphics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideShowName
##    def _set(self, SlideShowName):
##        '-no docstring-'
##    SlideShowName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ActivePrinter
##    def _set(self, ActivePrinter):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HandoutOrder
##    def _set(self, HandoutOrder):
##        '-no docstring-'
##    HandoutOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PrintComments
##    def _set(self, PrintComments):
##        '-no docstring-'
##    PrintComments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return sectionIndex
##    def _set(self, sectionIndex):
##        '-no docstring-'
##    sectionIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HighQuality
##    def _set(self, HighQuality):
##        '-no docstring-'
##    HighQuality = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlTickMark'
xlTickMarkCross = 4
xlTickMarkInside = 2
xlTickMarkNone = -4142
xlTickMarkOutside = 3
XlTickMark = c_int # enum
class Options(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934EE-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Options._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'DisplayPasteOptions',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayPasteOptions' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'DisplayPasteOptions',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayPasteOptions' )),
    COMMETHOD([dispid(2002), 'hidden', 'propget'], HRESULT, 'DoNotPromptForConvert',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DoNotPromptForConvert' )),
    COMMETHOD([dispid(2002), 'hidden', 'propput'], HRESULT, 'DoNotPromptForConvert',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DoNotPromptForConvert' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ShowCoauthoringMergeChanges',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'ShowCoauthoringMergeChanges' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ShowCoauthoringMergeChanges',
              ( ['in'], VARIANT_BOOL, 'ShowCoauthoringMergeChanges' )),
]
################################################################
## code template for Options implementation
##class Options_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return DisplayPasteOptions
##    def _set(self, DisplayPasteOptions):
##        '-no docstring-'
##    DisplayPasteOptions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DoNotPromptForConvert
##    def _set(self, DoNotPromptForConvert):
##        '-no docstring-'
##    DoNotPromptForConvert = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowCoauthoringMergeChanges
##    def _set(self, ShowCoauthoringMergeChanges):
##        '-no docstring-'
##    ShowCoauthoringMergeChanges = property(_get, _set, doc = _set.__doc__)
##

class RotationEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E8-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RotationEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'By',
              ( ['out', 'retval'], POINTER(c_float), 'By' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'By',
              ( ['in'], c_float, 'By' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'From',
              ( ['out', 'retval'], POINTER(c_float), 'From' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'From',
              ( ['in'], c_float, 'From' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'To',
              ( ['out', 'retval'], POINTER(c_float), 'To' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'To',
              ( ['in'], c_float, 'To' )),
]
################################################################
## code template for RotationEffect implementation
##class RotationEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return By
##    def _set(self, By):
##        '-no docstring-'
##    By = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return From
##    def _set(self, From):
##        '-no docstring-'
##    From = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return To
##    def _set(self, To):
##        '-no docstring-'
##    To = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'MsoAnimEffectRestart'
msoAnimEffectRestartAlways = 1
msoAnimEffectRestartWhenOff = 2
msoAnimEffectRestartNever = 3
MsoAnimEffectRestart = c_int # enum

# values for enumeration 'XlTimeUnit'
xlDays = 0
xlMonths = 1
xlYears = 2
XlTimeUnit = c_int # enum

# values for enumeration 'PpTextStyleType'
ppDefaultStyle = 1
ppTitleStyle = 2
ppBodyStyle = 3
PpTextStyleType = c_int # enum
Legend._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'RHS' )),
    COMMETHOD([dispid(173)], HRESULT, 'LegendEntries',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlLegendPosition), 'RHS' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlLegendPosition, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Legend implementation
##class Legend_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def LegendEntries(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

Interior._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Pattern',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'PatternColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'PatternColor',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'PatternColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'PatternColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for Interior implementation
##class Interior_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

class PlaceholderFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493477-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpPlaceholderType'
ppPlaceholderMixed = -2
ppPlaceholderTitle = 1
ppPlaceholderBody = 2
ppPlaceholderCenterTitle = 3
ppPlaceholderSubtitle = 4
ppPlaceholderVerticalTitle = 5
ppPlaceholderVerticalBody = 6
ppPlaceholderObject = 7
ppPlaceholderChart = 8
ppPlaceholderBitmap = 9
ppPlaceholderMediaClip = 10
ppPlaceholderOrgChart = 11
ppPlaceholderTable = 12
ppPlaceholderSlideNumber = 13
ppPlaceholderHeader = 14
ppPlaceholderFooter = 15
ppPlaceholderDate = 16
ppPlaceholderVerticalObject = 17
ppPlaceholderPicture = 18
PpPlaceholderType = c_int # enum
PlaceholderFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpPlaceholderType), 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'ContainedType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeType), 'ContainedType' )),
]
################################################################
## code template for PlaceholderFormat implementation
##class PlaceholderFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainedType(self):
##        '-no docstring-'
##        #return ContainedType
##

ChartFillFormat._methods_ = [
    COMMETHOD([dispid(2001)], HRESULT, 'Solid'),
    COMMETHOD([dispid(2002)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ChartColorFormat)), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ChartColorFormat)), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'GradientDegree',
              ( ['out', 'retval'], POINTER(c_float), 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'TextureName',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2008)], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'GradientColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientColorType), 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'GradientStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle), 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'GradientVariant',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'RHS' )),
    COMMETHOD([dispid(2013)], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(2014)], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'PresetGradientType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType), 'RHS' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'PresetTexture',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture), 'RHS' )),
    COMMETHOD([dispid(2017)], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'TextureType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureType), 'RHS' )),
    COMMETHOD([dispid(2019)], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFillType), 'RHS' )),
    COMMETHOD([dispid(2021)], HRESULT, 'UserPicture',
              ( ['in', 'optional'], VARIANT, 'PictureFile' ),
              ( ['in', 'optional'], VARIANT, 'PictureFormat' ),
              ( ['in', 'optional'], VARIANT, 'PictureStackUnit' ),
              ( ['in', 'optional'], VARIANT, 'PicturePlacement' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RHS' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RHS' )),
]
################################################################
## code template for ChartFillFormat implementation
##class ChartFillFormat_Impl(object):
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return RHS
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return RHS
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return RHS
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def UserPicture(self, PictureFile, PictureFormat, PictureStackUnit, PicturePlacement):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##

ColorSchemes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ColorScheme)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(ColorScheme), 'Scheme', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(ColorScheme)), 'Add' )),
]
################################################################
## code template for ColorSchemes implementation
##class ColorSchemes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Scheme):
##        '-no docstring-'
##        #return Add
##


# values for enumeration 'PpProtectedViewCloseReason'
ppProtectedViewCloseNormal = 0
ppProtectedViewCloseEdit = 1
ppProtectedViewCloseForced = 2
PpProtectedViewCloseReason = c_int # enum
class EffectParameters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E1-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
EffectParameters._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Direction',
              ( ['out', 'retval'], POINTER(MsoAnimDirection), 'Direction' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Direction',
              ( ['in'], MsoAnimDirection, 'Direction' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Amount',
              ( ['out', 'retval'], POINTER(c_float), 'Amount' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Amount',
              ( ['in'], c_float, 'Amount' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Color2',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'Color2' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Relative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Relative' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Relative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Relative' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'FontName',
              ( ['out', 'retval'], POINTER(BSTR), 'FontName' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'FontName' )),
]
################################################################
## code template for EffectParameters implementation
##class EffectParameters_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Direction
##    def _set(self, Direction):
##        '-no docstring-'
##    Direction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Amount
##    def _set(self, Amount):
##        '-no docstring-'
##    Amount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Color2(self):
##        '-no docstring-'
##        #return Color2
##
##    def _get(self):
##        '-no docstring-'
##        #return Relative
##    def _set(self, Relative):
##        '-no docstring-'
##    Relative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontName
##    def _set(self, FontName):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlUnderlineStyle'
xlUnderlineStyleDouble = -4119
xlUnderlineStyleDoubleAccounting = 5
xlUnderlineStyleNone = -4142
xlUnderlineStyleSingle = 2
xlUnderlineStyleSingleAccounting = 4
XlUnderlineStyle = c_int # enum

# values for enumeration 'MsoAnimEffect'
msoAnimEffectCustom = 0
msoAnimEffectAppear = 1
msoAnimEffectFly = 2
msoAnimEffectBlinds = 3
msoAnimEffectBox = 4
msoAnimEffectCheckerboard = 5
msoAnimEffectCircle = 6
msoAnimEffectCrawl = 7
msoAnimEffectDiamond = 8
msoAnimEffectDissolve = 9
msoAnimEffectFade = 10
msoAnimEffectFlashOnce = 11
msoAnimEffectPeek = 12
msoAnimEffectPlus = 13
msoAnimEffectRandomBars = 14
msoAnimEffectSpiral = 15
msoAnimEffectSplit = 16
msoAnimEffectStretch = 17
msoAnimEffectStrips = 18
msoAnimEffectSwivel = 19
msoAnimEffectWedge = 20
msoAnimEffectWheel = 21
msoAnimEffectWipe = 22
msoAnimEffectZoom = 23
msoAnimEffectRandomEffects = 24
msoAnimEffectBoomerang = 25
msoAnimEffectBounce = 26
msoAnimEffectColorReveal = 27
msoAnimEffectCredits = 28
msoAnimEffectEaseIn = 29
msoAnimEffectFloat = 30
msoAnimEffectGrowAndTurn = 31
msoAnimEffectLightSpeed = 32
msoAnimEffectPinwheel = 33
msoAnimEffectRiseUp = 34
msoAnimEffectSwish = 35
msoAnimEffectThinLine = 36
msoAnimEffectUnfold = 37
msoAnimEffectWhip = 38
msoAnimEffectAscend = 39
msoAnimEffectCenterRevolve = 40
msoAnimEffectFadedSwivel = 41
msoAnimEffectDescend = 42
msoAnimEffectSling = 43
msoAnimEffectSpinner = 44
msoAnimEffectStretchy = 45
msoAnimEffectZip = 46
msoAnimEffectArcUp = 47
msoAnimEffectFadedZoom = 48
msoAnimEffectGlide = 49
msoAnimEffectExpand = 50
msoAnimEffectFlip = 51
msoAnimEffectShimmer = 52
msoAnimEffectFold = 53
msoAnimEffectChangeFillColor = 54
msoAnimEffectChangeFont = 55
msoAnimEffectChangeFontColor = 56
msoAnimEffectChangeFontSize = 57
msoAnimEffectChangeFontStyle = 58
msoAnimEffectGrowShrink = 59
msoAnimEffectChangeLineColor = 60
msoAnimEffectSpin = 61
msoAnimEffectTransparency = 62
msoAnimEffectBoldFlash = 63
msoAnimEffectBlast = 64
msoAnimEffectBoldReveal = 65
msoAnimEffectBrushOnColor = 66
msoAnimEffectBrushOnUnderline = 67
msoAnimEffectColorBlend = 68
msoAnimEffectColorWave = 69
msoAnimEffectComplementaryColor = 70
msoAnimEffectComplementaryColor2 = 71
msoAnimEffectContrastingColor = 72
msoAnimEffectDarken = 73
msoAnimEffectDesaturate = 74
msoAnimEffectFlashBulb = 75
msoAnimEffectFlicker = 76
msoAnimEffectGrowWithColor = 77
msoAnimEffectLighten = 78
msoAnimEffectStyleEmphasis = 79
msoAnimEffectTeeter = 80
msoAnimEffectVerticalGrow = 81
msoAnimEffectWave = 82
msoAnimEffectMediaPlay = 83
msoAnimEffectMediaPause = 84
msoAnimEffectMediaStop = 85
msoAnimEffectPathCircle = 86
msoAnimEffectPathRightTriangle = 87
msoAnimEffectPathDiamond = 88
msoAnimEffectPathHexagon = 89
msoAnimEffectPath5PointStar = 90
msoAnimEffectPathCrescentMoon = 91
msoAnimEffectPathSquare = 92
msoAnimEffectPathTrapezoid = 93
msoAnimEffectPathHeart = 94
msoAnimEffectPathOctagon = 95
msoAnimEffectPath6PointStar = 96
msoAnimEffectPathFootball = 97
msoAnimEffectPathEqualTriangle = 98
msoAnimEffectPathParallelogram = 99
msoAnimEffectPathPentagon = 100
msoAnimEffectPath4PointStar = 101
msoAnimEffectPath8PointStar = 102
msoAnimEffectPathTeardrop = 103
msoAnimEffectPathPointyStar = 104
msoAnimEffectPathCurvedSquare = 105
msoAnimEffectPathCurvedX = 106
msoAnimEffectPathVerticalFigure8 = 107
msoAnimEffectPathCurvyStar = 108
msoAnimEffectPathLoopdeLoop = 109
msoAnimEffectPathBuzzsaw = 110
msoAnimEffectPathHorizontalFigure8 = 111
msoAnimEffectPathPeanut = 112
msoAnimEffectPathFigure8Four = 113
msoAnimEffectPathNeutron = 114
msoAnimEffectPathSwoosh = 115
msoAnimEffectPathBean = 116
msoAnimEffectPathPlus = 117
msoAnimEffectPathInvertedTriangle = 118
msoAnimEffectPathInvertedSquare = 119
msoAnimEffectPathLeft = 120
msoAnimEffectPathTurnRight = 121
msoAnimEffectPathArcDown = 122
msoAnimEffectPathZigzag = 123
msoAnimEffectPathSCurve2 = 124
msoAnimEffectPathSineWave = 125
msoAnimEffectPathBounceLeft = 126
msoAnimEffectPathDown = 127
msoAnimEffectPathTurnUp = 128
msoAnimEffectPathArcUp = 129
msoAnimEffectPathHeartbeat = 130
msoAnimEffectPathSpiralRight = 131
msoAnimEffectPathWave = 132
msoAnimEffectPathCurvyLeft = 133
msoAnimEffectPathDiagonalDownRight = 134
msoAnimEffectPathTurnDown = 135
msoAnimEffectPathArcLeft = 136
msoAnimEffectPathFunnel = 137
msoAnimEffectPathSpring = 138
msoAnimEffectPathBounceRight = 139
msoAnimEffectPathSpiralLeft = 140
msoAnimEffectPathDiagonalUpRight = 141
msoAnimEffectPathTurnUpRight = 142
msoAnimEffectPathArcRight = 143
msoAnimEffectPathSCurve1 = 144
msoAnimEffectPathDecayingWave = 145
msoAnimEffectPathCurvyRight = 146
msoAnimEffectPathStairsDown = 147
msoAnimEffectPathUp = 148
msoAnimEffectPathRight = 149
msoAnimEffectMediaPlayFromBookmark = 150
msoAnimEffect3DArrive = 151
msoAnimEffect3DTurntable = 152
msoAnimEffect3DSwing = 153
msoAnimEffect3DJumpAndTurn = 154
MsoAnimEffect = c_int # enum
class SlideNavigation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F658E3EC-F2D3-4272-AA49-4EC155D5AA76}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SlideNavigation._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Visible' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'Visible' )),
]
################################################################
## code template for SlideNavigation implementation
##class SlideNavigation_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##

class AnimationSettings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149348B-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpEntryEffect'
ppEffectMixed = -2
ppEffectNone = 0
ppEffectCut = 257
ppEffectCutThroughBlack = 258
ppEffectRandom = 513
ppEffectBlindsHorizontal = 769
ppEffectBlindsVertical = 770
ppEffectCheckerboardAcross = 1025
ppEffectCheckerboardDown = 1026
ppEffectCoverLeft = 1281
ppEffectCoverUp = 1282
ppEffectCoverRight = 1283
ppEffectCoverDown = 1284
ppEffectCoverLeftUp = 1285
ppEffectCoverRightUp = 1286
ppEffectCoverLeftDown = 1287
ppEffectCoverRightDown = 1288
ppEffectDissolve = 1537
ppEffectFade = 1793
ppEffectUncoverLeft = 2049
ppEffectUncoverUp = 2050
ppEffectUncoverRight = 2051
ppEffectUncoverDown = 2052
ppEffectUncoverLeftUp = 2053
ppEffectUncoverRightUp = 2054
ppEffectUncoverLeftDown = 2055
ppEffectUncoverRightDown = 2056
ppEffectRandomBarsHorizontal = 2305
ppEffectRandomBarsVertical = 2306
ppEffectStripsUpLeft = 2561
ppEffectStripsUpRight = 2562
ppEffectStripsDownLeft = 2563
ppEffectStripsDownRight = 2564
ppEffectStripsLeftUp = 2565
ppEffectStripsRightUp = 2566
ppEffectStripsLeftDown = 2567
ppEffectStripsRightDown = 2568
ppEffectWipeLeft = 2817
ppEffectWipeUp = 2818
ppEffectWipeRight = 2819
ppEffectWipeDown = 2820
ppEffectBoxOut = 3073
ppEffectBoxIn = 3074
ppEffectFlyFromLeft = 3329
ppEffectFlyFromTop = 3330
ppEffectFlyFromRight = 3331
ppEffectFlyFromBottom = 3332
ppEffectFlyFromTopLeft = 3333
ppEffectFlyFromTopRight = 3334
ppEffectFlyFromBottomLeft = 3335
ppEffectFlyFromBottomRight = 3336
ppEffectPeekFromLeft = 3337
ppEffectPeekFromDown = 3338
ppEffectPeekFromRight = 3339
ppEffectPeekFromUp = 3340
ppEffectCrawlFromLeft = 3341
ppEffectCrawlFromUp = 3342
ppEffectCrawlFromRight = 3343
ppEffectCrawlFromDown = 3344
ppEffectZoomIn = 3345
ppEffectZoomInSlightly = 3346
ppEffectZoomOut = 3347
ppEffectZoomOutSlightly = 3348
ppEffectZoomCenter = 3349
ppEffectZoomBottom = 3350
ppEffectStretchAcross = 3351
ppEffectStretchLeft = 3352
ppEffectStretchUp = 3353
ppEffectStretchRight = 3354
ppEffectStretchDown = 3355
ppEffectSwivel = 3356
ppEffectSpiral = 3357
ppEffectSplitHorizontalOut = 3585
ppEffectSplitHorizontalIn = 3586
ppEffectSplitVerticalOut = 3587
ppEffectSplitVerticalIn = 3588
ppEffectFlashOnceFast = 3841
ppEffectFlashOnceMedium = 3842
ppEffectFlashOnceSlow = 3843
ppEffectAppear = 3844
ppEffectCircleOut = 3845
ppEffectDiamondOut = 3846
ppEffectCombHorizontal = 3847
ppEffectCombVertical = 3848
ppEffectFadeSmoothly = 3849
ppEffectNewsflash = 3850
ppEffectPlusOut = 3851
ppEffectPushDown = 3852
ppEffectPushLeft = 3853
ppEffectPushRight = 3854
ppEffectPushUp = 3855
ppEffectWedge = 3856
ppEffectWheel1Spoke = 3857
ppEffectWheel2Spokes = 3858
ppEffectWheel3Spokes = 3859
ppEffectWheel4Spokes = 3860
ppEffectWheel8Spokes = 3861
ppEffectWheelReverse1Spoke = 3862
ppEffectVortexLeft = 3863
ppEffectVortexUp = 3864
ppEffectVortexRight = 3865
ppEffectVortexDown = 3866
ppEffectRippleCenter = 3867
ppEffectRippleRightUp = 3868
ppEffectRippleLeftUp = 3869
ppEffectRippleLeftDown = 3870
ppEffectRippleRightDown = 3871
ppEffectGlitterDiamondLeft = 3872
ppEffectGlitterDiamondUp = 3873
ppEffectGlitterDiamondRight = 3874
ppEffectGlitterDiamondDown = 3875
ppEffectGlitterHexagonLeft = 3876
ppEffectGlitterHexagonUp = 3877
ppEffectGlitterHexagonRight = 3878
ppEffectGlitterHexagonDown = 3879
ppEffectGalleryLeft = 3880
ppEffectGalleryRight = 3881
ppEffectConveyorLeft = 3882
ppEffectConveyorRight = 3883
ppEffectDoorsVertical = 3884
ppEffectDoorsHorizontal = 3885
ppEffectWindowVertical = 3886
ppEffectWindowHorizontal = 3887
ppEffectWarpIn = 3888
ppEffectWarpOut = 3889
ppEffectFlyThroughIn = 3890
ppEffectFlyThroughOut = 3891
ppEffectFlyThroughInBounce = 3892
ppEffectFlyThroughOutBounce = 3893
ppEffectRevealSmoothLeft = 3894
ppEffectRevealSmoothRight = 3895
ppEffectRevealBlackLeft = 3896
ppEffectRevealBlackRight = 3897
ppEffectHoneycomb = 3898
ppEffectFerrisWheelLeft = 3899
ppEffectFerrisWheelRight = 3900
ppEffectSwitchLeft = 3901
ppEffectSwitchUp = 3902
ppEffectSwitchRight = 3903
ppEffectSwitchDown = 3904
ppEffectFlipLeft = 3905
ppEffectFlipUp = 3906
ppEffectFlipRight = 3907
ppEffectFlipDown = 3908
ppEffectFlashbulb = 3909
ppEffectShredStripsIn = 3910
ppEffectShredStripsOut = 3911
ppEffectShredRectangleIn = 3912
ppEffectShredRectangleOut = 3913
ppEffectCubeLeft = 3914
ppEffectCubeUp = 3915
ppEffectCubeRight = 3916
ppEffectCubeDown = 3917
ppEffectRotateLeft = 3918
ppEffectRotateUp = 3919
ppEffectRotateRight = 3920
ppEffectRotateDown = 3921
ppEffectBoxLeft = 3922
ppEffectBoxUp = 3923
ppEffectBoxRight = 3924
ppEffectBoxDown = 3925
ppEffectOrbitLeft = 3926
ppEffectOrbitUp = 3927
ppEffectOrbitRight = 3928
ppEffectOrbitDown = 3929
ppEffectPanLeft = 3930
ppEffectPanUp = 3931
ppEffectPanRight = 3932
ppEffectPanDown = 3933
ppEffectFallOverLeft = 3934
ppEffectFallOverRight = 3935
ppEffectDrapeLeft = 3936
ppEffectDrapeRight = 3937
ppEffectCurtains = 3938
ppEffectWindLeft = 3939
ppEffectWindRight = 3940
ppEffectPrestige = 3941
ppEffectFracture = 3942
ppEffectCrush = 3943
ppEffectPeelOffLeft = 3944
ppEffectPeelOffRight = 3945
ppEffectPageCurlSingleLeft = 3946
ppEffectPageCurlSingleRight = 3947
ppEffectPageCurlDoubleLeft = 3948
ppEffectPageCurlDoubleRight = 3949
ppEffectAirplaneLeft = 3950
ppEffectAirplaneRight = 3951
ppEffectOrigamiLeft = 3952
ppEffectOrigamiRight = 3953
ppEffectMorphByObject = 3954
ppEffectMorphByWord = 3955
ppEffectMorphByChar = 3956
PpEntryEffect = c_int # enum
AnimationSettings._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'DimColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'DimColor' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SoundEffect',
              ( ['out', 'retval'], POINTER(POINTER(SoundEffect)), 'SoundEffect' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'EntryEffect',
              ( ['out', 'retval'], POINTER(PpEntryEffect), 'EntryEffect' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'EntryEffect',
              ( ['in'], PpEntryEffect, 'EntryEffect' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'AfterEffect',
              ( ['out', 'retval'], POINTER(PpAfterEffect), 'AfterEffect' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'AfterEffect',
              ( ['in'], PpAfterEffect, 'AfterEffect' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AnimationOrder',
              ( ['out', 'retval'], POINTER(c_int), 'AnimationOrder' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'AnimationOrder',
              ( ['in'], c_int, 'AnimationOrder' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'AdvanceMode',
              ( ['out', 'retval'], POINTER(PpAdvanceMode), 'AdvanceMode' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'AdvanceMode',
              ( ['in'], PpAdvanceMode, 'AdvanceMode' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'AdvanceTime',
              ( ['out', 'retval'], POINTER(c_float), 'AdvanceTime' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'AdvanceTime',
              ( ['in'], c_float, 'AdvanceTime' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'PlaySettings',
              ( ['out', 'retval'], POINTER(POINTER(PlaySettings)), 'PlaySettings' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'TextLevelEffect',
              ( ['out', 'retval'], POINTER(PpTextLevelEffect), 'TextLevelEffect' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'TextLevelEffect',
              ( ['in'], PpTextLevelEffect, 'TextLevelEffect' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'TextUnitEffect',
              ( ['out', 'retval'], POINTER(PpTextUnitEffect), 'TextUnitEffect' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'TextUnitEffect',
              ( ['in'], PpTextUnitEffect, 'TextUnitEffect' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Animate',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Animate' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'Animate',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Animate' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'AnimateBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AnimateBackground' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'AnimateBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AnimateBackground' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'AnimateTextInReverse',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AnimateTextInReverse' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'AnimateTextInReverse',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AnimateTextInReverse' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'ChartUnitEffect',
              ( ['out', 'retval'], POINTER(PpChartUnitEffect), 'ChartUnitEffect' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'ChartUnitEffect',
              ( ['in'], PpChartUnitEffect, 'ChartUnitEffect' )),
]
################################################################
## code template for AnimationSettings implementation
##class AnimationSettings_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def DimColor(self):
##        '-no docstring-'
##        #return DimColor
##
##    @property
##    def SoundEffect(self):
##        '-no docstring-'
##        #return SoundEffect
##
##    def _get(self):
##        '-no docstring-'
##        #return EntryEffect
##    def _set(self, EntryEffect):
##        '-no docstring-'
##    EntryEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AfterEffect
##    def _set(self, AfterEffect):
##        '-no docstring-'
##    AfterEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AnimationOrder
##    def _set(self, AnimationOrder):
##        '-no docstring-'
##    AnimationOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceMode
##    def _set(self, AdvanceMode):
##        '-no docstring-'
##    AdvanceMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceTime
##    def _set(self, AdvanceTime):
##        '-no docstring-'
##    AdvanceTime = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlaySettings(self):
##        '-no docstring-'
##        #return PlaySettings
##
##    def _get(self):
##        '-no docstring-'
##        #return TextLevelEffect
##    def _set(self, TextLevelEffect):
##        '-no docstring-'
##    TextLevelEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextUnitEffect
##    def _set(self, TextUnitEffect):
##        '-no docstring-'
##    TextUnitEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Animate
##    def _set(self, Animate):
##        '-no docstring-'
##    Animate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AnimateBackground
##    def _set(self, AnimateBackground):
##        '-no docstring-'
##    AnimateBackground = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AnimateTextInReverse
##    def _set(self, AnimateTextInReverse):
##        '-no docstring-'
##    AnimateTextInReverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ChartUnitEffect
##    def _set(self, ChartUnitEffect):
##        '-no docstring-'
##    ChartUnitEffect = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlVAlign'
xlVAlignBottom = -4107
xlVAlignCenter = -4108
xlVAlignDistributed = -4117
xlVAlignJustify = -4130
xlVAlignTop = -4160
XlVAlign = c_int # enum
class PropertyEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E9-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PropertyEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Property',
              ( ['out', 'retval'], POINTER(MsoAnimProperty), 'Property' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Property',
              ( ['in'], MsoAnimProperty, 'Property' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Points',
              ( ['out', 'retval'], POINTER(POINTER(AnimationPoints)), 'Points' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'From',
              ( ['out', 'retval'], POINTER(VARIANT), 'From' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'From',
              ( ['in'], VARIANT, 'From' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'To',
              ( ['out', 'retval'], POINTER(VARIANT), 'To' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'To',
              ( ['in'], VARIANT, 'To' )),
]
################################################################
## code template for PropertyEffect implementation
##class PropertyEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Property
##    def _set(self, Property):
##        '-no docstring-'
##    Property = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return Points
##
##    def _get(self):
##        '-no docstring-'
##        #return From
##    def _set(self, From):
##        '-no docstring-'
##    From = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return To
##    def _set(self, To):
##        '-no docstring-'
##    To = property(_get, _set, doc = _set.__doc__)
##

class Timing(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E0-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoAnimTriggerType'
msoAnimTriggerMixed = -1
msoAnimTriggerNone = 0
msoAnimTriggerOnPageClick = 1
msoAnimTriggerWithPrevious = 2
msoAnimTriggerAfterPrevious = 3
msoAnimTriggerOnShapeClick = 4
msoAnimTriggerOnMediaBookmark = 5
MsoAnimTriggerType = c_int # enum
Timing._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Duration',
              ( ['out', 'retval'], POINTER(c_float), 'Duration' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Duration',
              ( ['in'], c_float, 'Duration' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'TriggerType',
              ( ['out', 'retval'], POINTER(MsoAnimTriggerType), 'TriggerType' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'TriggerType',
              ( ['in'], MsoAnimTriggerType, 'TriggerType' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'TriggerDelayTime',
              ( ['out', 'retval'], POINTER(c_float), 'TriggerDelayTime' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'TriggerDelayTime',
              ( ['in'], c_float, 'TriggerDelayTime' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'TriggerShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'TriggerShape' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'TriggerShape',
              ( ['in'], POINTER(Shape), 'TriggerShape' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'RepeatCount',
              ( ['out', 'retval'], POINTER(c_int), 'RepeatCount' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'RepeatCount',
              ( ['in'], c_int, 'RepeatCount' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'RepeatDuration',
              ( ['out', 'retval'], POINTER(c_float), 'RepeatDuration' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'RepeatDuration',
              ( ['in'], c_float, 'RepeatDuration' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Speed',
              ( ['out', 'retval'], POINTER(c_float), 'Speed' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Speed',
              ( ['in'], c_float, 'Speed' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Accelerate',
              ( ['out', 'retval'], POINTER(c_float), 'Accelerate' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Accelerate',
              ( ['in'], c_float, 'Accelerate' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Decelerate',
              ( ['out', 'retval'], POINTER(c_float), 'Decelerate' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'Decelerate',
              ( ['in'], c_float, 'Decelerate' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'AutoReverse',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoReverse' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'AutoReverse',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoReverse' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'SmoothStart',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'SmoothStart' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'SmoothStart',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SmoothStart' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'SmoothEnd',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'SmoothEnd' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'SmoothEnd',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SmoothEnd' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'RewindAtEnd',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RewindAtEnd' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'RewindAtEnd',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RewindAtEnd' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Restart',
              ( ['out', 'retval'], POINTER(MsoAnimEffectRestart), 'Restart' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'Restart',
              ( ['in'], MsoAnimEffectRestart, 'Restart' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'BounceEnd',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'BounceEnd' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'BounceEnd',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'BounceEnd' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'BounceEndIntensity',
              ( ['out', 'retval'], POINTER(c_float), 'BounceEndIntensity' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'BounceEndIntensity',
              ( ['in'], c_float, 'BounceEndIntensity' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'TriggerBookmark',
              ( ['out', 'retval'], POINTER(BSTR), 'TriggerBookmark' )),
    COMMETHOD([dispid(2019), 'propput'], HRESULT, 'TriggerBookmark',
              ( ['in'], BSTR, 'TriggerBookmark' )),
]
################################################################
## code template for Timing implementation
##class Timing_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Duration
##    def _set(self, Duration):
##        '-no docstring-'
##    Duration = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TriggerType
##    def _set(self, TriggerType):
##        '-no docstring-'
##    TriggerType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TriggerDelayTime
##    def _set(self, TriggerDelayTime):
##        '-no docstring-'
##    TriggerDelayTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TriggerShape
##    def _set(self, TriggerShape):
##        '-no docstring-'
##    TriggerShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RepeatCount
##    def _set(self, RepeatCount):
##        '-no docstring-'
##    RepeatCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RepeatDuration
##    def _set(self, RepeatDuration):
##        '-no docstring-'
##    RepeatDuration = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Speed
##    def _set(self, Speed):
##        '-no docstring-'
##    Speed = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Accelerate
##    def _set(self, Accelerate):
##        '-no docstring-'
##    Accelerate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Decelerate
##    def _set(self, Decelerate):
##        '-no docstring-'
##    Decelerate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoReverse
##    def _set(self, AutoReverse):
##        '-no docstring-'
##    AutoReverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SmoothStart
##    def _set(self, SmoothStart):
##        '-no docstring-'
##    SmoothStart = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SmoothEnd
##    def _set(self, SmoothEnd):
##        '-no docstring-'
##    SmoothEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RewindAtEnd
##    def _set(self, RewindAtEnd):
##        '-no docstring-'
##    RewindAtEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Restart
##    def _set(self, Restart):
##        '-no docstring-'
##    Restart = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BounceEnd
##    def _set(self, BounceEnd):
##        '-no docstring-'
##    BounceEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BounceEndIntensity
##    def _set(self, BounceEndIntensity):
##        '-no docstring-'
##    BounceEndIntensity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TriggerBookmark
##    def _set(self, TriggerBookmark):
##        '-no docstring-'
##    TriggerBookmark = property(_get, _set, doc = _set.__doc__)
##

class Borders(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934CA-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'PpBorderType'
ppBorderTop = 1
ppBorderLeft = 2
ppBorderBottom = 3
ppBorderRight = 4
ppBorderDiagonalDown = 5
ppBorderDiagonalUp = 6
PpBorderType = c_int # enum
Borders._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], PpBorderType, 'BorderType' ),
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'Item' )),
]
################################################################
## code template for Borders implementation
##class Borders_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, BorderType):
##        '-no docstring-'
##        #return Item
##

class ProtectedViewWindows(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E559-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ProtectedViewWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E55A-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ProtectedViewWindows._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Open',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], BSTR, 'ReadPassword', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'OpenAndRepair', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'Open' )),
]
################################################################
## code template for ProtectedViewWindows implementation
##class ProtectedViewWindows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Open(self, FileName, ReadPassword, OpenAndRepair):
##        '-no docstring-'
##        #return Open
##

class Adjustments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347C-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CalloutFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493485-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ConnectorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493481-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class GroupShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149347B-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ShapeNodes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493486-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextEffectFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493482-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493484-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ThreeDFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493483-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OLEFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493488-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LinkFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493489-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Table(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C3-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextFrame2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934F9-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Model3DFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493483-5A91-11CF-8700-00AA0060263C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Shape._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'Apply'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13)], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(14)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(15)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(18)], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(19)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(20)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(22)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(23)], HRESULT, 'Ungroup',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Ungroup' )),
    COMMETHOD([dispid(24)], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'Adjustments' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'AutoShapeType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'AutoShapeType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BlackWhiteMode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBlackWhiteMode), 'BlackWhiteMode' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBlackWhiteMode, 'BlackWhiteMode' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['out', 'retval'], POINTER(POINTER(CalloutFormat)), 'Callout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['out', 'retval'], POINTER(c_int), 'ConnectionSiteCount' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Connector',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Connector' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ConnectorFormat',
              ( ['out', 'retval'], POINTER(POINTER(ConnectorFormat)), 'ConnectorFormat' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['out', 'retval'], POINTER(POINTER(GroupShapes)), 'GroupItems' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HorizontalFlip' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'Line' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LockAspectRatio' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LockAspectRatio' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(ShapeNodes)), 'Nodes' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['out', 'retval'], POINTER(c_float), 'Rotation' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'Rotation' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'Picture' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['out', 'retval'], POINTER(POINTER(TextEffectFormat)), 'TextEffect' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'TextFrame' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeType), 'Type' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'VerticalFlip' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['out', 'retval'], POINTER(VARIANT), 'Vertices' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['out', 'retval'], POINTER(c_int), 'ZOrderPosition' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'OLEFormat',
              ( ['out', 'retval'], POINTER(POINTER(OLEFormat)), 'OLEFormat' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'LinkFormat',
              ( ['out', 'retval'], POINTER(POINTER(LinkFormat)), 'LinkFormat' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'PlaceholderFormat',
              ( ['out', 'retval'], POINTER(POINTER(PlaceholderFormat)), 'PlaceholderFormat' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'AnimationSettings',
              ( ['out', 'retval'], POINTER(POINTER(AnimationSettings)), 'AnimationSettings' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'ActionSettings',
              ( ['out', 'retval'], POINTER(POINTER(ActionSettings)), 'ActionSettings' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Tags',
              ( ['out', 'retval'], POINTER(POINTER(Tags)), 'Tags' )),
    COMMETHOD([dispid(2009)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2010)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2011)], HRESULT, 'Select',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Replace', -1 )),
    COMMETHOD([dispid(2012)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Duplicate' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'MediaType',
              ( ['out', 'retval'], POINTER(PpMediaType), 'MediaType' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'HasTextFrame',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTextFrame' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'SoundFormat',
              ( ['out', 'retval'], POINTER(POINTER(SoundFormat)), 'SoundFormat' )),
    COMMETHOD([dispid(130), 'hidden', 'propget'], HRESULT, 'Script',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Script)), 'Script' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'HasTable',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTable' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Table',
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'Table' )),
    COMMETHOD([dispid(2018), 'hidden'], HRESULT, 'Export',
              ( ['in'], BSTR, 'PathName' ),
              ( ['in'], PpShapeFormat, 'Filter' ),
              ( ['in', 'optional'], c_int, 'ScaleWidth', 0 ),
              ( ['in', 'optional'], c_int, 'ScaleHeight', 0 ),
              ( ['in', 'optional'], PpExportMode, 'ExportMode', 1 )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(Diagram)), 'Diagram' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'DiagramNode' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Child' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Parent' )),
    COMMETHOD([dispid(138), 'hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['out', 'retval'], POINTER(POINTER(CanvasShapes)), 'CanvasShapes' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Id',
              ( ['out', 'retval'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(140), 'hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141), 'hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142), 'hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143), 'hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame2)), 'Frame' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasChart' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex), 'ShapeStyle' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex, 'ShapeStyle' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SoftEdgeFormat)), 'SoftEdge' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.GlowFormat)), 'Glow' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ReflectionFormat)), 'Reflection' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'Chart',
              ( ['out', 'retval'], POINTER(POINTER(Chart)), 'Chart' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'HasSmartArt',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasSmartArt' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'SmartArt',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArt)), 'SmartArt' )),
    COMMETHOD([dispid(157)], HRESULT, 'ConvertTextToSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayout), 'Layout' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(158), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'MediaFormat',
              ( ['out', 'retval'], POINTER(POINTER(MediaFormat)), 'MediaFormat' )),
    COMMETHOD([dispid(2023)], HRESULT, 'PickupAnimation'),
    COMMETHOD([dispid(2024)], HRESULT, 'ApplyAnimation'),
    COMMETHOD([dispid(2025)], HRESULT, 'UpgradeMedia'),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'IsNarration',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IsNarration' )),
    COMMETHOD([dispid(2031), 'propput'], HRESULT, 'IsNarration',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'IsNarration' )),
    COMMETHOD([dispid(160), 'propget'], HRESULT, 'InkXML',
              ( ['out', 'retval'], POINTER(BSTR), 'InkXML' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'HasInkXML',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasInkXML' )),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'HasSectionZoom',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasSectionZoom' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'GraphicStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex), 'GraphicStyle' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'GraphicStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex, 'GraphicStyle' )),
    COMMETHOD([dispid(164), 'propget'], HRESULT, 'Model3D',
              ( ['out', 'retval'], POINTER(POINTER(Model3DFormat)), 'Model3D' )),
    COMMETHOD([dispid(165), 'propget'], HRESULT, 'Decorative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'fDecorative' )),
    COMMETHOD([dispid(165), 'propput'], HRESULT, 'Decorative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'fDecorative' )),
]
################################################################
## code template for Shape implementation
##class Shape_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return Ungroup
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return Adjustments
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoShapeType
##    def _set(self, AutoShapeType):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BlackWhiteMode
##    def _set(self, BlackWhiteMode):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return Callout
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return ConnectionSiteCount
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return Connector
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return ConnectorFormat
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return GroupItems
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return HorizontalFlip
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    def _get(self):
##        '-no docstring-'
##        #return LockAspectRatio
##    def _set(self, LockAspectRatio):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    def _get(self):
##        '-no docstring-'
##        #return Rotation
##    def _set(self, Rotation):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return Picture
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return TextEffect
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return TextFrame
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return VerticalFlip
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return Vertices
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return ZOrderPosition
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return OLEFormat
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return LinkFormat
##
##    @property
##    def PlaceholderFormat(self):
##        '-no docstring-'
##        #return PlaceholderFormat
##
##    @property
##    def AnimationSettings(self):
##        '-no docstring-'
##        #return AnimationSettings
##
##    @property
##    def ActionSettings(self):
##        '-no docstring-'
##        #return ActionSettings
##
##    @property
##    def Tags(self):
##        '-no docstring-'
##        #return Tags
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    @property
##    def MediaType(self):
##        '-no docstring-'
##        #return MediaType
##
##    @property
##    def HasTextFrame(self):
##        '-no docstring-'
##        #return HasTextFrame
##
##    @property
##    def SoundFormat(self):
##        '-no docstring-'
##        #return SoundFormat
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return Script
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasTable(self):
##        '-no docstring-'
##        #return HasTable
##
##    @property
##    def Table(self):
##        '-no docstring-'
##        #return Table
##
##    def Export(self, PathName, Filter, ScaleWidth, ScaleHeight, ExportMode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return DiagramNode
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return Child
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return CanvasShapes
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return Frame
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return pHasChart
##
##    def _get(self):
##        '-no docstring-'
##        #return ShapeStyle
##    def _set(self, ShapeStyle):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return SoftEdge
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return Glow
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return Chart
##
##    @property
##    def HasSmartArt(self):
##        '-no docstring-'
##        #return HasSmartArt
##
##    @property
##    def SmartArt(self):
##        '-no docstring-'
##        #return SmartArt
##
##    def ConvertTextToSmartArt(self, Layout):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MediaFormat(self):
##        '-no docstring-'
##        #return MediaFormat
##
##    def PickupAnimation(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyAnimation(self):
##        '-no docstring-'
##        #return 
##
##    def UpgradeMedia(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return IsNarration
##    def _set(self, IsNarration):
##        '-no docstring-'
##    IsNarration = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InkXML(self):
##        '-no docstring-'
##        #return InkXML
##
##    @property
##    def HasInkXML(self):
##        '-no docstring-'
##        #return HasInkXML
##
##    @property
##    def HasSectionZoom(self):
##        '-no docstring-'
##        #return HasSectionZoom
##
##    def _get(self):
##        '-no docstring-'
##        #return GraphicStyle
##    def _set(self, GraphicStyle):
##        '-no docstring-'
##    GraphicStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Model3D(self):
##        '-no docstring-'
##        #return Model3D
##
##    def _get(self):
##        '-no docstring-'
##        #return fDecorative
##    def _set(self, fDecorative):
##        '-no docstring-'
##    Decorative = property(_get, _set, doc = _set.__doc__)
##

class TextStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493499-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextStyleLevels(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{9149349A-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TextStyle._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Ruler',
              ( ['out', 'retval'], POINTER(POINTER(Ruler)), 'Ruler' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'TextFrame',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'TextFrame' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Levels',
              ( ['out', 'retval'], POINTER(POINTER(TextStyleLevels)), 'Levels' )),
]
################################################################
## code template for TextStyle implementation
##class TextStyle_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Ruler(self):
##        '-no docstring-'
##        #return Ruler
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return TextFrame
##
##    @property
##    def Levels(self):
##        '-no docstring-'
##        #return Levels
##

class Selection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493454-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Effect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934DF-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
EApplication._methods_ = [
    COMMETHOD([], HRESULT, 'WindowSelectionChange',
              ( ['in'], POINTER(Selection), 'Sel' )),
    COMMETHOD([], HRESULT, 'WindowBeforeRightClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WindowBeforeDoubleClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'PresentationClose',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'PresentationSave',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'PresentationOpen',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'NewPresentation',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'PresentationNewSlide',
              ( ['in'], POINTER(Slide), 'Sld' )),
    COMMETHOD([], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Presentation), 'Pres' ),
              ( ['in'], POINTER(DocumentWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Presentation), 'Pres' ),
              ( ['in'], POINTER(DocumentWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'SlideShowBegin',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'SlideShowNextBuild',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'SlideShowNextSlide',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'SlideShowEnd',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'PresentationPrint',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'SlideSelectionChanged',
              ( ['in'], POINTER(SlideRange), 'SldRange' )),
    COMMETHOD([], HRESULT, 'ColorSchemeChanged',
              ( ['in'], POINTER(SlideRange), 'SldRange' )),
    COMMETHOD([], HRESULT, 'PresentationBeforeSave',
              ( ['in'], POINTER(Presentation), 'Pres' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SlideShowNextClick',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' ),
              ( ['in'], POINTER(Effect), 'nEffect' )),
    COMMETHOD([], HRESULT, 'AfterNewPresentation',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'AfterPresentationOpen',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'PresentationSync',
              ( ['in'], POINTER(Presentation), 'Pres' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSyncEventType, 'SyncEventType' )),
    COMMETHOD([], HRESULT, 'SlideShowOnNext',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'SlideShowOnPrevious',
              ( ['in'], POINTER(SlideShowWindow), 'Wn' )),
    COMMETHOD([], HRESULT, 'PresentationBeforeClose',
              ( ['in'], POINTER(Presentation), 'Pres' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowOpen',
              ( ['in'], POINTER(ProtectedViewWindow), 'ProtViewWindow' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeEdit',
              ( ['in'], POINTER(ProtectedViewWindow), 'ProtViewWindow' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeClose',
              ( ['in'], POINTER(ProtectedViewWindow), 'ProtViewWindow' ),
              ( ['in'], PpProtectedViewCloseReason, 'ProtectedViewCloseReason' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowActivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'ProtViewWindow' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowDeactivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'ProtViewWindow' )),
    COMMETHOD([], HRESULT, 'PresentationCloseFinal',
              ( ['in'], POINTER(Presentation), 'Pres' )),
    COMMETHOD([], HRESULT, 'AfterDragDropOnSlide',
              ( ['in'], POINTER(Slide), 'Sld' ),
              ( ['in'], c_float, 'X' ),
              ( ['in'], c_float, 'Y' )),
    COMMETHOD([], HRESULT, 'AfterShapeSizeChange',
              ( ['in'], POINTER(Shape), 'shp' )),
]
################################################################
## code template for EApplication implementation
##class EApplication_Impl(object):
##    def WindowSelectionChange(self, Sel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeRightClick(self, Sel):
##        '-no docstring-'
##        #return Cancel
##
##    def WindowBeforeDoubleClick(self, Sel):
##        '-no docstring-'
##        #return Cancel
##
##    def PresentationClose(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def PresentationSave(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def PresentationOpen(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def NewPresentation(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def PresentationNewSlide(self, Sld):
##        '-no docstring-'
##        #return 
##
##    def WindowActivate(self, Pres, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Pres, Wn):
##        '-no docstring-'
##        #return 
##
##    def SlideShowBegin(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def SlideShowNextBuild(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def SlideShowNextSlide(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def SlideShowEnd(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def PresentationPrint(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def SlideSelectionChanged(self, SldRange):
##        '-no docstring-'
##        #return 
##
##    def ColorSchemeChanged(self, SldRange):
##        '-no docstring-'
##        #return 
##
##    def PresentationBeforeSave(self, Pres):
##        '-no docstring-'
##        #return Cancel
##
##    def SlideShowNextClick(self, Wn, nEffect):
##        '-no docstring-'
##        #return 
##
##    def AfterNewPresentation(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def AfterPresentationOpen(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def PresentationSync(self, Pres, SyncEventType):
##        '-no docstring-'
##        #return 
##
##    def SlideShowOnNext(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def SlideShowOnPrevious(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def PresentationBeforeClose(self, Pres):
##        '-no docstring-'
##        #return Cancel
##
##    def ProtectedViewWindowOpen(self, ProtViewWindow):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowBeforeEdit(self, ProtViewWindow):
##        '-no docstring-'
##        #return Cancel
##
##    def ProtectedViewWindowBeforeClose(self, ProtViewWindow, ProtectedViewCloseReason):
##        '-no docstring-'
##        #return Cancel
##
##    def ProtectedViewWindowActivate(self, ProtViewWindow):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowDeactivate(self, ProtViewWindow):
##        '-no docstring-'
##        #return 
##
##    def PresentationCloseFinal(self, Pres):
##        '-no docstring-'
##        #return 
##
##    def AfterDragDropOnSlide(self, Sld, X, Y):
##        '-no docstring-'
##        #return 
##
##    def AfterShapeSizeChange(self, shp):
##        '-no docstring-'
##        #return 
##

class Comment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D5-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Comments._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], BSTR, 'Author' ),
              ( ['in'], BSTR, 'AuthorInitials' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'Add' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Add2',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], BSTR, 'Author' ),
              ( ['in'], BSTR, 'AuthorInitials' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'ProviderID' ),
              ( ['in'], BSTR, 'UserID' ),
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'Add' )),
]
################################################################
## code template for Comments implementation
##class Comments_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Left, Top, Author, AuthorInitials, Text):
##        '-no docstring-'
##        #return Add
##
##    def Add2(self, Left, Top, Author, AuthorInitials, Text, ProviderID, UserID):
##        '-no docstring-'
##        #return Add
##

class View(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493458-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DocumentWindow._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Selection',
              ( ['out', 'retval'], POINTER(POINTER(Selection)), 'Selection' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'View',
              ( ['out', 'retval'], POINTER(POINTER(View)), 'View' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Presentation',
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Presentation' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'ViewType',
              ( ['out', 'retval'], POINTER(PpViewType), 'ViewType' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'ViewType',
              ( ['in'], PpViewType, 'ViewType' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'BlackAndWhite',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'BlackAndWhite' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'BlackAndWhite',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'BlackAndWhite' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Active' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(PpWindowState), 'WindowState' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'WindowState',
              ( ['in'], PpWindowState, 'WindowState' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'Caption' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(2014)], HRESULT, 'FitToPage'),
    COMMETHOD([dispid(2015)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2016)], HRESULT, 'LargeScroll',
              ( ['in', 'optional'], c_int, 'Down', 1 ),
              ( ['in', 'optional'], c_int, 'Up', 0 ),
              ( ['in', 'optional'], c_int, 'ToRight', 0 ),
              ( ['in', 'optional'], c_int, 'ToLeft', 0 )),
    COMMETHOD([dispid(2017)], HRESULT, 'SmallScroll',
              ( ['in', 'optional'], c_int, 'Down', 1 ),
              ( ['in', 'optional'], c_int, 'Up', 0 ),
              ( ['in', 'optional'], c_int, 'ToRight', 0 ),
              ( ['in', 'optional'], c_int, 'ToLeft', 0 )),
    COMMETHOD([dispid(2018)], HRESULT, 'NewWindow',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindow)), 'NewWindow' )),
    COMMETHOD([dispid(2019)], HRESULT, 'Close'),
    COMMETHOD([dispid(2020), 'restricted', 'propget'], HRESULT, 'HWND',
              ( ['out', 'retval'], POINTER(c_int), 'HWND' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'ActivePane',
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'ActivePane' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Panes',
              ( ['out', 'retval'], POINTER(POINTER(Panes)), 'Panes' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'SplitVertical',
              ( ['out', 'retval'], POINTER(c_int), 'SplitVertical' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'SplitVertical',
              ( ['in'], c_int, 'SplitVertical' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'SplitHorizontal',
              ( ['out', 'retval'], POINTER(c_int), 'SplitHorizontal' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'SplitHorizontal',
              ( ['in'], c_int, 'SplitHorizontal' )),
    COMMETHOD([dispid(2025)], HRESULT, 'RangeFromPoint',
              ( ['in'], c_int, 'X' ),
              ( ['in'], c_int, 'Y' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RangeFromPoint' )),
    COMMETHOD([dispid(2026)], HRESULT, 'PointsToScreenPixelsX',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_int), 'PointsToScreenPixelsX' )),
    COMMETHOD([dispid(2027)], HRESULT, 'PointsToScreenPixelsY',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_int), 'PointsToScreenPixelsY' )),
    COMMETHOD([dispid(2028)], HRESULT, 'ScrollIntoView',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Start', -1 )),
    COMMETHOD([dispid(2029)], HRESULT, 'IsSectionExpanded',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsSectionExpanded' )),
    COMMETHOD([dispid(2030)], HRESULT, 'ExpandSection',
              ( ['in'], c_int, 'sectionIndex' ),
              ( ['in'], VARIANT_BOOL, 'Expand' )),
    COMMETHOD([dispid(2031)], HRESULT, 'ShowInsertAppDialog',
              ( ['in'], c_int, 'Filter' )),
]
################################################################
## code template for DocumentWindow implementation
##class DocumentWindow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return Selection
##
##    @property
##    def View(self):
##        '-no docstring-'
##        #return View
##
##    @property
##    def Presentation(self):
##        '-no docstring-'
##        #return Presentation
##
##    def _get(self):
##        '-no docstring-'
##        #return ViewType
##    def _set(self, ViewType):
##        '-no docstring-'
##    ViewType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BlackAndWhite
##    def _set(self, BlackAndWhite):
##        '-no docstring-'
##    BlackAndWhite = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return Active
##
##    def _get(self):
##        '-no docstring-'
##        #return WindowState
##    def _set(self, WindowState):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Caption(self):
##        '-no docstring-'
##        #return Caption
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def FitToPage(self):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def LargeScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def SmallScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return NewWindow
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HWND(self):
##        '-no docstring-'
##        #return HWND
##
##    @property
##    def ActivePane(self):
##        '-no docstring-'
##        #return ActivePane
##
##    @property
##    def Panes(self):
##        '-no docstring-'
##        #return Panes
##
##    def _get(self):
##        '-no docstring-'
##        #return SplitVertical
##    def _set(self, SplitVertical):
##        '-no docstring-'
##    SplitVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SplitHorizontal
##    def _set(self, SplitHorizontal):
##        '-no docstring-'
##    SplitHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def RangeFromPoint(self, X, Y):
##        '-no docstring-'
##        #return RangeFromPoint
##
##    def PointsToScreenPixelsX(self, Points):
##        '-no docstring-'
##        #return PointsToScreenPixelsX
##
##    def PointsToScreenPixelsY(self, Points):
##        '-no docstring-'
##        #return PointsToScreenPixelsY
##
##    def ScrollIntoView(self, Left, Top, Width, Height, Start):
##        '-no docstring-'
##        #return 
##
##    def IsSectionExpanded(self, sectionIndex):
##        '-no docstring-'
##        #return IsSectionExpanded
##
##    def ExpandSection(self, sectionIndex, Expand):
##        '-no docstring-'
##        #return 
##
##    def ShowInsertAppDialog(self, Filter):
##        '-no docstring-'
##        #return 
##

Selection._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2004)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2005)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2006)], HRESULT, 'Unselect'),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpSelectionType), 'Type' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'SlideRange',
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'SlideRange' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ShapeRange',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'ShapeRange' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'TextRange',
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'TextRange' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'ChildShapeRange',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'ChildShapeRange' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'HasChildShapeRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HasChildShapeRange' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'TextRange2',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextRange2)), 'TextRange2' )),
]
################################################################
## code template for Selection implementation
##class Selection_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Unselect(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def SlideRange(self):
##        '-no docstring-'
##        #return SlideRange
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return ShapeRange
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def ChildShapeRange(self):
##        '-no docstring-'
##        #return ChildShapeRange
##
##    @property
##    def HasChildShapeRange(self):
##        '-no docstring-'
##        #return HasChildShapeRange
##
##    @property
##    def TextRange2(self):
##        '-no docstring-'
##        #return TextRange2
##

class Gridlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6A-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Gridlines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Gridlines implementation
##class Gridlines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

Comment._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Author',
              ( ['out', 'retval'], POINTER(BSTR), 'Author' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'AuthorInitials',
              ( ['out', 'retval'], POINTER(BSTR), 'AuthorInitials' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'DateTime',
              ( ['out', 'retval'], POINTER(c_double), 'DateTime' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AuthorIndex',
              ( ['out', 'retval'], POINTER(c_int), 'AuthorIndex' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(2010)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'ProviderID',
              ( ['out', 'retval'], POINTER(BSTR), 'ProviderID' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'UserID',
              ( ['out', 'retval'], POINTER(BSTR), 'UserID' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'TimeZoneBias',
              ( ['out', 'retval'], POINTER(c_int), 'TimeZoneBias' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Replies',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'Comments' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Collapsed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Comments' )),
]
################################################################
## code template for Comment implementation
##class Comment_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Author(self):
##        '-no docstring-'
##        #return Author
##
##    @property
##    def AuthorInitials(self):
##        '-no docstring-'
##        #return AuthorInitials
##
##    @property
##    def Text(self):
##        '-no docstring-'
##        #return Text
##
##    @property
##    def DateTime(self):
##        '-no docstring-'
##        #return DateTime
##
##    @property
##    def AuthorIndex(self):
##        '-no docstring-'
##        #return AuthorIndex
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return Left
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return Top
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProviderID(self):
##        '-no docstring-'
##        #return ProviderID
##
##    @property
##    def UserID(self):
##        '-no docstring-'
##        #return UserID
##
##    @property
##    def TimeZoneBias(self):
##        '-no docstring-'
##        #return TimeZoneBias
##
##    @property
##    def Replies(self):
##        '-no docstring-'
##        #return Comments
##
##    @property
##    def Collapsed(self):
##        '-no docstring-'
##        #return Comments
##

class TextStyleLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9149349B-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TextStyleLevels._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(TextStyleLevel)), 'Item' )),
]
################################################################
## code template for TextStyleLevels implementation
##class TextStyleLevels_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Level):
##        '-no docstring-'
##        #return Item
##

class DisplayUnitLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A64-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DisplayUnitLabel._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'RHS' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2012), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(2013), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppinterior' )),
    COMMETHOD([dispid(2014)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppval' )),
    COMMETHOD([dispid(2018)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'Height' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'Width' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2028)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2029)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for DisplayUnitLabel implementation
##class DisplayUnitLabel_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppinterior
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppval
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

ShapeRange._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'Apply'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13)], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(14)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(15)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(18)], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(19)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(20)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'fScale', 0 )),
    COMMETHOD([dispid(22)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(23)], HRESULT, 'Ungroup',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Ungroup' )),
    COMMETHOD([dispid(24)], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'Adjustments' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'AutoShapeType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'AutoShapeType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BlackWhiteMode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBlackWhiteMode), 'BlackWhiteMode' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBlackWhiteMode, 'BlackWhiteMode' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['out', 'retval'], POINTER(POINTER(CalloutFormat)), 'Callout' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['out', 'retval'], POINTER(c_int), 'ConnectionSiteCount' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Connector',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Connector' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ConnectorFormat',
              ( ['out', 'retval'], POINTER(POINTER(ConnectorFormat)), 'ConnectorFormat' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'Fill' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['out', 'retval'], POINTER(POINTER(GroupShapes)), 'GroupItems' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HorizontalFlip' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'Line' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LockAspectRatio' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LockAspectRatio' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(ShapeNodes)), 'Nodes' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['out', 'retval'], POINTER(c_float), 'Rotation' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'Rotation' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'Picture' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'Shadow' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['out', 'retval'], POINTER(POINTER(TextEffectFormat)), 'TextEffect' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'TextFrame' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeType), 'Type' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'VerticalFlip' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['out', 'retval'], POINTER(VARIANT), 'Vertices' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['out', 'retval'], POINTER(c_int), 'ZOrderPosition' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'OLEFormat',
              ( ['out', 'retval'], POINTER(POINTER(OLEFormat)), 'OLEFormat' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'LinkFormat',
              ( ['out', 'retval'], POINTER(POINTER(LinkFormat)), 'LinkFormat' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'PlaceholderFormat',
              ( ['out', 'retval'], POINTER(POINTER(PlaceholderFormat)), 'PlaceholderFormat' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'AnimationSettings',
              ( ['out', 'retval'], POINTER(POINTER(AnimationSettings)), 'AnimationSettings' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'ActionSettings',
              ( ['out', 'retval'], POINTER(POINTER(ActionSettings)), 'ActionSettings' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Tags',
              ( ['out', 'retval'], POINTER(POINTER(Tags)), 'Tags' )),
    COMMETHOD([dispid(2009)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2010)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2011)], HRESULT, 'Select',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Replace', -1 )),
    COMMETHOD([dispid(2012)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Duplicate' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'MediaType',
              ( ['out', 'retval'], POINTER(PpMediaType), 'MediaType' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'HasTextFrame',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTextFrame' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'SoundFormat',
              ( ['out', 'retval'], POINTER(POINTER(SoundFormat)), 'SoundFormat' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(8), 'restricted'], HRESULT, '_Index',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT), '_Index' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(2016)], HRESULT, 'Group',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Group' )),
    COMMETHOD([dispid(2017)], HRESULT, 'Regroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Regroup' )),
    COMMETHOD([dispid(2018)], HRESULT, 'Align',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAlignCmd, 'AlignCmd' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeTo' )),
    COMMETHOD([dispid(2019)], HRESULT, 'Distribute',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDistributeCmd, 'DistributeCmd' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeTo' )),
    COMMETHOD([dispid(2020), 'restricted'], HRESULT, 'GetPolygonalRepresentation',
              ( ['in'], c_ulong, 'maxPointsInBuffer' ),
              ( ['in'], POINTER(c_float), 'pPoints' ),
              ( ['out'], POINTER(c_ulong), 'numPointsInPolygon' ),
              ( ['out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IsOpen' )),
    COMMETHOD([dispid(130), 'hidden', 'propget'], HRESULT, 'Script',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Script)), 'Script' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'HasTable',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTable' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Table',
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'Table' )),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Export',
              ( ['in'], BSTR, 'PathName' ),
              ( ['in'], PpShapeFormat, 'Filter' ),
              ( ['in', 'optional'], c_int, 'ScaleWidth', 0 ),
              ( ['in', 'optional'], c_int, 'ScaleHeight', 0 ),
              ( ['in', 'optional'], PpExportMode, 'ExportMode', 1 )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(Diagram)), 'Diagram' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasDiagram' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'DiagramNode' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Child' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Parent' )),
    COMMETHOD([dispid(138), 'hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['out', 'retval'], POINTER(POINTER(CanvasShapes)), 'CanvasShapes' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Id',
              ( ['out', 'retval'], POINTER(c_int), 'pid' )),
    COMMETHOD([dispid(140), 'hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141), 'hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142), 'hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143), 'hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame2)), 'Frame' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasChart' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex), 'ShapeStyle' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex, 'ShapeStyle' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SoftEdgeFormat)), 'SoftEdge' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.GlowFormat)), 'Glow' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ReflectionFormat)), 'Reflection' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'Chart',
              ( ['out', 'retval'], POINTER(POINTER(Chart)), 'Chart' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'HasSmartArt',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasSmartArt' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'SmartArt',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArt)), 'SmartArt' )),
    COMMETHOD([dispid(157)], HRESULT, 'ConvertTextToSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayout), 'Layout' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(158), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'MediaFormat',
              ( ['out', 'retval'], POINTER(POINTER(MediaFormat)), 'MediaFormat' )),
    COMMETHOD([dispid(2028)], HRESULT, 'PickupAnimation'),
    COMMETHOD([dispid(2029)], HRESULT, 'ApplyAnimation'),
    COMMETHOD([dispid(2030)], HRESULT, 'UpgradeMedia'),
    COMMETHOD([dispid(159)], HRESULT, 'MergeShapes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoMergeCmd, 'MergeCmd' ),
              ( ['in', 'optional'], POINTER(Shape), 'PrimaryShape', 0 )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'IsNarration',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IsNarration' )),
    COMMETHOD([dispid(2031), 'propput'], HRESULT, 'IsNarration',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'IsNarration' )),
    COMMETHOD([dispid(160), 'propget'], HRESULT, 'InkXML',
              ( ['out', 'retval'], POINTER(BSTR), 'InkXML' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'HasInkXML',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasInkXML' )),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'HasSectionZoom',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasSectionZoom' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'GraphicStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex), 'GraphicStyle' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'GraphicStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex, 'GraphicStyle' )),
    COMMETHOD([dispid(164), 'propget'], HRESULT, 'Model3D',
              ( ['out', 'retval'], POINTER(POINTER(Model3DFormat)), 'Model3D' )),
    COMMETHOD([dispid(165), 'propget'], HRESULT, 'Decorative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'fDecorative' )),
    COMMETHOD([dispid(165), 'propput'], HRESULT, 'Decorative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'fDecorative' )),
]
################################################################
## code template for ShapeRange implementation
##class ShapeRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, fScale):
##        '-no docstring-'
##        #return 
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return Ungroup
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return Adjustments
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoShapeType
##    def _set(self, AutoShapeType):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BlackWhiteMode
##    def _set(self, BlackWhiteMode):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return Callout
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return ConnectionSiteCount
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return Connector
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return ConnectorFormat
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return Fill
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return GroupItems
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return HorizontalFlip
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    def _get(self):
##        '-no docstring-'
##        #return LockAspectRatio
##    def _set(self, LockAspectRatio):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return Nodes
##
##    def _get(self):
##        '-no docstring-'
##        #return Rotation
##    def _set(self, Rotation):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return Picture
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return Shadow
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return TextEffect
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return TextFrame
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return VerticalFlip
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return Vertices
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return ZOrderPosition
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return OLEFormat
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return LinkFormat
##
##    @property
##    def PlaceholderFormat(self):
##        '-no docstring-'
##        #return PlaceholderFormat
##
##    @property
##    def AnimationSettings(self):
##        '-no docstring-'
##        #return AnimationSettings
##
##    @property
##    def ActionSettings(self):
##        '-no docstring-'
##        #return ActionSettings
##
##    @property
##    def Tags(self):
##        '-no docstring-'
##        #return Tags
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    @property
##    def MediaType(self):
##        '-no docstring-'
##        #return MediaType
##
##    @property
##    def HasTextFrame(self):
##        '-no docstring-'
##        #return HasTextFrame
##
##    @property
##    def SoundFormat(self):
##        '-no docstring-'
##        #return SoundFormat
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def _Index(self, Index):
##        '-no docstring-'
##        #return _Index
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Group(self):
##        '-no docstring-'
##        #return Group
##
##    def Regroup(self):
##        '-no docstring-'
##        #return Regroup
##
##    def Align(self, AlignCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def Distribute(self, DistributeCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def GetPolygonalRepresentation(self, maxPointsInBuffer, pPoints):
##        '-no docstring-'
##        #return numPointsInPolygon, IsOpen
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return Script
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasTable(self):
##        '-no docstring-'
##        #return HasTable
##
##    @property
##    def Table(self):
##        '-no docstring-'
##        #return Table
##
##    def Export(self, PathName, Filter, ScaleWidth, ScaleHeight, ExportMode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return pHasDiagram
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return DiagramNode
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return Child
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return CanvasShapes
##
##    @property
##    def Id(self):
##        '-no docstring-'
##        #return pid
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return Frame
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return pHasChart
##
##    def _get(self):
##        '-no docstring-'
##        #return ShapeStyle
##    def _set(self, ShapeStyle):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return SoftEdge
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return Glow
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return Reflection
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return Chart
##
##    @property
##    def HasSmartArt(self):
##        '-no docstring-'
##        #return HasSmartArt
##
##    @property
##    def SmartArt(self):
##        '-no docstring-'
##        #return SmartArt
##
##    def ConvertTextToSmartArt(self, Layout):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MediaFormat(self):
##        '-no docstring-'
##        #return MediaFormat
##
##    def PickupAnimation(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyAnimation(self):
##        '-no docstring-'
##        #return 
##
##    def UpgradeMedia(self):
##        '-no docstring-'
##        #return 
##
##    def MergeShapes(self, MergeCmd, PrimaryShape):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return IsNarration
##    def _set(self, IsNarration):
##        '-no docstring-'
##    IsNarration = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InkXML(self):
##        '-no docstring-'
##        #return InkXML
##
##    @property
##    def HasInkXML(self):
##        '-no docstring-'
##        #return HasInkXML
##
##    @property
##    def HasSectionZoom(self):
##        '-no docstring-'
##        #return HasSectionZoom
##
##    def _get(self):
##        '-no docstring-'
##        #return GraphicStyle
##    def _set(self, GraphicStyle):
##        '-no docstring-'
##    GraphicStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Model3D(self):
##        '-no docstring-'
##        #return Model3D
##
##    def _get(self):
##        '-no docstring-'
##        #return fDecorative
##    def _set(self, fDecorative):
##        '-no docstring-'
##    Decorative = property(_get, _set, doc = _set.__doc__)
##

View._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(PpViewType), 'Type' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Zoom',
              ( ['out', 'retval'], POINTER(c_int), 'Zoom' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Zoom',
              ( ['in'], c_int, 'Zoom' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Paste'),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Slide',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Slide' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Slide',
              ( ['in'], POINTER(IDispatch), 'Slide' )),
    COMMETHOD([dispid(2007)], HRESULT, 'GotoSlide',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'DisplaySlideMiniature',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplaySlideMiniature' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'DisplaySlideMiniature',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplaySlideMiniature' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ZoomToFit',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ZoomToFit' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'ZoomToFit',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ZoomToFit' )),
    COMMETHOD([dispid(2010)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], PpPasteDataType, 'DataType', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayAsIcon', 0 ),
              ( ['in', 'optional'], BSTR, 'IconFileName', '' ),
              ( ['in', 'optional'], c_int, 'IconIndex', 0 ),
              ( ['in', 'optional'], BSTR, 'IconLabel', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Link', 0 )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'PrintOptions',
              ( ['out', 'retval'], POINTER(POINTER(PrintOptions)), 'PrintOptions' )),
    COMMETHOD([dispid(2012)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], c_int, 'From', -1 ),
              ( ['in', 'optional'], c_int, 'To', -1 ),
              ( ['in', 'optional'], BSTR, 'PrintToFile', '' ),
              ( ['in', 'optional'], c_int, 'Copies', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Collate', -99 )),
    COMMETHOD([dispid(2013)], HRESULT, 'Player',
              ( ['in'], VARIANT, 'ShapeId' ),
              ( ['out', 'retval'], POINTER(POINTER(Player)), 'Player' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'MediaControlsVisible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'MediaControlsVisible' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'MediaControlsLeft',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsLeft' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'MediaControlsTop',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsTop' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'MediaControlsWidth',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsWidth' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'MediaControlsHeight',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsHeight' )),
]
################################################################
## code template for View implementation
##class View_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return Zoom
##    def _set(self, Zoom):
##        '-no docstring-'
##    Zoom = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Slide
##    def _set(self, Slide):
##        '-no docstring-'
##    Slide = property(_get, _set, doc = _set.__doc__)
##
##    def GotoSlide(self, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplaySlideMiniature
##    def _set(self, DisplaySlideMiniature):
##        '-no docstring-'
##    DisplaySlideMiniature = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ZoomToFit
##    def _set(self, ZoomToFit):
##        '-no docstring-'
##    ZoomToFit = property(_get, _set, doc = _set.__doc__)
##
##    def PasteSpecial(self, DataType, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Link):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PrintOptions(self):
##        '-no docstring-'
##        #return PrintOptions
##
##    def PrintOut(self, From, To, PrintToFile, Copies, Collate):
##        '-no docstring-'
##        #return 
##
##    def Player(self, ShapeId):
##        '-no docstring-'
##        #return Player
##
##    @property
##    def MediaControlsVisible(self):
##        '-no docstring-'
##        #return MediaControlsVisible
##
##    @property
##    def MediaControlsLeft(self):
##        '-no docstring-'
##        #return MediaControlsLeft
##
##    @property
##    def MediaControlsTop(self):
##        '-no docstring-'
##        #return MediaControlsTop
##
##    @property
##    def MediaControlsWidth(self):
##        '-no docstring-'
##        #return MediaControlsWidth
##
##    @property
##    def MediaControlsHeight(self):
##        '-no docstring-'
##        #return MediaControlsHeight
##

class LegendEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6F-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
LegendEntries._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(LegendEntry)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(LegendEntry)), 'RHS' )),
]
################################################################
## code template for LegendEntries implementation
##class LegendEntries_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

SlideRange._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'Shapes' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HeadersFooters',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'HeadersFooters' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'SlideShowTransition',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowTransition)), 'SlideShowTransition' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'ColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(ColorScheme)), 'ColorScheme' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'ColorScheme',
              ( ['in'], POINTER(ColorScheme), 'ColorScheme' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Background' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SlideID',
              ( ['out', 'retval'], POINTER(c_int), 'SlideID' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'PrintSteps',
              ( ['out', 'retval'], POINTER(c_int), 'PrintSteps' )),
    COMMETHOD([dispid(2011)], HRESULT, 'Select'),
    COMMETHOD([dispid(2012)], HRESULT, 'Cut'),
    COMMETHOD([dispid(2013)], HRESULT, 'Copy'),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Layout',
              ( ['out', 'retval'], POINTER(PpSlideLayout), 'Layout' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'Layout',
              ( ['in'], PpSlideLayout, 'Layout' )),
    COMMETHOD([dispid(2015)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'Duplicate' )),
    COMMETHOD([dispid(2016)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Tags',
              ( ['out', 'retval'], POINTER(POINTER(Tags)), 'Tags' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'SlideIndex',
              ( ['out', 'retval'], POINTER(c_int), 'SlideIndex' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'SlideNumber',
              ( ['out', 'retval'], POINTER(c_int), 'SlideNumber' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'DisplayMasterShapes',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'DisplayMasterShapes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayMasterShapes' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'FollowMasterBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FollowMasterBackground' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'FollowMasterBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FollowMasterBackground' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'NotesPage',
              ( ['out', 'retval'], POINTER(POINTER(SlideRange)), 'NotesPage' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'Master',
              ( ['out', 'retval'], POINTER(POINTER(_Master)), 'Master' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'Hyperlinks' )),
    COMMETHOD([dispid(2025)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'FilterName' ),
              ( ['in', 'optional'], c_int, 'ScaleWidth', 0 ),
              ( ['in', 'optional'], c_int, 'ScaleHeight', 0 )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'Item' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10), 'restricted'], HRESULT, '_Index',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT), '_Index' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(2026), 'hidden', 'propget'], HRESULT, 'Scripts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Scripts)), 'Scripts' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'Comments',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'Comments' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'Design',
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Design' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'Design',
              ( ['in'], POINTER(Design), 'Design' )),
    COMMETHOD([dispid(2030)], HRESULT, 'MoveTo',
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'TimeLine',
              ( ['out', 'retval'], POINTER(POINTER(TimeLine)), 'TimeLine' )),
    COMMETHOD([dispid(2032)], HRESULT, 'ApplyTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2033), 'hidden', 'propget'], HRESULT, 'SectionNumber',
              ( ['out', 'retval'], POINTER(c_int), 'SectionNumber' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'CustomLayout',
              ( ['out', 'retval'], POINTER(POINTER(CustomLayout)), 'CustomLayout' )),
    COMMETHOD([dispid(2034), 'propput'], HRESULT, 'CustomLayout',
              ( ['in'], POINTER(CustomLayout), 'CustomLayout' )),
    COMMETHOD([dispid(2035)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'themeName' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'ThemeColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ThemeColorScheme)), 'ThemeColorScheme' )),
    COMMETHOD([dispid(2037)], HRESULT, 'ApplyThemeColorScheme',
              ( ['in'], BSTR, 'themeColorSchemeName' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(2038), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(2039), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(2040)], HRESULT, 'PublishSlides',
              ( ['in'], BSTR, 'SlideLibraryUrl' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Overwrite', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseSlideOrder', False )),
    COMMETHOD([dispid(2041)], HRESULT, 'MoveToSectionStart',
              ( ['in'], c_int, 'toSection' )),
    COMMETHOD([dispid(2042), 'propget'], HRESULT, 'sectionIndex',
              ( ['out', 'retval'], POINTER(c_int), 'sectionIndex' )),
    COMMETHOD([dispid(2043), 'propget'], HRESULT, 'HasNotesPage',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasNotesPage' )),
    COMMETHOD([dispid(2044)], HRESULT, 'ApplyTemplate2',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'VariantGUID' )),
]
################################################################
## code template for SlideRange implementation
##class SlideRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return Shapes
##
##    @property
##    def HeadersFooters(self):
##        '-no docstring-'
##        #return HeadersFooters
##
##    @property
##    def SlideShowTransition(self):
##        '-no docstring-'
##        #return SlideShowTransition
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorScheme
##    def _set(self, ColorScheme):
##        '-no docstring-'
##    ColorScheme = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlideID(self):
##        '-no docstring-'
##        #return SlideID
##
##    @property
##    def PrintSteps(self):
##        '-no docstring-'
##        #return PrintSteps
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Layout
##    def _set(self, Layout):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return Duplicate
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tags(self):
##        '-no docstring-'
##        #return Tags
##
##    @property
##    def SlideIndex(self):
##        '-no docstring-'
##        #return SlideIndex
##
##    @property
##    def SlideNumber(self):
##        '-no docstring-'
##        #return SlideNumber
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayMasterShapes
##    def _set(self, DisplayMasterShapes):
##        '-no docstring-'
##    DisplayMasterShapes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FollowMasterBackground
##    def _set(self, FollowMasterBackground):
##        '-no docstring-'
##    FollowMasterBackground = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NotesPage(self):
##        '-no docstring-'
##        #return NotesPage
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return Master
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return Hyperlinks
##
##    def Export(self, FileName, FilterName, ScaleWidth, ScaleHeight):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def _Index(self, Index):
##        '-no docstring-'
##        #return _Index
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return Scripts
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return Comments
##
##    def _get(self):
##        '-no docstring-'
##        #return Design
##    def _set(self, Design):
##        '-no docstring-'
##    Design = property(_get, _set, doc = _set.__doc__)
##
##    def MoveTo(self, toPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TimeLine(self):
##        '-no docstring-'
##        #return TimeLine
##
##    def ApplyTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SectionNumber(self):
##        '-no docstring-'
##        #return SectionNumber
##
##    def _get(self):
##        '-no docstring-'
##        #return CustomLayout
##    def _set(self, CustomLayout):
##        '-no docstring-'
##    CustomLayout = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyTheme(self, themeName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ThemeColorScheme(self):
##        '-no docstring-'
##        #return ThemeColorScheme
##
##    def ApplyThemeColorScheme(self, themeColorSchemeName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    def PublishSlides(self, SlideLibraryUrl, Overwrite, UseSlideOrder):
##        '-no docstring-'
##        #return 
##
##    def MoveToSectionStart(self, toSection):
##        '-no docstring-'
##        #return 
##
##    @property
##    def sectionIndex(self):
##        '-no docstring-'
##        #return sectionIndex
##
##    @property
##    def HasNotesPage(self):
##        '-no docstring-'
##        #return HasNotesPage
##
##    def ApplyTemplate2(self, FileName, VariantGUID):
##        '-no docstring-'
##        #return 
##

class ResampleMediaTasks(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E554-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ResampleMediaTask(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E553-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ResampleMediaTasks._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ResampleMediaTask)), 'Item' )),
    COMMETHOD([dispid(2001)], HRESULT, 'Pause'),
    COMMETHOD([dispid(2002)], HRESULT, 'Cancel'),
    COMMETHOD([dispid(2003)], HRESULT, 'Resume'),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'PercentComplete',
              ( ['out', 'retval'], POINTER(c_int), 'PercentComplete' )),
]
################################################################
## code template for ResampleMediaTasks implementation
##class ResampleMediaTasks_Impl(object):
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def Cancel(self):
##        '-no docstring-'
##        #return 
##
##    def Resume(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PercentComplete(self):
##        '-no docstring-'
##        #return PercentComplete
##

TextStyleLevel._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'ParagraphFormat' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'Font' )),
]
################################################################
## code template for TextStyleLevel implementation
##class TextStyleLevel_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def ParagraphFormat(self):
##        '-no docstring-'
##        #return ParagraphFormat
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return Font
##

class Presentations(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493462-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_Global._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'ActivePresentation',
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'ActivePresentation' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'ActiveWindow',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindow)), 'ActiveWindow' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'AddIns',
              ( ['out', 'retval'], POINTER(POINTER(AddIns)), 'AddIns' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2005), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Assistant)), 'Assistant' )),
    COMMETHOD([dispid(2006), 'hidden', 'propget'], HRESULT, 'Dialogs',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'Dialogs' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Presentations',
              ( ['out', 'retval'], POINTER(POINTER(Presentations)), 'Presentations' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'SlideShowWindows',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowWindows)), 'SlideShowWindows' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindows)), 'Windows' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'CommandBars' )),
    COMMETHOD([dispid(2011), 'hidden', 'propget'], HRESULT, 'AnswerWizard',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.AnswerWizard)), 'AnswerWizard' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'FileConverters',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'FileConverters' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'ProtectedViewWindows',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindows)), 'ProtectedViewWindows' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'ActiveProtectedViewWindow',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'ActiveProtectedViewWindow' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'IsSandboxed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsSandboxed' )),
]
################################################################
## code template for _Global implementation
##class _Global_Impl(object):
##    @property
##    def ActivePresentation(self):
##        '-no docstring-'
##        #return ActivePresentation
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return ActiveWindow
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return AddIns
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return Assistant
##
##    @property
##    def Dialogs(self):
##        '-no docstring-'
##        #return Dialogs
##
##    @property
##    def Presentations(self):
##        '-no docstring-'
##        #return Presentations
##
##    @property
##    def SlideShowWindows(self):
##        '-no docstring-'
##        #return SlideShowWindows
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return Windows
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return CommandBars
##
##    @property
##    def AnswerWizard(self):
##        '-no docstring-'
##        #return AnswerWizard
##
##    @property
##    def FileConverters(self):
##        '-no docstring-'
##        #return FileConverters
##
##    @property
##    def ProtectedViewWindows(self):
##        '-no docstring-'
##        #return ProtectedViewWindows
##
##    @property
##    def ActiveProtectedViewWindow(self):
##        '-no docstring-'
##        #return ActiveProtectedViewWindow
##
##    @property
##    def IsSandboxed(self):
##        '-no docstring-'
##        #return IsSandboxed
##

TabStops._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'Item' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'DefaultSpacing',
              ( ['out', 'retval'], POINTER(c_float), 'DefaultSpacing' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'DefaultSpacing',
              ( ['in'], c_float, 'DefaultSpacing' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Add',
              ( ['in'], PpTabStopType, 'Type' ),
              ( ['in'], c_float, 'Position' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'Add' )),
]
################################################################
## code template for TabStops implementation
##class TabStops_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def _get(self):
##        '-no docstring-'
##        #return DefaultSpacing
##    def _set(self, DefaultSpacing):
##        '-no docstring-'
##    DefaultSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def Add(self, Type, Position):
##        '-no docstring-'
##        #return Add
##

RulerLevels._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(RulerLevel)), 'Item' )),
]
################################################################
## code template for RulerLevels implementation
##class RulerLevels_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

ResampleMediaTask._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'profile',
              ( ['out', 'retval'], POINTER(PpResampleMediaProfile), 'profile' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'IsLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsLinked' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'IsEmbedded',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsEmbedded' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'AudioSamplingRate',
              ( ['out', 'retval'], POINTER(c_int), 'AudioSamplingRate' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'VideoFrameRate',
              ( ['out', 'retval'], POINTER(c_int), 'VideoFrameRate' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'SampleHeight',
              ( ['out', 'retval'], POINTER(c_int), 'SampleHeight' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'SampleWidth',
              ( ['out', 'retval'], POINTER(c_int), 'SampleWidth' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'ContainerType',
              ( ['out', 'retval'], POINTER(BSTR), 'ContainerType' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'VideoCompressionType',
              ( ['out', 'retval'], POINTER(BSTR), 'VideoCompressionType' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'AudioCompressionType',
              ( ['out', 'retval'], POINTER(BSTR), 'AudioCompressionType' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
]
################################################################
## code template for ResampleMediaTask implementation
##class ResampleMediaTask_Impl(object):
##    @property
##    def profile(self):
##        '-no docstring-'
##        #return profile
##
##    @property
##    def IsLinked(self):
##        '-no docstring-'
##        #return IsLinked
##
##    @property
##    def IsEmbedded(self):
##        '-no docstring-'
##        #return IsEmbedded
##
##    @property
##    def AudioSamplingRate(self):
##        '-no docstring-'
##        #return AudioSamplingRate
##
##    @property
##    def VideoFrameRate(self):
##        '-no docstring-'
##        #return VideoFrameRate
##
##    @property
##    def SampleHeight(self):
##        '-no docstring-'
##        #return SampleHeight
##
##    @property
##    def SampleWidth(self):
##        '-no docstring-'
##        #return SampleWidth
##
##    @property
##    def ContainerType(self):
##        '-no docstring-'
##        #return ContainerType
##
##    @property
##    def VideoCompressionType(self):
##        '-no docstring-'
##        #return VideoCompressionType
##
##    @property
##    def AudioCompressionType(self):
##        '-no docstring-'
##        #return AudioCompressionType
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Shape
##

OLEFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ObjectVerbs',
              ( ['out', 'retval'], POINTER(POINTER(ObjectVerbs)), 'ObjectVerbs' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Object',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Object' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'ProgID',
              ( ['out', 'retval'], POINTER(BSTR), 'ProgID' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'FollowColors',
              ( ['out', 'retval'], POINTER(PpFollowColors), 'FollowColors' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'FollowColors',
              ( ['in'], PpFollowColors, 'FollowColors' )),
    COMMETHOD([dispid(2007)], HRESULT, 'DoVerb',
              ( ['in', 'optional'], c_int, 'Index', 0 )),
    COMMETHOD([dispid(2008)], HRESULT, 'Activate'),
]
################################################################
## code template for OLEFormat implementation
##class OLEFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def ObjectVerbs(self):
##        '-no docstring-'
##        #return ObjectVerbs
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return Object
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return ProgID
##
##    def _get(self):
##        '-no docstring-'
##        #return FollowColors
##    def _set(self, FollowColors):
##        '-no docstring-'
##    FollowColors = property(_get, _set, doc = _set.__doc__)
##
##    def DoVerb(self, Index):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##

Shapes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Callout' )),
    COMMETHOD([dispid(11)], HRESULT, 'AddConnector',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Connector' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Curve' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Label' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Line' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Picture' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Polyline' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontBold' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'TextEffect' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Textbox' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['out', 'retval'], POINTER(POINTER(FreeformBuilder)), 'FreeformBuilder' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(2003)], HRESULT, 'Range',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Range' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HasTitle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasTitle' )),
    COMMETHOD([dispid(2005)], HRESULT, 'AddTitle',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Title' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Title' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Placeholders',
              ( ['out', 'retval'], POINTER(POINTER(Placeholders)), 'Placeholders' )),
    COMMETHOD([dispid(2008)], HRESULT, 'AddOLEObject',
              ( ['in', 'optional'], c_float, 'Left', 0.0 ),
              ( ['in', 'optional'], c_float, 'Top', 0.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['in', 'optional'], BSTR, 'ClassName', '' ),
              ( ['in', 'optional'], BSTR, 'FileName', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayAsIcon', 0 ),
              ( ['in', 'optional'], BSTR, 'IconFileName', '' ),
              ( ['in', 'optional'], c_int, 'IconIndex', 0 ),
              ( ['in', 'optional'], BSTR, 'IconLabel', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Link', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'OLEObject' )),
    COMMETHOD([dispid(2009), 'hidden'], HRESULT, 'AddComment',
              ( ['in', 'optional'], c_float, 'Left', 1.25 ),
              ( ['in', 'optional'], c_float, 'Top', 1.25 ),
              ( ['in', 'optional'], c_float, 'Width', 145.25 ),
              ( ['in', 'optional'], c_float, 'Height', 145.25 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Comment' )),
    COMMETHOD([dispid(2010)], HRESULT, 'AddPlaceholder',
              ( ['in'], PpPlaceholderType, 'Type' ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Placeholder' )),
    COMMETHOD([dispid(2011), 'hidden'], HRESULT, 'AddMediaObject',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], c_float, 'Left', 0.0 ),
              ( ['in', 'optional'], c_float, 'Top', 0.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'MediaObject' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Paste' )),
    COMMETHOD([dispid(2013)], HRESULT, 'AddTable',
              ( ['in'], c_int, 'NumRows' ),
              ( ['in'], c_int, 'NumColumns' ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Table' )),
    COMMETHOD([dispid(2014)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], PpPasteDataType, 'DataType', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayAsIcon', 0 ),
              ( ['in', 'optional'], BSTR, 'IconFileName', '' ),
              ( ['in', 'optional'], c_int, 'IconIndex', 0 ),
              ( ['in', 'optional'], BSTR, 'IconLabel', '' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Link', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'PasteSpecial' )),
    COMMETHOD([dispid(23), 'hidden'], HRESULT, 'AddDiagram',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Diagram' )),
    COMMETHOD([dispid(25), 'hidden'], HRESULT, 'AddCanvas',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(26), 'hidden'], HRESULT, 'AddChart',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Chart' )),
    COMMETHOD([dispid(2015)], HRESULT, 'AddMediaObject2',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LinkToFile', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveWithDocument', -1 ),
              ( ['in', 'optional'], c_float, 'Left', 0.0 ),
              ( ['in', 'optional'], c_float, 'Top', 0.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'MediaObject2' )),
    COMMETHOD([dispid(2016)], HRESULT, 'AddMediaObjectFromEmbedTag',
              ( ['in'], BSTR, 'EmbedTag' ),
              ( ['in', 'optional'], c_float, 'Left', 0.0 ),
              ( ['in', 'optional'], c_float, 'Top', 0.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'MediaObjectFromEmbedTag' )),
    COMMETHOD([dispid(28)], HRESULT, 'AddSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayout), 'Layout' ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'SmartArt' )),
    COMMETHOD([dispid(29)], HRESULT, 'AddChart2',
              ( ['in', 'optional'], c_int, 'Style', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], c_float, 'Left', -1.0 ),
              ( ['in', 'optional'], c_float, 'Top', -1.0 ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'NewLayout', False ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Chart' )),
    COMMETHOD([dispid(30)], HRESULT, 'AddPicture2',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPictureCompress, 'compress', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Picture' )),
    COMMETHOD([dispid(31)], HRESULT, 'AddInkShapeFromXML',
              ( ['in'], BSTR, 'InkXML' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(32)], HRESULT, 'Add3DModel',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], c_float, 'Width', -1.0 ),
              ( ['in', 'optional'], c_float, 'Height', -1.0 ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Model' )),
]
################################################################
## code template for Shapes implementation
##class Shapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Callout
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Connector
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Curve
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Label
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return Line
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Picture
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return Polyline
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return TextEffect
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Textbox
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return FreeformBuilder
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def HasTitle(self):
##        '-no docstring-'
##        #return HasTitle
##
##    def AddTitle(self):
##        '-no docstring-'
##        #return Title
##
##    @property
##    def Title(self):
##        '-no docstring-'
##        #return Title
##
##    @property
##    def Placeholders(self):
##        '-no docstring-'
##        #return Placeholders
##
##    def AddOLEObject(self, Left, Top, Width, Height, ClassName, FileName, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Link):
##        '-no docstring-'
##        #return OLEObject
##
##    def AddComment(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Comment
##
##    def AddPlaceholder(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Placeholder
##
##    def AddMediaObject(self, FileName, Left, Top, Width, Height):
##        '-no docstring-'
##        #return MediaObject
##
##    def Paste(self):
##        '-no docstring-'
##        #return Paste
##
##    def AddTable(self, NumRows, NumColumns, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Table
##
##    def PasteSpecial(self, DataType, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Link):
##        '-no docstring-'
##        #return PasteSpecial
##
##    def AddDiagram(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Diagram
##
##    def AddCanvas(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def AddChart(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Chart
##
##    def AddMediaObject2(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return MediaObject2
##
##    def AddMediaObjectFromEmbedTag(self, EmbedTag, Left, Top, Width, Height):
##        '-no docstring-'
##        #return MediaObjectFromEmbedTag
##
##    def AddSmartArt(self, Layout, Left, Top, Width, Height):
##        '-no docstring-'
##        #return SmartArt
##
##    def AddChart2(self, Style, Type, Left, Top, Width, Height, NewLayout):
##        '-no docstring-'
##        #return Chart
##
##    def AddPicture2(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height, compress):
##        '-no docstring-'
##        #return Picture
##
##    def AddInkShapeFromXML(self, InkXML, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Shape
##
##    def Add3DModel(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return Model
##

HeadersFooters._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'DateAndTime',
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'DateAndTime' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SlideNumber',
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'SlideNumber' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Header',
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'Header' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Footer',
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'Footer' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'DisplayOnTitleSlide',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayOnTitleSlide' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'DisplayOnTitleSlide',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayOnTitleSlide' )),
    COMMETHOD([dispid(2008)], HRESULT, 'Clear'),
]
################################################################
## code template for HeadersFooters implementation
##class HeadersFooters_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def DateAndTime(self):
##        '-no docstring-'
##        #return DateAndTime
##
##    @property
##    def SlideNumber(self):
##        '-no docstring-'
##        #return SlideNumber
##
##    @property
##    def Header(self):
##        '-no docstring-'
##        #return Header
##
##    @property
##    def Footer(self):
##        '-no docstring-'
##        #return Footer
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayOnTitleSlide
##    def _set(self, DisplayOnTitleSlide):
##        '-no docstring-'
##    DisplayOnTitleSlide = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##

Presentations._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WithWindow', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Add' )),
    COMMETHOD([dispid(2004), 'hidden'], HRESULT, 'OpenOld',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ReadOnly', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Untitled', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WithWindow', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'OpenOld' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Open',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ReadOnly', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Untitled', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WithWindow', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Open' )),
    COMMETHOD([dispid(2006)], HRESULT, 'CheckOut',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2007)], HRESULT, 'CanCheckOut',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'CanCheckOut' )),
    COMMETHOD([dispid(2008)], HRESULT, 'Open2007',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ReadOnly', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Untitled', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WithWindow', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'OpenAndRepair', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Open2007' )),
]
################################################################
## code template for Presentations implementation
##class Presentations_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, WithWindow):
##        '-no docstring-'
##        #return Add
##
##    def OpenOld(self, FileName, ReadOnly, Untitled, WithWindow):
##        '-no docstring-'
##        #return OpenOld
##
##    def Open(self, FileName, ReadOnly, Untitled, WithWindow):
##        '-no docstring-'
##        #return Open
##
##    def CheckOut(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def CanCheckOut(self, FileName):
##        '-no docstring-'
##        #return CanCheckOut
##
##    def Open2007(self, FileName, ReadOnly, Untitled, WithWindow, OpenAndRepair):
##        '-no docstring-'
##        #return Open2007
##

class Point(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A73-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlPieSliceLocation'
xlHorizontalCoordinate = 1
xlVerticalCoordinate = 2
XlPieSliceLocation = c_int # enum

# values for enumeration 'XlPieSliceIndex'
xlOuterCounterClockwisePoint = 1
xlOuterCenterPoint = 2
xlOuterClockwisePoint = 3
xlMidClockwiseRadiusPoint = 4
xlCenterPoint = 5
xlMidCounterClockwiseRadiusPoint = 6
xlInnerClockwisePoint = 7
xlInnerCenterPoint = 8
xlInnerCounterClockwisePoint = 9
XlPieSliceIndex = c_int # enum
Point._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'DataLabel',
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(182), 'propget'], HRESULT, 'Explosion',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(182), 'propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(77), 'propget'], HRESULT, 'HasDataLabel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(77), 'propput'], HRESULT, 'HasDataLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1659), 'propget'], HRESULT, 'ApplyPictToSides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1659), 'propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1660), 'propget'], HRESULT, 'ApplyPictToFront',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1660), 'propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1661), 'propget'], HRESULT, 'ApplyPictToEnd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1661), 'propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1662), 'propget'], HRESULT, 'SecondaryPlot',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1662), 'propput'], HRESULT, 'SecondaryPlot',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(1665), 'propget'], HRESULT, 'Has3DEffect',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1665), 'propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003), 'hidden', 'nonbrowsable'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2005), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2011)], HRESULT, 'PieSliceLocation',
              ( ['in'], XlPieSliceLocation, 'loc' ),
              ( ['in', 'optional'], XlPieSliceIndex, 'Index', 2 ),
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'IsTotal',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'IsTotal',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(2013)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2014)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Point implementation
##class Point_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SecondaryPlot = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return pval
##
##    def PieSliceLocation(self, loc, Index):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    IsTotal = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

ThreeDFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(12)], HRESULT, 'ResetRotation'),
    COMMETHOD([dispid(13)], HRESULT, 'SetThreeDFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetThreeDFormat, 'PresetThreeDFormat' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetExtrusionDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetExtrusionDirection, 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Depth',
              ( ['out', 'retval'], POINTER(c_float), 'Depth' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Depth',
              ( ['in'], c_float, 'Depth' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ExtrusionColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'ExtrusionColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ExtrusionColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtrusionColorType), 'ExtrusionColorType' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'ExtrusionColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtrusionColorType, 'ExtrusionColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Perspective',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Perspective' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Perspective',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Perspective' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PresetExtrusionDirection',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetExtrusionDirection), 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PresetLightingDirection',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingDirection), 'PresetLightingDirection' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PresetLightingDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingDirection, 'PresetLightingDirection' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PresetLightingSoftness',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingSoftness), 'PresetLightingSoftness' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PresetLightingSoftness',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingSoftness, 'PresetLightingSoftness' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetMaterial',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetMaterial), 'PresetMaterial' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetMaterial',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetMaterial, 'PresetMaterial' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetThreeDFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetThreeDFormat), 'PresetThreeDFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotationX',
              ( ['out', 'retval'], POINTER(c_float), 'RotationX' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'RotationX' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotationY',
              ( ['out', 'retval'], POINTER(c_float), 'RotationY' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'RotationY' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetPresetCamera',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetCamera, 'PresetCamera' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotationHorizontal',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementRotationVertical',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PresetLighting',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLightRigType), 'PresetLightRigType' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PresetLighting',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLightRigType, 'PresetLightRigType' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Z',
              ( ['out', 'retval'], POINTER(c_float), 'Z' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Z',
              ( ['in'], c_float, 'Z' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'BevelTopType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType), 'BevelTopType' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'BevelTopType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType, 'BevelTopType' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'BevelTopInset',
              ( ['out', 'retval'], POINTER(c_float), 'BevelTopInset' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'BevelTopInset',
              ( ['in'], c_float, 'BevelTopInset' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'BevelTopDepth',
              ( ['out', 'retval'], POINTER(c_float), 'BevelTopDepth' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'BevelTopDepth',
              ( ['in'], c_float, 'BevelTopDepth' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'BevelBottomType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType), 'BevelBottomType' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'BevelBottomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType, 'BevelBottomType' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'BevelBottomInset',
              ( ['out', 'retval'], POINTER(c_float), 'BevelBottomInset' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'BevelBottomInset',
              ( ['in'], c_float, 'BevelBottomInset' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'BevelBottomDepth',
              ( ['out', 'retval'], POINTER(c_float), 'BevelBottomDepth' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'BevelBottomDepth',
              ( ['in'], c_float, 'BevelBottomDepth' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'PresetCamera',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetCamera), 'PresetCamera' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotationZ',
              ( ['out', 'retval'], POINTER(c_float), 'RotationZ' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'RotationZ' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ContourWidth',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'ContourWidth',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ContourColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'ContourColor' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'FieldOfView',
              ( ['out', 'retval'], POINTER(c_float), 'FOV' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'FOV' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'ProjectText',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ProjectText' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'ProjectText',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ProjectText' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'LightAngle',
              ( ['out', 'retval'], POINTER(c_float), 'LightAngle' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'LightAngle',
              ( ['in'], c_float, 'LightAngle' )),
]
################################################################
## code template for ThreeDFormat implementation
##class ThreeDFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def ResetRotation(self):
##        '-no docstring-'
##        #return 
##
##    def SetThreeDFormat(self, PresetThreeDFormat):
##        '-no docstring-'
##        #return 
##
##    def SetExtrusionDirection(self, PresetExtrusionDirection):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Depth
##    def _set(self, Depth):
##        '-no docstring-'
##    Depth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ExtrusionColor(self):
##        '-no docstring-'
##        #return ExtrusionColor
##
##    def _get(self):
##        '-no docstring-'
##        #return ExtrusionColorType
##    def _set(self, ExtrusionColorType):
##        '-no docstring-'
##    ExtrusionColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Perspective
##    def _set(self, Perspective):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetExtrusionDirection(self):
##        '-no docstring-'
##        #return PresetExtrusionDirection
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingDirection
##    def _set(self, PresetLightingDirection):
##        '-no docstring-'
##    PresetLightingDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingSoftness
##    def _set(self, PresetLightingSoftness):
##        '-no docstring-'
##    PresetLightingSoftness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetMaterial
##    def _set(self, PresetMaterial):
##        '-no docstring-'
##    PresetMaterial = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetThreeDFormat(self):
##        '-no docstring-'
##        #return PresetThreeDFormat
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationX
##    def _set(self, RotationX):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationY
##    def _set(self, RotationY):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def SetPresetCamera(self, PresetCamera):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationHorizontal(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationVertical(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightRigType
##    def _set(self, PresetLightRigType):
##        '-no docstring-'
##    PresetLighting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Z
##    def _set(self, Z):
##        '-no docstring-'
##    Z = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopType
##    def _set(self, BevelTopType):
##        '-no docstring-'
##    BevelTopType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopInset
##    def _set(self, BevelTopInset):
##        '-no docstring-'
##    BevelTopInset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopDepth
##    def _set(self, BevelTopDepth):
##        '-no docstring-'
##    BevelTopDepth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomType
##    def _set(self, BevelBottomType):
##        '-no docstring-'
##    BevelBottomType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomInset
##    def _set(self, BevelBottomInset):
##        '-no docstring-'
##    BevelBottomInset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomDepth
##    def _set(self, BevelBottomDepth):
##        '-no docstring-'
##    BevelBottomDepth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetCamera(self):
##        '-no docstring-'
##        #return PresetCamera
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationZ
##    def _set(self, RotationZ):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    ContourWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContourColor(self):
##        '-no docstring-'
##        #return ContourColor
##
##    def _get(self):
##        '-no docstring-'
##        #return FOV
##    def _set(self, FOV):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ProjectText
##    def _set(self, ProjectText):
##        '-no docstring-'
##    ProjectText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LightAngle
##    def _set(self, LightAngle):
##        '-no docstring-'
##    LightAngle = property(_get, _set, doc = _set.__doc__)
##

class Row(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C7-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CellRange(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C8-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Row._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(CellRange)), 'Cells' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Select'),
    COMMETHOD([dispid(2005)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
]
################################################################
## code template for Row implementation
##class Row_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return Cells
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##

LinkFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'SourceFullName',
              ( ['out', 'retval'], POINTER(BSTR), 'SourceFullName' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'SourceFullName',
              ( ['in'], BSTR, 'SourceFullName' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'AutoUpdate',
              ( ['out', 'retval'], POINTER(PpUpdateOption), 'AutoUpdate' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'AutoUpdate',
              ( ['in'], PpUpdateOption, 'AutoUpdate' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Update'),
    COMMETHOD([dispid(2006)], HRESULT, 'BreakLink'),
]
################################################################
## code template for LinkFormat implementation
##class LinkFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return SourceFullName
##    def _set(self, SourceFullName):
##        '-no docstring-'
##    SourceFullName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoUpdate
##    def _set(self, AutoUpdate):
##        '-no docstring-'
##    AutoUpdate = property(_get, _set, doc = _set.__doc__)
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    def BreakLink(self):
##        '-no docstring-'
##        #return 
##

class ShapeNode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493487-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShapeNode._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EditingType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType), 'EditingType' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Points',
              ( ['out', 'retval'], POINTER(VARIANT), 'Points' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'SegmentType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType), 'SegmentType' )),
]
################################################################
## code template for ShapeNode implementation
##class ShapeNode_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def EditingType(self):
##        '-no docstring-'
##        #return EditingType
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return Points
##
##    @property
##    def SegmentType(self):
##        '-no docstring-'
##        #return SegmentType
##

class SlideShowView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91493459-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SlideShowWindow._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'View',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowView)), 'View' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Presentation',
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Presentation' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'IsFullScreen',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IsFullScreen' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(2010), 'restricted', 'propget'], HRESULT, 'HWND',
              ( ['out', 'retval'], POINTER(c_int), 'HWND' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Active' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'SlideNavigation',
              ( ['out', 'retval'], POINTER(POINTER(SlideNavigation)), 'navigation' )),
]
################################################################
## code template for SlideShowWindow implementation
##class SlideShowWindow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def View(self):
##        '-no docstring-'
##        #return View
##
##    @property
##    def Presentation(self):
##        '-no docstring-'
##        #return Presentation
##
##    @property
##    def IsFullScreen(self):
##        '-no docstring-'
##        #return IsFullScreen
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HWND(self):
##        '-no docstring-'
##        #return HWND
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return Active
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SlideNavigation(self):
##        '-no docstring-'
##        #return navigation
##

class MediaBookmark(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BA72E555-4FF5-48F4-8215-5505F990966F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MediaBookmarks._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(MediaBookmark)), 'Item' )),
    COMMETHOD([dispid(2001)], HRESULT, 'Add',
              ( ['in'], c_int, 'Position' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(MediaBookmark)), 'Add' )),
]
################################################################
## code template for MediaBookmarks implementation
##class MediaBookmarks_Impl(object):
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Position, Name):
##        '-no docstring-'
##        #return Add
##

class Series(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A75-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ErrorBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A67-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LeaderLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A6D-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Series._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'RHS' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(157)], HRESULT, 'DataLabels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(152)], HRESULT, 'ErrorBar',
              ( ['in'], XlErrorBarDirection, 'Direction' ),
              ( ['in'], XlErrorBarInclude, 'Include' ),
              ( ['in'], XlErrorBarType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Amount' ),
              ( ['in', 'optional'], VARIANT, 'MinusValues' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(159), 'propget'], HRESULT, 'ErrorBars',
              ( ['out', 'retval'], POINTER(POINTER(ErrorBars)), 'RHS' )),
    COMMETHOD([dispid(182), 'propget'], HRESULT, 'Explosion',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(182), 'propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(261), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(261), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(263), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(263), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(264), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(264), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(265), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(265), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(78), 'propget'], HRESULT, 'HasDataLabels',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(78), 'propput'], HRESULT, 'HasDataLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(160), 'propget'], HRESULT, 'HasErrorBars',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(160), 'propput'], HRESULT, 'HasErrorBars',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD([dispid(228), 'propget'], HRESULT, 'PlotOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(228), 'propput'], HRESULT, 'PlotOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(70)], HRESULT, 'Points',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'Smooth',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(154)], HRESULT, 'Trendlines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType), 'RHS' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'RHS' )),
    COMMETHOD([dispid(1401), 'hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'ChartType' )),
    COMMETHOD([dispid(164), 'propget'], HRESULT, 'Values',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(164), 'propput'], HRESULT, 'Values',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1111), 'propget'], HRESULT, 'XValues',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1111), 'propput'], HRESULT, 'XValues',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1664), 'propget'], HRESULT, 'BubbleSizes',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1664), 'propput'], HRESULT, 'BubbleSizes',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1403), 'propget'], HRESULT, 'BarShape',
              ( ['out', 'retval'], POINTER(XlBarShape), 'RHS' )),
    COMMETHOD([dispid(1403), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'RHS' )),
    COMMETHOD([dispid(1659), 'propget'], HRESULT, 'ApplyPictToSides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1659), 'propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1660), 'propget'], HRESULT, 'ApplyPictToFront',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1660), 'propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1661), 'propget'], HRESULT, 'ApplyPictToEnd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1661), 'propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1665), 'propget'], HRESULT, 'Has3DEffect',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1665), 'propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1394), 'propget'], HRESULT, 'HasLeaderLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1394), 'propput'], HRESULT, 'HasLeaderLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1666), 'propget'], HRESULT, 'LeaderLines',
              ( ['out', 'retval'], POINTER(POINTER(LeaderLines)), 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003), 'hidden', 'nonbrowsable'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2005), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'PlotColorIndex',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'InvertColor',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'InvertColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'InvertColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'InvertColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'IsFiltered',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'ParentDataLabelOption',
              ( ['out', 'retval'], POINTER(XlParentDataLabelOptions), 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'ParentDataLabelOption',
              ( ['in'], XlParentDataLabelOptions, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'QuartileCalculationInclusiveMedian',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'QuartileCalculationInclusiveMedian',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'ValueSortOrder',
              ( ['out', 'retval'], POINTER(XlValueSortOrder), 'RHS' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'ValueSortOrder',
              ( ['in'], XlValueSortOrder, 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'GeoProjectionType',
              ( ['out', 'retval'], POINTER(XlGeoProjectionType), 'RHS' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'GeoProjectionType',
              ( ['in'], XlGeoProjectionType, 'RHS' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'GeoMappingLevel',
              ( ['out', 'retval'], POINTER(XlGeoMappingLevel), 'RHS' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'GeoMappingLevel',
              ( ['in'], XlGeoMappingLevel, 'RHS' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'RegionLabelOption',
              ( ['out', 'retval'], POINTER(XlRegionLabelOptions), 'RHS' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'RegionLabelOption',
              ( ['in'], XlRegionLabelOptions, 'RHS' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'SeriesColorGradientStyle',
              ( ['out', 'retval'], POINTER(XlSeriesColorGradientStyle), 'RHS' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'SeriesColorGradientStyle',
              ( ['in'], XlSeriesColorGradientStyle, 'RHS' )),
    COMMETHOD([dispid(2017)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2018)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Series implementation
##class Series_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def DataLabels(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def ErrorBar(self, Direction, Include, Type, Amount, MinusValues):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ErrorBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasErrorBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def Points(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    def Trendlines(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Values = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    XValues = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BubbleSizes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasLeaderLines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LeaderLines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlotColorIndex(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ParentDataLabelOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    QuartileCalculationInclusiveMedian = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ValueSortOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GeoProjectionType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GeoMappingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RegionLabelOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SeriesColorGradientStyle = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLineStyle'
xlContinuous = 1
xlDash = -4115
xlDashDot = 4
xlDashDotDot = 5
xlDot = -4118
xlDouble = -4119
xlSlantDashDot = 13
xlLineStyleNone = -4142
XlLineStyle = c_int # enum
MediaBookmark._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'Index' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(c_int), 'Position' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Delete'),
]
################################################################
## code template for MediaBookmark implementation
##class MediaBookmark_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return Index
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    @property
##    def Position(self):
##        '-no docstring-'
##        #return Position
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

ChartData._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Workbook',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppdispWorkbook' )),
    COMMETHOD([dispid(2002)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'IsLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pfIsLinked' )),
    COMMETHOD([dispid(2004)], HRESULT, 'BreakLink'),
    COMMETHOD([dispid(2005)], HRESULT, 'ActivateChartDataWindow'),
]
################################################################
## code template for ChartData implementation
##class ChartData_Impl(object):
##    @property
##    def Workbook(self):
##        '-no docstring-'
##        #return ppdispWorkbook
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsLinked(self):
##        '-no docstring-'
##        #return pfIsLinked
##
##    def BreakLink(self):
##        '-no docstring-'
##        #return 
##
##    def ActivateChartDataWindow(self):
##        '-no docstring-'
##        #return 
##

class EffectInformation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E2-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoAnimTextUnitEffect'
msoAnimTextUnitEffectMixed = -1
msoAnimTextUnitEffectByParagraph = 0
msoAnimTextUnitEffectByCharacter = 1
msoAnimTextUnitEffectByWord = 2
MsoAnimTextUnitEffect = c_int # enum
EffectInformation._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'AfterEffect',
              ( ['out', 'retval'], POINTER(MsoAnimAfterEffect), 'AfterEffect' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'AnimateBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AnimateBackground' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'AnimateTextInReverse',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AnimateTextInReverse' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'BuildByLevelEffect',
              ( ['out', 'retval'], POINTER(MsoAnimateByLevel), 'BuildByLevelEffect' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Dim',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'Dim' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'PlaySettings',
              ( ['out', 'retval'], POINTER(POINTER(PlaySettings)), 'PlaySettings' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SoundEffect',
              ( ['out', 'retval'], POINTER(POINTER(SoundEffect)), 'SoundEffect' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'TextUnitEffect',
              ( ['out', 'retval'], POINTER(MsoAnimTextUnitEffect), 'TextUnitEffect' )),
]
################################################################
## code template for EffectInformation implementation
##class EffectInformation_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def AfterEffect(self):
##        '-no docstring-'
##        #return AfterEffect
##
##    @property
##    def AnimateBackground(self):
##        '-no docstring-'
##        #return AnimateBackground
##
##    @property
##    def AnimateTextInReverse(self):
##        '-no docstring-'
##        #return AnimateTextInReverse
##
##    @property
##    def BuildByLevelEffect(self):
##        '-no docstring-'
##        #return BuildByLevelEffect
##
##    @property
##    def Dim(self):
##        '-no docstring-'
##        #return Dim
##
##    @property
##    def PlaySettings(self):
##        '-no docstring-'
##        #return PlaySettings
##
##    @property
##    def SoundEffect(self):
##        '-no docstring-'
##        #return SoundEffect
##
##    @property
##    def TextUnitEffect(self):
##        '-no docstring-'
##        #return TextUnitEffect
##

SlideShowView._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Zoom',
              ( ['out', 'retval'], POINTER(c_int), 'Zoom' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Slide',
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'Slide' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'PointerType',
              ( ['out', 'retval'], POINTER(PpSlideShowPointerType), 'PointerType' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'PointerType',
              ( ['in'], PpSlideShowPointerType, 'PointerType' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'State',
              ( ['out', 'retval'], POINTER(PpSlideShowState), 'State' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'State',
              ( ['in'], PpSlideShowState, 'State' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AcceleratorsEnabled',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AcceleratorsEnabled' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'AcceleratorsEnabled',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AcceleratorsEnabled' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'PresentationElapsedTime',
              ( ['out', 'retval'], POINTER(c_float), 'PresentationElapsedTime' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SlideElapsedTime',
              ( ['out', 'retval'], POINTER(c_float), 'SlideElapsedTime' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'SlideElapsedTime',
              ( ['in'], c_float, 'SlideElapsedTime' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'LastSlideViewed',
              ( ['out', 'retval'], POINTER(POINTER(Slide)), 'LastSlideViewed' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'AdvanceMode',
              ( ['out', 'retval'], POINTER(PpSlideShowAdvanceMode), 'AdvanceMode' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'PointerColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'PointerColor' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'IsNamedShow',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IsNamedShow' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'SlideShowName',
              ( ['out', 'retval'], POINTER(BSTR), 'SlideShowName' )),
    COMMETHOD([dispid(2015)], HRESULT, 'DrawLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' )),
    COMMETHOD([dispid(2016)], HRESULT, 'EraseDrawing'),
    COMMETHOD([dispid(2017)], HRESULT, 'First'),
    COMMETHOD([dispid(2018)], HRESULT, 'Last'),
    COMMETHOD([dispid(2019)], HRESULT, 'Next'),
    COMMETHOD([dispid(2020)], HRESULT, 'Previous'),
    COMMETHOD([dispid(2021)], HRESULT, 'GotoSlide',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ResetSlide', -1 )),
    COMMETHOD([dispid(2022)], HRESULT, 'GotoNamedShow',
              ( ['in'], BSTR, 'SlideShowName' )),
    COMMETHOD([dispid(2023)], HRESULT, 'EndNamedShow'),
    COMMETHOD([dispid(2024)], HRESULT, 'ResetSlideTime'),
    COMMETHOD([dispid(2025)], HRESULT, 'Exit'),
    COMMETHOD([dispid(2026), 'hidden'], HRESULT, 'InstallTracker',
              ( ['in'], POINTER(MouseTracker), 'pTracker' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Presenter' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'CurrentShowPosition',
              ( ['out', 'retval'], POINTER(c_int), 'CurrentShowPosition' )),
    COMMETHOD([dispid(2028)], HRESULT, 'GotoClick',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(2029)], HRESULT, 'GetClickIndex',
              ( ['out', 'retval'], POINTER(c_int), 'GetClickIndex' )),
    COMMETHOD([dispid(2030)], HRESULT, 'GetClickCount',
              ( ['out', 'retval'], POINTER(c_int), 'GetClickCount' )),
    COMMETHOD([dispid(2031)], HRESULT, 'FirstAnimationIsAutomatic',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'FirstAnimationIsAutomatic' )),
    COMMETHOD([dispid(2032)], HRESULT, 'Player',
              ( ['in'], VARIANT, 'ShapeId' ),
              ( ['out', 'retval'], POINTER(POINTER(Player)), 'Player' )),
    COMMETHOD([dispid(2033), 'propget'], HRESULT, 'MediaControlsVisible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'MediaControlsVisible' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'MediaControlsLeft',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsLeft' )),
    COMMETHOD([dispid(2035), 'propget'], HRESULT, 'MediaControlsTop',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsTop' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'MediaControlsWidth',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsWidth' )),
    COMMETHOD([dispid(2037), 'propget'], HRESULT, 'MediaControlsHeight',
              ( ['out', 'retval'], POINTER(c_float), 'MediaControlsHeight' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'LaserPointerEnabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'LaserPointerEnabled' )),
    COMMETHOD([dispid(2038), 'propput'], HRESULT, 'LaserPointerEnabled',
              ( ['in'], VARIANT_BOOL, 'LaserPointerEnabled' )),
]
################################################################
## code template for SlideShowView implementation
##class SlideShowView_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Zoom(self):
##        '-no docstring-'
##        #return Zoom
##
##    @property
##    def Slide(self):
##        '-no docstring-'
##        #return Slide
##
##    def _get(self):
##        '-no docstring-'
##        #return PointerType
##    def _set(self, PointerType):
##        '-no docstring-'
##    PointerType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return State
##    def _set(self, State):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AcceleratorsEnabled
##    def _set(self, AcceleratorsEnabled):
##        '-no docstring-'
##    AcceleratorsEnabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresentationElapsedTime(self):
##        '-no docstring-'
##        #return PresentationElapsedTime
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideElapsedTime
##    def _set(self, SlideElapsedTime):
##        '-no docstring-'
##    SlideElapsedTime = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LastSlideViewed(self):
##        '-no docstring-'
##        #return LastSlideViewed
##
##    @property
##    def AdvanceMode(self):
##        '-no docstring-'
##        #return AdvanceMode
##
##    @property
##    def PointerColor(self):
##        '-no docstring-'
##        #return PointerColor
##
##    @property
##    def IsNamedShow(self):
##        '-no docstring-'
##        #return IsNamedShow
##
##    @property
##    def SlideShowName(self):
##        '-no docstring-'
##        #return SlideShowName
##
##    def DrawLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return 
##
##    def EraseDrawing(self):
##        '-no docstring-'
##        #return 
##
##    def First(self):
##        '-no docstring-'
##        #return 
##
##    def Last(self):
##        '-no docstring-'
##        #return 
##
##    def Next(self):
##        '-no docstring-'
##        #return 
##
##    def Previous(self):
##        '-no docstring-'
##        #return 
##
##    def GotoSlide(self, Index, ResetSlide):
##        '-no docstring-'
##        #return 
##
##    def GotoNamedShow(self, SlideShowName):
##        '-no docstring-'
##        #return 
##
##    def EndNamedShow(self):
##        '-no docstring-'
##        #return 
##
##    def ResetSlideTime(self):
##        '-no docstring-'
##        #return 
##
##    def Exit(self):
##        '-no docstring-'
##        #return 
##
##    def InstallTracker(self, pTracker, Presenter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CurrentShowPosition(self):
##        '-no docstring-'
##        #return CurrentShowPosition
##
##    def GotoClick(self, Index):
##        '-no docstring-'
##        #return 
##
##    def GetClickIndex(self):
##        '-no docstring-'
##        #return GetClickIndex
##
##    def GetClickCount(self):
##        '-no docstring-'
##        #return GetClickCount
##
##    def FirstAnimationIsAutomatic(self):
##        '-no docstring-'
##        #return FirstAnimationIsAutomatic
##
##    def Player(self, ShapeId):
##        '-no docstring-'
##        #return Player
##
##    @property
##    def MediaControlsVisible(self):
##        '-no docstring-'
##        #return MediaControlsVisible
##
##    @property
##    def MediaControlsLeft(self):
##        '-no docstring-'
##        #return MediaControlsLeft
##
##    @property
##    def MediaControlsTop(self):
##        '-no docstring-'
##        #return MediaControlsTop
##
##    @property
##    def MediaControlsWidth(self):
##        '-no docstring-'
##        #return MediaControlsWidth
##
##    @property
##    def MediaControlsHeight(self):
##        '-no docstring-'
##        #return MediaControlsHeight
##
##    def _get(self):
##        '-no docstring-'
##        #return LaserPointerEnabled
##    def _set(self, LaserPointerEnabled):
##        '-no docstring-'
##    LaserPointerEnabled = property(_get, _set, doc = _set.__doc__)
##

class AnimationBehaviors(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E3-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AnimationBehavior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E4-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'MsoAnimType'
msoAnimTypeMixed = -2
msoAnimTypeNone = 0
msoAnimTypeMotion = 1
msoAnimTypeColor = 2
msoAnimTypeScale = 3
msoAnimTypeRotation = 4
msoAnimTypeProperty = 5
msoAnimTypeCommand = 6
msoAnimTypeFilter = 7
msoAnimTypeSet = 8
MsoAnimType = c_int # enum
AnimationBehaviors._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AnimationBehavior)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], MsoAnimType, 'Type' ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(AnimationBehavior)), 'Add' )),
]
################################################################
## code template for AnimationBehaviors implementation
##class AnimationBehaviors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Type, Index):
##        '-no docstring-'
##        #return Add
##

ChartBorder._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'LineStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Weight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Weight',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for ChartBorder implementation
##class ChartBorder_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

ChartFont._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Background',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'Bold',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Bold',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'FontStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'FontStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Italic',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Italic',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Name',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2008), 'hidden', 'propput'], HRESULT, 'OutlineFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2008), 'hidden', 'propget'], HRESULT, 'OutlineFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2009), 'hidden', 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2009), 'hidden', 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Size',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'Strikethrough',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Strikethrough',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'Subscript',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Subscript',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'Superscript',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Superscript',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'Underline',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Underline',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for ChartFont implementation
##class ChartFont_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FontStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OutlineFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Strikethrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

class CategoryCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2432F529-514B-4575-AA71-1754C74A13D6}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartCategory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AF028401-4619-4271-AFDD-F480FA925186}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CategoryCollection._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'cCategory' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCategory)), 'ppcategory' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'ppval' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCategory)), 'RHS' )),
]
################################################################
## code template for CategoryCollection implementation
##class CategoryCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return cCategory
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppcategory
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Guide(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3D2F865B-E2DB-4896-BC35-6A006DF896DC}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Guides._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Guide)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in'], PpGuideOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Position' ),
              ( ['out', 'retval'], POINTER(POINTER(Guide)), 'Add' )),
]
################################################################
## code template for Guides implementation
##class Guides_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Orientation, Position):
##        '-no docstring-'
##        #return Add
##


# values for enumeration 'XlAxisCrosses'
xlAxisCrossesAutomatic = -4105
xlAxisCrossesCustom = -4114
xlAxisCrossesMaximum = 2
xlAxisCrossesMinimum = 4
XlAxisCrosses = c_int # enum
PresEvents._methods_ = [
]
################################################################
## code template for PresEvents implementation
##class PresEvents_Impl(object):

Model3DFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'AutoFit',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoFit' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'AutoFit',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoFit' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'RotationX',
              ( ['out', 'retval'], POINTER(c_float), 'RotationX' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'RotationX' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'RotationY',
              ( ['out', 'retval'], POINTER(c_float), 'RotationY' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'RotationY' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'RotationZ',
              ( ['out', 'retval'], POINTER(c_float), 'RotationZ' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'RotationZ' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FieldOfView',
              ( ['out', 'retval'], POINTER(c_float), 'FOV' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'FOV' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CameraPositionX',
              ( ['out', 'retval'], POINTER(c_float), 'CameraPositionX' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CameraPositionX',
              ( ['in'], c_float, 'CameraPositionX' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CameraPositionY',
              ( ['out', 'retval'], POINTER(c_float), 'CameraPositionY' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CameraPositionY',
              ( ['in'], c_float, 'CameraPositionY' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'CameraPositionZ',
              ( ['out', 'retval'], POINTER(c_float), 'CameraPositionZ' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'CameraPositionZ',
              ( ['in'], c_float, 'CameraPositionZ' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'LookAtPointX',
              ( ['out', 'retval'], POINTER(c_float), 'LookAtPointX' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'LookAtPointX',
              ( ['in'], c_float, 'LookAtPointX' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'LookAtPointY',
              ( ['out', 'retval'], POINTER(c_float), 'LookAtPointY' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'LookAtPointY',
              ( ['in'], c_float, 'LookAtPointY' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'LookAtPointZ',
              ( ['out', 'retval'], POINTER(c_float), 'LookAtPointZ' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'LookAtPointZ',
              ( ['in'], c_float, 'LookAtPointZ' )),
    COMMETHOD([dispid(111)], HRESULT, 'ResetModel',
              ( ['in', 'optional'], VARIANT_BOOL, 'ResetSize', False )),
    COMMETHOD([dispid(112)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(113)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(114)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
]
################################################################
## code template for Model3DFormat implementation
##class Model3DFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoFit
##    def _set(self, AutoFit):
##        '-no docstring-'
##    AutoFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationX
##    def _set(self, RotationX):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationY
##    def _set(self, RotationY):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationZ
##    def _set(self, RotationZ):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FOV
##    def _set(self, FOV):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CameraPositionX
##    def _set(self, CameraPositionX):
##        '-no docstring-'
##    CameraPositionX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CameraPositionY
##    def _set(self, CameraPositionY):
##        '-no docstring-'
##    CameraPositionY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CameraPositionZ
##    def _set(self, CameraPositionZ):
##        '-no docstring-'
##    CameraPositionZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LookAtPointX
##    def _set(self, LookAtPointX):
##        '-no docstring-'
##    LookAtPointX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LookAtPointY
##    def _set(self, LookAtPointY):
##        '-no docstring-'
##    LookAtPointY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LookAtPointZ
##    def _set(self, LookAtPointZ):
##        '-no docstring-'
##    LookAtPointZ = property(_get, _set, doc = _set.__doc__)
##
##    def ResetModel(self, ResetSize):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##

class DownBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A65-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DropLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A66-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartGroup._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'DownBars',
              ( ['out', 'retval'], POINTER(POINTER(DownBars)), 'ppdownbars' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'DropLines',
              ( ['out', 'retval'], POINTER(POINTER(DropLines)), 'ppdroplines' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'HasDropLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'HasDropLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HasHiLoLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HasHiLoLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'HasRadarAxisLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'HasRadarAxisLabels',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'HasSeriesLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'HasSeriesLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'HasUpDownBars',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'HasUpDownBars',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'HiLoLines',
              ( ['out', 'retval'], POINTER(POINTER(HiLoLines)), 'ppHiLoLines' )),
    COMMETHOD([dispid(1610743821)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppSeriesCollection' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'SeriesLines',
              ( ['out', 'retval'], POINTER(POINTER(SeriesLines)), 'ppSeriesLines' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'UpBars',
              ( ['out', 'retval'], POINTER(POINTER(UpBars)), 'ppUpBars' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'VaryByCategories',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'VaryByCategories',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'SizeRepresents',
              ( ['out', 'retval'], POINTER(XlSizeRepresents), 'RHS' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'SizeRepresents',
              ( ['in'], XlSizeRepresents, 'RHS' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'ShowNegativeBubbles',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'ShowNegativeBubbles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'SplitType',
              ( ['in'], XlChartSplitType, 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'SplitType',
              ( ['out', 'retval'], POINTER(XlChartSplitType), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SplitValue',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'SplitValue',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Has3DShading',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Has3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'BubbleScale',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'BubbleScale',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'DoughnutHoleSize',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'DoughnutHoleSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'FirstSliceAngle',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'FirstSliceAngle',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'GapWidth',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'GapWidth',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Overlap',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'Overlap',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'RadarAxisLabels',
              ( ['out', 'retval'], POINTER(POINTER(TickLabels)), 'RHS' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'Subtype',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2015), 'hidden', 'propput'], HRESULT, 'Subtype',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2016), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2016), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'SecondPlotSize',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'SecondPlotSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2018)], HRESULT, 'CategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2019)], HRESULT, 'FullCategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'BinsType',
              ( ['out', 'retval'], POINTER(XlBinsType), 'RHS' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'BinsType',
              ( ['in'], XlBinsType, 'RHS' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'BinWidthValue',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'BinWidthValue',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'BinsCountValue',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'BinsCountValue',
              ( ['in'], c_int, 'pval' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'BinsOverflowEnabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'BinsOverflowEnabled',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'BinsOverflowValue',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'BinsOverflowValue',
              ( ['in'], c_double, 'pval' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'BinsUnderflowEnabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pval' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'BinsUnderflowEnabled',
              ( ['in'], VARIANT_BOOL, 'pval' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'BinsUnderflowValue',
              ( ['out', 'retval'], POINTER(c_double), 'pval' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'BinsUnderflowValue',
              ( ['in'], c_double, 'pval' )),
]
################################################################
## code template for ChartGroup implementation
##class ChartGroup_Impl(object):
##    @property
##    def DownBars(self):
##        '-no docstring-'
##        #return ppdownbars
##
##    @property
##    def DropLines(self):
##        '-no docstring-'
##        #return ppdroplines
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDropLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasHiLoLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasRadarAxisLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasSeriesLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasUpDownBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HiLoLines(self):
##        '-no docstring-'
##        #return ppHiLoLines
##
##    def SeriesCollection(self, Index):
##        '-no docstring-'
##        #return ppSeriesCollection
##
##    @property
##    def SeriesLines(self):
##        '-no docstring-'
##        #return ppSeriesLines
##
##    @property
##    def UpBars(self):
##        '-no docstring-'
##        #return ppUpBars
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VaryByCategories = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SizeRepresents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowNegativeBubbles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DShading = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BubbleScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DoughnutHoleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FirstSliceAngle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GapWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Overlap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RadarAxisLabels(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Subtype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SecondPlotSize = property(_get, _set, doc = _set.__doc__)
##
##    def CategoryCollection(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def FullCategoryCollection(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BinsType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinWidthValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinsCountValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinsOverflowEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinsOverflowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinsUnderflowEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pval
##    def _set(self, pval):
##        '-no docstring-'
##    BinsUnderflowValue = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlAxisType'
xlCategory = 1
xlSeriesAxis = 3
xlValue = 2
XlAxisType = c_int # enum

# values for enumeration 'MsoAnimAdditive'
msoAnimAdditiveAddBase = 1
msoAnimAdditiveAddSum = 2
MsoAnimAdditive = c_int # enum

# values for enumeration 'MsoAnimAccumulate'
msoAnimAccumulateNone = 1
msoAnimAccumulateAlways = 2
MsoAnimAccumulate = c_int # enum
class MotionEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E5-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ColorEffect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934E6-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AnimationBehavior._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Additive',
              ( ['out', 'retval'], POINTER(MsoAnimAdditive), 'Additive' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Additive',
              ( ['in'], MsoAnimAdditive, 'Additive' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Accumulate',
              ( ['out', 'retval'], POINTER(MsoAnimAccumulate), 'Accumulate' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'Accumulate',
              ( ['in'], MsoAnimAccumulate, 'Accumulate' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(MsoAnimType), 'Type' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Type',
              ( ['in'], MsoAnimType, 'Type' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'MotionEffect',
              ( ['out', 'retval'], POINTER(POINTER(MotionEffect)), 'MotionEffect' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'ColorEffect',
              ( ['out', 'retval'], POINTER(POINTER(ColorEffect)), 'ColorEffect' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'ScaleEffect',
              ( ['out', 'retval'], POINTER(POINTER(ScaleEffect)), 'ScaleEffect' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'RotationEffect',
              ( ['out', 'retval'], POINTER(POINTER(RotationEffect)), 'RotationEffect' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'PropertyEffect',
              ( ['out', 'retval'], POINTER(POINTER(PropertyEffect)), 'PropertyEffect' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Timing',
              ( ['out', 'retval'], POINTER(POINTER(Timing)), 'Timing' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'CommandEffect',
              ( ['out', 'retval'], POINTER(POINTER(CommandEffect)), 'CommandEffect' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'FilterEffect',
              ( ['out', 'retval'], POINTER(POINTER(FilterEffect)), 'FilterEffect' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'SetEffect',
              ( ['out', 'retval'], POINTER(POINTER(SetEffect)), 'SetEffect' )),
]
################################################################
## code template for AnimationBehavior implementation
##class AnimationBehavior_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Additive
##    def _set(self, Additive):
##        '-no docstring-'
##    Additive = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Accumulate
##    def _set(self, Accumulate):
##        '-no docstring-'
##    Accumulate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MotionEffect(self):
##        '-no docstring-'
##        #return MotionEffect
##
##    @property
##    def ColorEffect(self):
##        '-no docstring-'
##        #return ColorEffect
##
##    @property
##    def ScaleEffect(self):
##        '-no docstring-'
##        #return ScaleEffect
##
##    @property
##    def RotationEffect(self):
##        '-no docstring-'
##        #return RotationEffect
##
##    @property
##    def PropertyEffect(self):
##        '-no docstring-'
##        #return PropertyEffect
##
##    @property
##    def Timing(self):
##        '-no docstring-'
##        #return Timing
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CommandEffect(self):
##        '-no docstring-'
##        #return CommandEffect
##
##    @property
##    def FilterEffect(self):
##        '-no docstring-'
##        #return FilterEffect
##
##    @property
##    def SetEffect(self):
##        '-no docstring-'
##        #return SetEffect
##

class FullSeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{288B25A9-98EF-41E5-BEBA-F547D7169BF2}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FullSeriesCollection._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'ppval' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
]
################################################################
## code template for FullSeriesCollection implementation
##class FullSeriesCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppval
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'PpTransitionSpeed'
ppTransitionSpeedMixed = -2
ppTransitionSpeedSlow = 1
ppTransitionSpeedMedium = 2
ppTransitionSpeedFast = 3
PpTransitionSpeed = c_int # enum

# values for enumeration 'XlBorderWeight'
xlHairline = 1
xlMedium = -4138
xlThick = 4
xlThin = 2
XlBorderWeight = c_int # enum
PictureFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementBrightness',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementContrast',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Brightness',
              ( ['out', 'retval'], POINTER(c_float), 'Brightness' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'Brightness' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPictureColorType), 'ColorType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPictureColorType, 'ColorType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Contrast',
              ( ['out', 'retval'], POINTER(c_float), 'Contrast' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Contrast',
              ( ['in'], c_float, 'Contrast' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CropBottom',
              ( ['out', 'retval'], POINTER(c_float), 'CropBottom' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'CropBottom',
              ( ['in'], c_float, 'CropBottom' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'CropLeft',
              ( ['out', 'retval'], POINTER(c_float), 'CropLeft' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'CropLeft',
              ( ['in'], c_float, 'CropLeft' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CropRight',
              ( ['out', 'retval'], POINTER(c_float), 'CropRight' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CropRight',
              ( ['in'], c_float, 'CropRight' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CropTop',
              ( ['out', 'retval'], POINTER(c_float), 'CropTop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CropTop',
              ( ['in'], c_float, 'CropTop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'TransparencyColor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType), 'TransparencyColor' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'TransparencyColor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType, 'TransparencyColor' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'TransparentBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'TransparentBackground' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'TransparentBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'TransparentBackground' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Crop',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Crop)), 'Crop' )),
]
################################################################
## code template for PictureFormat implementation
##class PictureFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def IncrementBrightness(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementContrast(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Brightness
##    def _set(self, Brightness):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorType
##    def _set(self, ColorType):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Contrast
##    def _set(self, Contrast):
##        '-no docstring-'
##    Contrast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropBottom
##    def _set(self, CropBottom):
##        '-no docstring-'
##    CropBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropLeft
##    def _set(self, CropLeft):
##        '-no docstring-'
##    CropLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropRight
##    def _set(self, CropRight):
##        '-no docstring-'
##    CropRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropTop
##    def _set(self, CropTop):
##        '-no docstring-'
##    CropTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparencyColor
##    def _set(self, TransparencyColor):
##        '-no docstring-'
##    TransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparentBackground
##    def _set(self, TransparentBackground):
##        '-no docstring-'
##    TransparentBackground = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Crop(self):
##        '-no docstring-'
##        #return Crop
##

Guide._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(PpGuideOrientation), 'Orientation' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(c_float), 'Position' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Position',
              ( ['in'], c_float, 'Position' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'Color' )),
]
################################################################
## code template for Guide implementation
##class Guide_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Orientation(self):
##        '-no docstring-'
##        #return Orientation
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return Color
##

ShadowFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementOffsetX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementOffsetY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Obscured',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Obscured' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Obscured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Obscured' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'OffsetX',
              ( ['out', 'retval'], POINTER(c_float), 'OffsetX' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'OffsetX',
              ( ['in'], c_float, 'OffsetX' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'OffsetY',
              ( ['out', 'retval'], POINTER(c_float), 'OffsetY' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'OffsetY',
              ( ['in'], c_float, 'OffsetY' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowType), 'Type' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowType, 'Type' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowStyle), 'ShadowStyle' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowStyle, 'ShadowStyle' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Blur',
              ( ['out', 'retval'], POINTER(c_float), 'Blur' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Blur',
              ( ['in'], c_float, 'Blur' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotateWithShape',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RotateWithShape' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotateWithShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RotateWithShape' )),
]
################################################################
## code template for ShadowFormat implementation
##class ShadowFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def IncrementOffsetX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementOffsetY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Obscured
##    def _set(self, Obscured):
##        '-no docstring-'
##    Obscured = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OffsetX
##    def _set(self, OffsetX):
##        '-no docstring-'
##    OffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OffsetY
##    def _set(self, OffsetY):
##        '-no docstring-'
##    OffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShadowStyle
##    def _set(self, ShadowStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Blur
##    def _set(self, Blur):
##        '-no docstring-'
##    Blur = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithShape
##    def _set(self, RotateWithShape):
##        '-no docstring-'
##    RotateWithShape = property(_get, _set, doc = _set.__doc__)
##

DropLines._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2006)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for DropLines implementation
##class DropLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##

ChartCategory._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'IsFiltered',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pfIsFiltered' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'pfIsFiltered' )),
]
################################################################
## code template for ChartCategory implementation
##class ChartCategory_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstr
##
##    def _get(self):
##        '-no docstring-'
##        #return pfIsFiltered
##    def _set(self, pfIsFiltered):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##

class Columns(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C4-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Rows(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C6-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Cell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C9-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Table._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Columns',
              ( ['out', 'retval'], POINTER(POINTER(Columns)), 'Columns' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Rows',
              ( ['out', 'retval'], POINTER(POINTER(Rows)), 'Rows' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Cell',
              ( ['in'], c_int, 'Row' ),
              ( ['in'], c_int, 'Column' ),
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'Cell' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'TableDirection',
              ( ['out', 'retval'], POINTER(PpDirection), 'TableDirection' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'TableDirection',
              ( ['in'], PpDirection, 'TableDirection' )),
    COMMETHOD([dispid(2007), 'hidden'], HRESULT, 'MergeBorders'),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'FirstRow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'FirstRow' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'FirstRow',
              ( ['in'], VARIANT_BOOL, 'FirstRow' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'LastRow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'LastRow' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'LastRow',
              ( ['in'], VARIANT_BOOL, 'LastRow' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'FirstCol',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'FirstCol' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'FirstCol',
              ( ['in'], VARIANT_BOOL, 'FirstCol' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'LastCol',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'LastCol' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'LastCol',
              ( ['in'], VARIANT_BOOL, 'LastCol' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'HorizBanding',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'HorizBanding' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'HorizBanding',
              ( ['in'], VARIANT_BOOL, 'HorizBanding' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'VertBanding',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'VertBanding' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'VertBanding',
              ( ['in'], VARIANT_BOOL, 'VertBanding' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(POINTER(TableStyle)), 'Style' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(TableBackground)), 'Background' )),
    COMMETHOD([dispid(2016)], HRESULT, 'ScaleProportionally',
              ( ['in'], c_float, 'scale' )),
    COMMETHOD([dispid(2017)], HRESULT, 'ApplyStyle',
              ( ['in', 'optional'], BSTR, 'StyleID', '' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveFormatting', False )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'AlternativeText' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'AlternativeText' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'Title' )),
    COMMETHOD([dispid(2019), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'Title' )),
]
################################################################
## code template for Table implementation
##class Table_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return Columns
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return Rows
##
##    def Cell(self, Row, Column):
##        '-no docstring-'
##        #return Cell
##
##    def _get(self):
##        '-no docstring-'
##        #return TableDirection
##    def _set(self, TableDirection):
##        '-no docstring-'
##    TableDirection = property(_get, _set, doc = _set.__doc__)
##
##    def MergeBorders(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return FirstRow
##    def _set(self, FirstRow):
##        '-no docstring-'
##    FirstRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LastRow
##    def _set(self, LastRow):
##        '-no docstring-'
##    LastRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FirstCol
##    def _set(self, FirstCol):
##        '-no docstring-'
##    FirstCol = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LastCol
##    def _set(self, LastCol):
##        '-no docstring-'
##    LastCol = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizBanding
##    def _set(self, HorizBanding):
##        '-no docstring-'
##    HorizBanding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VertBanding
##    def _set(self, VertBanding):
##        '-no docstring-'
##    VertBanding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return Style
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def ScaleProportionally(self, scale):
##        '-no docstring-'
##        #return 
##
##    def ApplyStyle(self, StyleID, SaveFormatting):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return AlternativeText
##    def _set(self, AlternativeText):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Title
##    def _set(self, Title):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlDisplayUnit'
xlHundreds = -2
xlThousands = -3
xlTenThousands = -4
xlHundredThousands = -5
xlMillions = -6
xlTenMillions = -7
xlHundredMillions = -8
xlThousandMillions = -9
xlMillionMillions = -10
XlDisplayUnit = c_int # enum
DocumentWindows._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindow)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Arrange',
              ( ['in', 'optional'], PpArrangeStyle, 'arrangeStyle', 1 )),
]
################################################################
## code template for DocumentWindows implementation
##class DocumentWindows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Arrange(self, arrangeStyle):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlCategoryType'
xlCategoryScale = 2
xlTimeScale = 3
xlAutomaticScale = -4105
XlCategoryType = c_int # enum
DownBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for DownBars implementation
##class DownBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return bstr
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Delete(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

LeaderLines._methods_ = [
    COMMETHOD([dispid(235)], HRESULT, 'Select'),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for LeaderLines implementation
##class LeaderLines_Impl(object):
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##


# values for enumeration 'XlChartItem'
xlDataLabel = 0
xlChartArea = 2
xlSeries = 3
xlChartTitle = 4
xlWalls = 5
xlCorners = 6
xlDataTable = 7
xlTrendline = 8
xlErrorBars = 9
xlXErrorBars = 10
xlYErrorBars = 11
xlLegendEntry = 12
xlLegendKey = 13
xlShape = 14
xlMajorGridlines = 15
xlMinorGridlines = 16
xlAxisTitle = 17
xlUpBars = 18
xlPlotArea = 19
xlDownBars = 20
xlAxis = 21
xlSeriesLines = 22
xlFloor = 23
xlLegend = 24
xlHiLoLines = 25
xlDropLines = 26
xlRadarAxisLabels = 27
xlNothing = 28
xlLeaderLines = 29
xlDisplayUnitLabel = 30
xlPivotChartFieldButton = 31
xlPivotChartDropZone = 32
XlChartItem = c_int # enum
class SeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A76-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SeriesCollection._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(227)], HRESULT, 'Extend',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Rowcol' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(1117)], HRESULT, 'NewSeries',
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002)], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], XlRowCol, 'Rowcol', -4105 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'RHS' )),
]
################################################################
## code template for SeriesCollection implementation
##class SeriesCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Extend(self, Source, Rowcol, CategoryLabels):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def NewSeries(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Add(self, Source, Rowcol, SeriesLabels, CategoryLabels, Replace):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

SlideShowTransition._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'AdvanceOnClick',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AdvanceOnClick' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'AdvanceOnClick',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AdvanceOnClick' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'AdvanceOnTime',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AdvanceOnTime' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'AdvanceOnTime',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AdvanceOnTime' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'AdvanceTime',
              ( ['out', 'retval'], POINTER(c_float), 'AdvanceTime' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'AdvanceTime',
              ( ['in'], c_float, 'AdvanceTime' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'EntryEffect',
              ( ['out', 'retval'], POINTER(PpEntryEffect), 'EntryEffect' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'EntryEffect',
              ( ['in'], PpEntryEffect, 'EntryEffect' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Hidden',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Hidden' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Hidden',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Hidden' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'LoopSoundUntilNext',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'LoopSoundUntilNext' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'LoopSoundUntilNext',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'LoopSoundUntilNext' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'SoundEffect',
              ( ['out', 'retval'], POINTER(POINTER(SoundEffect)), 'SoundEffect' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Speed',
              ( ['out', 'retval'], POINTER(PpTransitionSpeed), 'Speed' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Speed',
              ( ['in'], PpTransitionSpeed, 'Speed' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Duration',
              ( ['out', 'retval'], POINTER(c_float), 'Duration' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'Duration',
              ( ['in'], c_float, 'Duration' )),
]
################################################################
## code template for SlideShowTransition implementation
##class SlideShowTransition_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceOnClick
##    def _set(self, AdvanceOnClick):
##        '-no docstring-'
##    AdvanceOnClick = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceOnTime
##    def _set(self, AdvanceOnTime):
##        '-no docstring-'
##    AdvanceOnTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AdvanceTime
##    def _set(self, AdvanceTime):
##        '-no docstring-'
##    AdvanceTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EntryEffect
##    def _set(self, EntryEffect):
##        '-no docstring-'
##    EntryEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Hidden
##    def _set(self, Hidden):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return LoopSoundUntilNext
##    def _set(self, LoopSoundUntilNext):
##        '-no docstring-'
##    LoopSoundUntilNext = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SoundEffect(self):
##        '-no docstring-'
##        #return SoundEffect
##
##    def _get(self):
##        '-no docstring-'
##        #return Speed
##    def _set(self, Speed):
##        '-no docstring-'
##    Speed = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Duration
##    def _set(self, Duration):
##        '-no docstring-'
##    Duration = property(_get, _set, doc = _set.__doc__)
##

class TextStyles(Collection):
    _case_insensitive_ = True
    _iid_ = GUID('{91493498-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_Master._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'Shapes' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HeadersFooters',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'HeadersFooters' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'ColorScheme',
              ( ['out', 'retval'], POINTER(POINTER(ColorScheme)), 'ColorScheme' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'ColorScheme',
              ( ['in'], POINTER(ColorScheme), 'ColorScheme' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Background' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(2008)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'TextStyles',
              ( ['out', 'retval'], POINTER(POINTER(TextStyles)), 'TextStyles' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'Hyperlinks' )),
    COMMETHOD([dispid(2013), 'hidden', 'propget'], HRESULT, 'Scripts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Scripts)), 'Scripts' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Design',
              ( ['out', 'retval'], POINTER(POINTER(Design)), 'Design' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'TimeLine',
              ( ['out', 'retval'], POINTER(POINTER(TimeLine)), 'TimeLine' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'SlideShowTransition',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowTransition)), 'SlideShowTransition' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'CustomLayouts',
              ( ['out', 'retval'], POINTER(POINTER(CustomLayouts)), 'CustomLayouts' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'Theme',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.OfficeTheme)), 'Theme' )),
    COMMETHOD([dispid(2019)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'themeName' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'BackgroundStyle' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'BackgroundStyle' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'CustomerData',
              ( ['out', 'retval'], POINTER(POINTER(CustomerData)), 'CustomerData' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Guides',
              ( ['out', 'retval'], POINTER(POINTER(Guides)), 'Guides' )),
]
################################################################
## code template for _Master implementation
##class _Master_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return Shapes
##
##    @property
##    def HeadersFooters(self):
##        '-no docstring-'
##        #return HeadersFooters
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorScheme
##    def _set(self, ColorScheme):
##        '-no docstring-'
##    ColorScheme = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Background(self):
##        '-no docstring-'
##        #return Background
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    @property
##    def TextStyles(self):
##        '-no docstring-'
##        #return TextStyles
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return Hyperlinks
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return Scripts
##
##    @property
##    def Design(self):
##        '-no docstring-'
##        #return Design
##
##    @property
##    def TimeLine(self):
##        '-no docstring-'
##        #return TimeLine
##
##    @property
##    def SlideShowTransition(self):
##        '-no docstring-'
##        #return SlideShowTransition
##
##    @property
##    def CustomLayouts(self):
##        '-no docstring-'
##        #return CustomLayouts
##
##    @property
##    def Theme(self):
##        '-no docstring-'
##        #return Theme
##
##    def ApplyTheme(self, themeName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BackgroundStyle
##    def _set(self, BackgroundStyle):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomerData(self):
##        '-no docstring-'
##        #return CustomerData
##
##    @property
##    def Guides(self):
##        '-no docstring-'
##        #return Guides
##

ConnectorFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'BeginConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(11)], HRESULT, 'BeginDisconnect'),
    COMMETHOD([dispid(12)], HRESULT, 'EndConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(13)], HRESULT, 'EndDisconnect'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BeginConnected',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'BeginConnected' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginConnectedShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'BeginConnectedShape' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginConnectionSite',
              ( ['out', 'retval'], POINTER(c_int), 'BeginConnectionSite' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'EndConnected',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'EndConnected' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'EndConnectedShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'EndConnectedShape' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndConnectionSite',
              ( ['out', 'retval'], POINTER(c_int), 'EndConnectionSite' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType), 'Type' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'Type' )),
]
################################################################
## code template for ConnectorFormat implementation
##class ConnectorFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def BeginConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##
##    def BeginDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def EndConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##
##    def EndDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BeginConnected(self):
##        '-no docstring-'
##        #return BeginConnected
##
##    @property
##    def BeginConnectedShape(self):
##        '-no docstring-'
##        #return BeginConnectedShape
##
##    @property
##    def BeginConnectionSite(self):
##        '-no docstring-'
##        #return BeginConnectionSite
##
##    @property
##    def EndConnected(self):
##        '-no docstring-'
##        #return EndConnected
##
##    @property
##    def EndConnectedShape(self):
##        '-no docstring-'
##        #return EndConnectedShape
##
##    @property
##    def EndConnectionSite(self):
##        '-no docstring-'
##        #return EndConnectionSite
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##

class Column(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C5-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Columns._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], c_int, 'BeforeColumn', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'Add' )),
]
################################################################
## code template for Columns implementation
##class Columns_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, BeforeColumn):
##        '-no docstring-'
##        #return Add
##

FillFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'Background'),
    COMMETHOD([dispid(11)], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(12)], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(14)], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(15)], HRESULT, 'Solid'),
    COMMETHOD([dispid(16)], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(17)], HRESULT, 'UserPicture',
              ( ['in'], BSTR, 'PictureFile' )),
    COMMETHOD([dispid(18)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'GradientColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientColorType), 'GradientColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'GradientDegree',
              ( ['out', 'retval'], POINTER(c_float), 'GradientDegree' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'GradientStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle), 'GradientStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'GradientVariant',
              ( ['out', 'retval'], POINTER(c_int), 'GradientVariant' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetGradientType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType), 'PresetGradientType' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTexture',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture), 'PresetTexture' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'TextureName',
              ( ['out', 'retval'], POINTER(BSTR), 'TextureName' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'TextureType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureType), 'TextureType' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFillType), 'Type' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'GradientStops',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.GradientStops)), 'GradientStops' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'TextureOffsetX',
              ( ['out', 'retval'], POINTER(c_float), 'TextureOffsetX' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'TextureOffsetX',
              ( ['in'], c_float, 'TextureOffsetX' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'TextureOffsetY',
              ( ['out', 'retval'], POINTER(c_float), 'TextureOffsetY' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'TextureOffsetY',
              ( ['in'], c_float, 'TextureOffsetY' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'TextureAlignment',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureAlignment), 'TextureAlignment' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'TextureAlignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureAlignment, 'TextureAlignment' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'TextureHorizontalScale',
              ( ['out', 'retval'], POINTER(c_float), 'HorizontalScale' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'TextureHorizontalScale',
              ( ['in'], c_float, 'HorizontalScale' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'TextureVerticalScale',
              ( ['out', 'retval'], POINTER(c_float), 'VerticalScale' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'TextureVerticalScale',
              ( ['in'], c_float, 'VerticalScale' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextureTile',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'TextureTile' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'TextureTile',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'TextureTile' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotateWithObject',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RotateWithObject' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotateWithObject',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RotateWithObject' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'PictureEffects',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.PictureEffects)), 'PictureEffects' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'GradientAngle',
              ( ['out', 'retval'], POINTER(c_float), 'GradientAngle' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'GradientAngle',
              ( ['in'], c_float, 'GradientAngle' )),
]
################################################################
## code template for FillFormat implementation
##class FillFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Background(self):
##        '-no docstring-'
##        #return 
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    def UserPicture(self, PictureFile):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return GradientColorType
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return GradientDegree
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return GradientStyle
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return GradientVariant
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return Pattern
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return PresetGradientType
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return PresetTexture
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return TextureName
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return TextureType
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def GradientStops(self):
##        '-no docstring-'
##        #return GradientStops
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetX
##    def _set(self, TextureOffsetX):
##        '-no docstring-'
##    TextureOffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetY
##    def _set(self, TextureOffsetY):
##        '-no docstring-'
##    TextureOffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureAlignment
##    def _set(self, TextureAlignment):
##        '-no docstring-'
##    TextureAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalScale
##    def _set(self, HorizontalScale):
##        '-no docstring-'
##    TextureHorizontalScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalScale
##    def _set(self, VerticalScale):
##        '-no docstring-'
##    TextureVerticalScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureTile
##    def _set(self, TextureTile):
##        '-no docstring-'
##    TextureTile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithObject
##    def _set(self, RotateWithObject):
##        '-no docstring-'
##    RotateWithObject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureEffects(self):
##        '-no docstring-'
##        #return PictureEffects
##
##    def _get(self):
##        '-no docstring-'
##        #return GradientAngle
##    def _set(self, GradientAngle):
##        '-no docstring-'
##    GradientAngle = property(_get, _set, doc = _set.__doc__)
##

Rows._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], c_int, 'BeforeRow', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'Add' )),
]
################################################################
## code template for Rows implementation
##class Rows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, BeforeRow):
##        '-no docstring-'
##        #return Add
##

ColorScheme._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Colors',
              ( ['in'], PpColorSchemeIndex, 'SchemeColor' ),
              ( ['out', 'retval'], POINTER(POINTER(RGBColor)), 'Colors' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Delete'),
]
################################################################
## code template for ColorScheme implementation
##class ColorScheme_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Colors(self, SchemeColor):
##        '-no docstring-'
##        #return Colors
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

FreeformBuilder._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNodes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(11)], HRESULT, 'ConvertToShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Freeform' )),
]
################################################################
## code template for FreeformBuilder implementation
##class FreeformBuilder_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def AddNodes(self, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##
##    def ConvertToShape(self):
##        '-no docstring-'
##        #return Freeform
##

DiagramNodes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'ppdn' )),
    COMMETHOD([dispid(10)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'iDiagramNodes' )),
]
################################################################
## code template for DiagramNodes implementation
##class DiagramNodes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppdn
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return iDiagramNodes
##

class OLEControl(CoClass):
    _reg_clsid_ = GUID('{91493446-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
class OCXExtender(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934C0-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
OLEControl._com_interfaces_ = [OCXExtender]
OLEControl._outgoing_interfaces_ = [OCXExtenderEvents]

class MasterEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D2-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
MasterEvents._methods_ = [
]
################################################################
## code template for MasterEvents implementation
##class MasterEvents_Impl(object):


# values for enumeration 'XlEndStyleCap'
xlCap = 1
xlNoCap = 2
XlEndStyleCap = c_int # enum
ErrorBars._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1124), 'propget'], HRESULT, 'EndStyle',
              ( ['out', 'retval'], POINTER(XlEndStyleCap), 'RHS' )),
    COMMETHOD([dispid(1124), 'propput'], HRESULT, 'EndStyle',
              ( ['in'], XlEndStyleCap, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2004)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for ErrorBars implementation
##class ErrorBars_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EndStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

class Axis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A53-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AxisTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A54-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Axis._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'AxisBetweenCategories',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'AxisBetweenCategories',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'AxisTitle',
              ( ['out', 'retval'], POINTER(POINTER(AxisTitle)), 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'CategoryNames',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'CategoryNames',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Crosses',
              ( ['out', 'retval'], POINTER(XlAxisCrosses), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Crosses',
              ( ['in'], XlAxisCrosses, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'CrossesAt',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'CrossesAt',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'HasMajorGridlines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'HasMajorGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'HasMinorGridlines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'HasMinorGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'HasTitle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'HasTitle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'MajorGridlines',
              ( ['out', 'retval'], POINTER(POINTER(Gridlines)), 'RHS' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'MajorTickMark',
              ( ['out', 'retval'], POINTER(XlTickMark), 'RHS' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'MajorTickMark',
              ( ['in'], XlTickMark, 'RHS' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'MajorUnit',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'MajorUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'LogBase',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'LogBase',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2015), 'propput'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'MajorUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'MajorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'MaximumScale',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2017), 'propput'], HRESULT, 'MaximumScale',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'MaximumScaleIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2018), 'propput'], HRESULT, 'MaximumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'MinimumScale',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2019), 'propput'], HRESULT, 'MinimumScale',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'MinimumScaleIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2020), 'propput'], HRESULT, 'MinimumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'MinorGridlines',
              ( ['out', 'retval'], POINTER(POINTER(Gridlines)), 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'MinorTickMark',
              ( ['out', 'retval'], POINTER(XlTickMark), 'RHS' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'MinorTickMark',
              ( ['in'], XlTickMark, 'RHS' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'MinorUnit',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'MinorUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'MinorUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'MinorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'ReversePlotOrder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'ReversePlotOrder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'ScaleType',
              ( ['out', 'retval'], POINTER(XlScaleType), 'RHS' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'ScaleType',
              ( ['in'], XlScaleType, 'RHS' )),
    COMMETHOD([dispid(2027)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'TickLabelPosition',
              ( ['out', 'retval'], POINTER(XlTickLabelPosition), 'RHS' )),
    COMMETHOD([dispid(2028), 'propput'], HRESULT, 'TickLabelPosition',
              ( ['in'], XlTickLabelPosition, 'RHS' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'TickLabels',
              ( ['out', 'retval'], POINTER(POINTER(TickLabels)), 'RHS' )),
    COMMETHOD([dispid(2030), 'propget'], HRESULT, 'TickLabelSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2030), 'propput'], HRESULT, 'TickLabelSpacing',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'TickMarkSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2031), 'propput'], HRESULT, 'TickMarkSpacing',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2032), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(XlAxisType), 'RHS' )),
    COMMETHOD([dispid(2032), 'propput'], HRESULT, 'Type',
              ( ['in'], XlAxisType, 'RHS' )),
    COMMETHOD([dispid(2033), 'propget'], HRESULT, 'BaseUnit',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD([dispid(2033), 'propput'], HRESULT, 'BaseUnit',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'BaseUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2034), 'propput'], HRESULT, 'BaseUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2035), 'propget'], HRESULT, 'MajorUnitScale',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD([dispid(2035), 'propput'], HRESULT, 'MajorUnitScale',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'MinorUnitScale',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD([dispid(2036), 'propput'], HRESULT, 'MinorUnitScale',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD([dispid(2037), 'propget'], HRESULT, 'CategoryType',
              ( ['out', 'retval'], POINTER(XlCategoryType), 'RHS' )),
    COMMETHOD([dispid(2037), 'propput'], HRESULT, 'CategoryType',
              ( ['in'], XlCategoryType, 'RHS' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2039), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2040), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2041), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2042), 'propget'], HRESULT, 'DisplayUnit',
              ( ['out', 'retval'], POINTER(XlDisplayUnit), 'RHS' )),
    COMMETHOD([dispid(2042), 'propput'], HRESULT, 'DisplayUnit',
              ( ['in'], XlDisplayUnit, 'RHS' )),
    COMMETHOD([dispid(2043), 'propget'], HRESULT, 'DisplayUnitCustom',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2043), 'propput'], HRESULT, 'DisplayUnitCustom',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2044), 'propget'], HRESULT, 'HasDisplayUnitLabel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2044), 'propput'], HRESULT, 'HasDisplayUnitLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2045), 'propget'], HRESULT, 'DisplayUnitLabel',
              ( ['out', 'retval'], POINTER(POINTER(DisplayUnitLabel)), 'RHS' )),
    COMMETHOD([dispid(2046), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(2047), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2048), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2049), 'propget'], HRESULT, 'CategorySortOrder',
              ( ['out', 'retval'], POINTER(XlCategorySortOrder), 'RHS' )),
    COMMETHOD([dispid(2049), 'propput'], HRESULT, 'CategorySortOrder',
              ( ['in'], XlCategorySortOrder, 'RHS' )),
    COMMETHOD([dispid(2050)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2051)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for Axis implementation
##class Axis_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisBetweenCategories = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AxisGroup(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AxisTitle(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Crosses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CrossesAt = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasMajorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasMinorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MajorGridlines(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LogBase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelSpacingIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaximumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaximumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinimumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinimumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MinorGridlines(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReversePlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScaleType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TickLabels(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickMarkSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayUnitCustom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDisplayUnitLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DisplayUnitLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategorySortOrder = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##

PrintRanges._methods_ = [
    COMMETHOD([dispid(2001)], HRESULT, 'Add',
              ( ['in'], c_int, 'Start' ),
              ( ['in'], c_int, 'End' ),
              ( ['out', 'retval'], POINTER(POINTER(PrintRange)), 'Add' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2003)], HRESULT, 'ClearAll'),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(PrintRange)), 'Item' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
]
################################################################
## code template for PrintRanges implementation
##class PrintRanges_Impl(object):
##    def Add(self, Start, End):
##        '-no docstring-'
##        #return Add
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def ClearAll(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##

class Points(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A74-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Points._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Point)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Point)), 'RHS' )),
]
################################################################
## code template for Points implementation
##class Points_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

Column._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(CellRange)), 'Cells' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Select'),
    COMMETHOD([dispid(2005)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
]
################################################################
## code template for Column implementation
##class Column_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return Cells
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##

class Master(CoClass):
    _reg_clsid_ = GUID('{91493447-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
Master._com_interfaces_ = [_Master]
Master._outgoing_interfaces_ = [MasterEvents]

class Axes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A52-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Axes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(Axis)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(0), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(Axis)), 'RHS' )),
]
################################################################
## code template for Axes implementation
##class Axes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Item(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##

class ChartGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{92D41A5E-F07E-4CA4-AF6F-BEF486AA4E6F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartGroups._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for ChartGroups implementation
##class ChartGroups_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

Sequence._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'AddEffect',
              ( ['in'], POINTER(Shape), 'Shape' ),
              ( ['in'], MsoAnimEffect, 'effectId' ),
              ( ['in', 'optional'], MsoAnimateByLevel, 'Level', 0 ),
              ( ['in', 'optional'], MsoAnimTriggerType, 'trigger', 1 ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'Effect' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Clone',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'Clone' )),
    COMMETHOD([dispid(2005)], HRESULT, 'FindFirstAnimationFor',
              ( ['in'], POINTER(Shape), 'Shape' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'FindFirstAnimationFor' )),
    COMMETHOD([dispid(2006)], HRESULT, 'FindFirstAnimationForClick',
              ( ['in'], c_int, 'click' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'FindFirstAnimationForClick' )),
    COMMETHOD([dispid(2007)], HRESULT, 'ConvertToBuildLevel',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in'], MsoAnimateByLevel, 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'ConvertToBuildLevel' )),
    COMMETHOD([dispid(2008)], HRESULT, 'ConvertToAfterEffect',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in'], MsoAnimAfterEffect, 'After' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRGBType, 'DimColor', 0 ),
              ( ['in', 'optional'], PpColorSchemeIndex, 'DimSchemeColor', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'ConvertToAfterEffect' )),
    COMMETHOD([dispid(2009)], HRESULT, 'ConvertToAnimateBackground',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AnimateBackground' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'ConvertToAnimateBackground' )),
    COMMETHOD([dispid(2010)], HRESULT, 'ConvertToAnimateInReverse',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'animateInReverse' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'ConvertToAnimateInReverse' )),
    COMMETHOD([dispid(2011)], HRESULT, 'ConvertToTextUnitEffect',
              ( ['in'], POINTER(Effect), 'Effect' ),
              ( ['in'], MsoAnimTextUnitEffect, 'unitEffect' ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'ConvertToTextUnitEffect' )),
    COMMETHOD([dispid(2012)], HRESULT, 'AddTriggerEffect',
              ( ['in'], POINTER(Shape), 'pShape' ),
              ( ['in'], MsoAnimEffect, 'effectId' ),
              ( ['in'], MsoAnimTriggerType, 'trigger' ),
              ( ['in'], POINTER(Shape), 'pTriggerShape' ),
              ( ['in', 'optional'], BSTR, 'bookmark', '' ),
              ( ['in', 'optional'], MsoAnimateByLevel, 'Level', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(Effect)), 'TriggerEffect' )),
]
################################################################
## code template for Sequence implementation
##class Sequence_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def AddEffect(self, Shape, effectId, Level, trigger, Index):
##        '-no docstring-'
##        #return Effect
##
##    def Clone(self, Effect, Index):
##        '-no docstring-'
##        #return Clone
##
##    def FindFirstAnimationFor(self, Shape):
##        '-no docstring-'
##        #return FindFirstAnimationFor
##
##    def FindFirstAnimationForClick(self, click):
##        '-no docstring-'
##        #return FindFirstAnimationForClick
##
##    def ConvertToBuildLevel(self, Effect, Level):
##        '-no docstring-'
##        #return ConvertToBuildLevel
##
##    def ConvertToAfterEffect(self, Effect, After, DimColor, DimSchemeColor):
##        '-no docstring-'
##        #return ConvertToAfterEffect
##
##    def ConvertToAnimateBackground(self, Effect, AnimateBackground):
##        '-no docstring-'
##        #return ConvertToAnimateBackground
##
##    def ConvertToAnimateInReverse(self, Effect, animateInReverse):
##        '-no docstring-'
##        #return ConvertToAnimateInReverse
##
##    def ConvertToTextUnitEffect(self, Effect, unitEffect):
##        '-no docstring-'
##        #return ConvertToTextUnitEffect
##
##    def AddTriggerEffect(self, pShape, effectId, trigger, pTriggerShape, bookmark, Level):
##        '-no docstring-'
##        #return TriggerEffect
##

Sequences._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Sequence)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['in', 'optional'], c_int, 'Index', -1 ),
              ( ['out', 'retval'], POINTER(POINTER(Sequence)), 'Add' )),
]
################################################################
## code template for Sequences implementation
##class Sequences_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def Add(self, Index):
##        '-no docstring-'
##        #return Add
##

Adjustments._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(c_float), 'Val' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'Val' )),
]
################################################################
## code template for Adjustments implementation
##class Adjustments_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return Val
##    def _set(self, Index, Val):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##

DiagramNode._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'NewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'MoveNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos' )),
    COMMETHOD([dispid(13)], HRESULT, 'ReplaceNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' )),
    COMMETHOD([dispid(14)], HRESULT, 'SwapNode',
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'SwapChildren', True )),
    COMMETHOD([dispid(15)], HRESULT, 'CloneNode',
              ( ['in'], VARIANT_BOOL, 'CopyChildren' ),
              ( ['in'], POINTER(DiagramNode), 'TargetNode' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'Node' )),
    COMMETHOD([dispid(16)], HRESULT, 'TransferChildren',
              ( ['in'], POINTER(DiagramNode), 'ReceivingNode' )),
    COMMETHOD([dispid(17)], HRESULT, 'NextNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'NextNode' )),
    COMMETHOD([dispid(18)], HRESULT, 'PrevNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'PrevNode' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Children',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNodeChildren)), 'Children' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Root',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'Root' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(Diagram)), 'Diagram' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Layout',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrgChartLayoutType), 'Type' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Layout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrgChartLayoutType, 'Type' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'TextShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
]
################################################################
## code template for DiagramNode implementation
##class DiagramNode_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    def AddNode(self, Pos, NodeType):
##        '-no docstring-'
##        #return NewNode
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def MoveNode(self, TargetNode, Pos):
##        '-no docstring-'
##        #return 
##
##    def ReplaceNode(self, TargetNode):
##        '-no docstring-'
##        #return 
##
##    def SwapNode(self, TargetNode, SwapChildren):
##        '-no docstring-'
##        #return 
##
##    def CloneNode(self, CopyChildren, TargetNode, Pos):
##        '-no docstring-'
##        #return Node
##
##    def TransferChildren(self, ReceivingNode):
##        '-no docstring-'
##        #return 
##
##    def NextNode(self):
##        '-no docstring-'
##        #return NextNode
##
##    def PrevNode(self):
##        '-no docstring-'
##        #return PrevNode
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Children(self):
##        '-no docstring-'
##        #return Children
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Shape
##
##    @property
##    def Root(self):
##        '-no docstring-'
##        #return Root
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return Diagram
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextShape(self):
##        '-no docstring-'
##        #return Shape
##

PrintRange._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Start',
              ( ['out', 'retval'], POINTER(c_int), 'Start' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'End',
              ( ['out', 'retval'], POINTER(c_int), 'End' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Delete'),
]
################################################################
## code template for PrintRange implementation
##class PrintRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Start(self):
##        '-no docstring-'
##        #return Start
##
##    @property
##    def End(self):
##        '-no docstring-'
##        #return End
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'PpCheckInVersionType'
ppCheckInMinorVersion = 0
ppCheckInMajorVersion = 1
ppCheckInOverwriteVersion = 2
PpCheckInVersionType = c_int # enum
MotionEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ByX',
              ( ['out', 'retval'], POINTER(c_float), 'ByX' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ByX',
              ( ['in'], c_float, 'ByX' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ByY',
              ( ['out', 'retval'], POINTER(c_float), 'ByY' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ByY',
              ( ['in'], c_float, 'ByY' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'FromX',
              ( ['out', 'retval'], POINTER(c_float), 'FromX' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'FromX',
              ( ['in'], c_float, 'FromX' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'FromY',
              ( ['out', 'retval'], POINTER(c_float), 'FromY' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'FromY',
              ( ['in'], c_float, 'FromY' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'ToX',
              ( ['out', 'retval'], POINTER(c_float), 'ToX' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'ToX',
              ( ['in'], c_float, 'ToX' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'ToY',
              ( ['out', 'retval'], POINTER(c_float), 'ToY' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'ToY',
              ( ['in'], c_float, 'ToY' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'Path' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Path',
              ( ['in'], BSTR, 'Path' )),
]
################################################################
## code template for MotionEffect implementation
##class MotionEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return ByX
##    def _set(self, ByX):
##        '-no docstring-'
##    ByX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ByY
##    def _set(self, ByY):
##        '-no docstring-'
##    ByY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FromX
##    def _set(self, FromX):
##        '-no docstring-'
##    FromX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FromY
##    def _set(self, FromY):
##        '-no docstring-'
##    FromY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ToX
##    def _set(self, ToX):
##        '-no docstring-'
##    ToX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ToY
##    def _set(self, ToY):
##        '-no docstring-'
##    ToY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Path
##    def _set(self, Path):
##        '-no docstring-'
##    Path = property(_get, _set, doc = _set.__doc__)
##

class PowerRex(CoClass):
    _reg_clsid_ = GUID('{91493448-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{91493440-5A91-11CF-8700-00AA0060263B}', 2, 12)
PowerRex._com_interfaces_ = [_PowerRex]

ChartArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(113)], HRESULT, 'ClearContents',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppFill' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'pvar' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'pvar' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'ppChartFormat' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
]
################################################################
## code template for ChartArea implementation
##class ChartArea_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    def Clear(self):
##        '-no docstring-'
##        #return pvar
##
##    def ClearContents(self):
##        '-no docstring-'
##        #return pvar
##
##    def Copy(self):
##        '-no docstring-'
##        #return pvar
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return pvar
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pvar
##    def _set(self, pvar):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return ppChartFormat
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##

OCXExtender._methods_ = [
    COMMETHOD([dispid(-2147418105), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Visible' )),
    COMMETHOD([dispid(-2147418105), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'Visible' )),
    COMMETHOD([dispid(-2147418109), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(-2147418109), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(-2147418108), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(-2147418108), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(-2147418107), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(-2147418107), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(-2147418106), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(-2147418106), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(-2147417882), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['out', 'retval'], POINTER(c_int), 'ZOrderPosition' )),
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(-2147417881), 'hidden', 'propget'], HRESULT, 'AltHTML',
              ( ['out', 'retval'], POINTER(BSTR), 'AltHTML' )),
    COMMETHOD([dispid(-2147417881), 'hidden', 'propput'], HRESULT, 'AltHTML',
              ( ['in'], BSTR, 'AltHTML' )),
]
################################################################
## code template for OCXExtender implementation
##class OCXExtender_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return ZOrderPosition
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AltHTML
##    def _set(self, AltHTML):
##        '-no docstring-'
##    AltHTML = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlChartPicturePlacement'
xlSides = 1
xlEnd = 2
xlEndSides = 3
xlFront = 4
xlFrontSides = 5
xlFrontEnd = 6
xlAllFaces = 7
XlChartPicturePlacement = c_int # enum
AxisTitle._methods_ = [
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'RHS' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'ppfont' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2011), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2012), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'ppinterior' )),
    COMMETHOD([dispid(2013), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'ppinterior' )),
    COMMETHOD([dispid(2014)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2015), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'ppborder' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(2018)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2020), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2021), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'Height' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'Width' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(2028)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'pValue' )),
    COMMETHOD([dispid(2029)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'Id' ),
              ( ['in'], VARIANT, 'Value' )),
]
################################################################
## code template for AxisTitle implementation
##class AxisTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppfont
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return ppinterior
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppinterior
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return ppborder
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return Height
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return Width
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def GetProperty(self, Id):
##        '-no docstring-'
##        #return pValue
##
##    def SetProperty(self, Id, Value):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoAnimEffectAfter'
msoAnimEffectAfterFreeze = 1
msoAnimEffectAfterRemove = 2
msoAnimEffectAfterHold = 3
msoAnimEffectAfterTransition = 4
MsoAnimEffectAfter = c_int # enum
ColorEffect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'By',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'By' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'From',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'From' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'To',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'To' )),
]
################################################################
## code template for ColorEffect implementation
##class ColorEffect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def By(self):
##        '-no docstring-'
##        #return By
##
##    @property
##    def From(self):
##        '-no docstring-'
##        #return From
##
##    @property
##    def To(self):
##        '-no docstring-'
##        #return To
##

TextEffectFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'ToggleVerticalText'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextEffectAlignment), 'Alignment' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Alignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextEffectAlignment, 'Alignment' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'FontBold',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FontBold' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'FontBold',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontBold' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'FontItalic',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'FontItalic' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'FontItalic',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontItalic' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FontName',
              ( ['out', 'retval'], POINTER(BSTR), 'FontName' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'FontName' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FontSize',
              ( ['out', 'retval'], POINTER(c_float), 'FontSize' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FontSize',
              ( ['in'], c_float, 'FontSize' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'KernedPairs',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'KernedPairs' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'KernedPairs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'KernedPairs' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'NormalizedHeight',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'NormalizedHeight' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'NormalizedHeight',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'NormalizedHeight' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetShape',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffectShape), 'PresetShape' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffectShape, 'PresetShape' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTextEffect',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect), 'Preset' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'PresetTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'Preset' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotatedChars',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RotatedChars' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotatedChars',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RotatedChars' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Tracking',
              ( ['out', 'retval'], POINTER(c_float), 'Tracking' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Tracking',
              ( ['in'], c_float, 'Tracking' )),
]
################################################################
## code template for TextEffectFormat implementation
##class TextEffectFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def ToggleVerticalText(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontBold
##    def _set(self, FontBold):
##        '-no docstring-'
##    FontBold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontItalic
##    def _set(self, FontItalic):
##        '-no docstring-'
##    FontItalic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontName
##    def _set(self, FontName):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontSize
##    def _set(self, FontSize):
##        '-no docstring-'
##    FontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return KernedPairs
##    def _set(self, KernedPairs):
##        '-no docstring-'
##    KernedPairs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NormalizedHeight
##    def _set(self, NormalizedHeight):
##        '-no docstring-'
##    NormalizedHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetShape
##    def _set(self, PresetShape):
##        '-no docstring-'
##    PresetShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Preset
##    def _set(self, Preset):
##        '-no docstring-'
##    PresetTextEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotatedChars
##    def _set(self, RotatedChars):
##        '-no docstring-'
##    RotatedChars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Tracking
##    def _set(self, Tracking):
##        '-no docstring-'
##    Tracking = property(_get, _set, doc = _set.__doc__)
##

CellRange._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'Item' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'Borders' )),
]
################################################################
## code template for CellRange implementation
##class CellRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return Borders
##

Effect._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'Shape',
              ( ['in'], POINTER(Shape), 'Shape' )),
    COMMETHOD([dispid(2004)], HRESULT, 'MoveTo',
              ( ['in'], c_int, 'toPos' )),
    COMMETHOD([dispid(2005)], HRESULT, 'MoveBefore',
              ( ['in'], POINTER(Effect), 'Effect' )),
    COMMETHOD([dispid(2006)], HRESULT, 'MoveAfter',
              ( ['in'], POINTER(Effect), 'Effect' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'Index' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Timing',
              ( ['out', 'retval'], POINTER(POINTER(Timing)), 'Timing' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'EffectType',
              ( ['out', 'retval'], POINTER(MsoAnimEffect), 'EffectType' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'EffectType',
              ( ['in'], MsoAnimEffect, 'EffectType' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'EffectParameters',
              ( ['out', 'retval'], POINTER(POINTER(EffectParameters)), 'EffectParameters' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'TextRangeStart',
              ( ['out', 'retval'], POINTER(c_int), 'TextRangeStart' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'TextRangeLength',
              ( ['out', 'retval'], POINTER(c_int), 'TextRangeLength' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Paragraph',
              ( ['out', 'retval'], POINTER(c_int), 'Paragraph' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'Paragraph',
              ( ['in'], c_int, 'Paragraph' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'DisplayName',
              ( ['out', 'retval'], POINTER(BSTR), 'DisplayName' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'Exit',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Exit' )),
    COMMETHOD([dispid(2016), 'propput'], HRESULT, 'Exit',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Exit' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Behaviors',
              ( ['out', 'retval'], POINTER(POINTER(AnimationBehaviors)), 'Behaviors' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'EffectInformation',
              ( ['out', 'retval'], POINTER(POINTER(EffectInformation)), 'EffectInformation' )),
]
################################################################
## code template for Effect implementation
##class Effect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Shape
##    def _set(self, Shape):
##        '-no docstring-'
##    Shape = property(_get, _set, doc = _set.__doc__)
##
##    def MoveTo(self, toPos):
##        '-no docstring-'
##        #return 
##
##    def MoveBefore(self, Effect):
##        '-no docstring-'
##        #return 
##
##    def MoveAfter(self, Effect):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return Index
##
##    @property
##    def Timing(self):
##        '-no docstring-'
##        #return Timing
##
##    def _get(self):
##        '-no docstring-'
##        #return EffectType
##    def _set(self, EffectType):
##        '-no docstring-'
##    EffectType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EffectParameters(self):
##        '-no docstring-'
##        #return EffectParameters
##
##    @property
##    def TextRangeStart(self):
##        '-no docstring-'
##        #return TextRangeStart
##
##    @property
##    def TextRangeLength(self):
##        '-no docstring-'
##        #return TextRangeLength
##
##    def _get(self):
##        '-no docstring-'
##        #return Paragraph
##    def _set(self, Paragraph):
##        '-no docstring-'
##    Paragraph = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DisplayName(self):
##        '-no docstring-'
##        #return DisplayName
##
##    def _get(self):
##        '-no docstring-'
##        #return Exit
##    def _set(self, Exit):
##        '-no docstring-'
##    Exit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Behaviors(self):
##        '-no docstring-'
##        #return Behaviors
##
##    @property
##    def EffectInformation(self):
##        '-no docstring-'
##        #return EffectInformation
##

class PublishObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{914934D0-5A91-11CF-8700-00AA0060263B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PublishObjects._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(PublishObject)), 'Item' )),
]
################################################################
## code template for PublishObjects implementation
##class PublishObjects_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

ProtectedViewWindow._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Presentation',
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Presentation' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Active' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(PpWindowState), 'WindowState' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'WindowState',
              ( ['in'], PpWindowState, 'WindowState' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'Caption' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'SourcePath',
              ( ['out', 'retval'], POINTER(BSTR), 'SourcePath' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'SourceName',
              ( ['out', 'retval'], POINTER(BSTR), 'SourceName' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2011), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(2012)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2013)], HRESULT, 'Close'),
    COMMETHOD([dispid(2014)], HRESULT, 'Edit',
              ( ['in', 'optional'], BSTR, 'ModifyPassword', '' ),
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'Edit' )),
    COMMETHOD([dispid(2015), 'restricted', 'propget'], HRESULT, 'HWND',
              ( ['out', 'retval'], POINTER(c_int), 'HWND' )),
]
################################################################
## code template for ProtectedViewWindow implementation
##class ProtectedViewWindow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Presentation(self):
##        '-no docstring-'
##        #return Presentation
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return Active
##
##    def _get(self):
##        '-no docstring-'
##        #return WindowState
##    def _set(self, WindowState):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Caption(self):
##        '-no docstring-'
##        #return Caption
##
##    @property
##    def SourcePath(self):
##        '-no docstring-'
##        #return SourcePath
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return SourceName
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def Edit(self, ModifyPassword):
##        '-no docstring-'
##        #return Edit
##
##    @property
##    def HWND(self):
##        '-no docstring-'
##        #return HWND
##

TextFrame2._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['out', 'retval'], POINTER(c_float), 'MarginBottom' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'MarginBottom' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['out', 'retval'], POINTER(c_float), 'MarginLeft' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'MarginLeft' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['out', 'retval'], POINTER(c_float), 'MarginRight' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'MarginRight' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['out', 'retval'], POINTER(c_float), 'MarginTop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'MarginTop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation), 'Orientation' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'HorizontalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor), 'HorizontalAnchor' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'HorizontalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor, 'HorizontalAnchor' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'VerticalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor), 'VerticalAnchor' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'VerticalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor, 'VerticalAnchor' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PathFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPathFormat), 'PathFormat' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PathFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPathFormat, 'PathFormat' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'WarpFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoWarpFormat), 'WarpFormat' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'WarpFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoWarpFormat, 'WarpFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'WordArtFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect), 'WordArtFormat' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'WordArtFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'WordArtFormat' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WordWrap' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'AutoSize',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoSize), 'AutoSize' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoSize, 'AutoSize' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'HasText',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'pHasText' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'TextRange',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextRange2)), 'Range' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Column',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextColumn2)), 'Column' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Ruler',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Ruler2)), 'Ruler' )),
    COMMETHOD([dispid(117)], HRESULT, 'DeleteText'),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'NoTextRotation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'NoTextRotation' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'NoTextRotation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'NoTextRotation' )),
]
################################################################
## code template for TextFrame2 implementation
##class TextFrame2_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginBottom
##    def _set(self, MarginBottom):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginLeft
##    def _set(self, MarginLeft):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginRight
##    def _set(self, MarginRight):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginTop
##    def _set(self, MarginTop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Orientation
##    def _set(self, Orientation):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalAnchor
##    def _set(self, HorizontalAnchor):
##        '-no docstring-'
##    HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalAnchor
##    def _set(self, VerticalAnchor):
##        '-no docstring-'
##    VerticalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PathFormat
##    def _set(self, PathFormat):
##        '-no docstring-'
##    PathFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WarpFormat
##    def _set(self, WarpFormat):
##        '-no docstring-'
##    WarpFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordArtFormat
##    def _set(self, WordArtFormat):
##        '-no docstring-'
##    WordArtFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoSize
##    def _set(self, AutoSize):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    @property
##    def HasText(self):
##        '-no docstring-'
##        #return pHasText
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return Column
##
##    @property
##    def Ruler(self):
##        '-no docstring-'
##        #return Ruler
##
##    def DeleteText(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return NoTextRotation
##    def _set(self, NoTextRotation):
##        '-no docstring-'
##    NoTextRotation = property(_get, _set, doc = _set.__doc__)
##

CustomerData._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], BSTR, 'Id' ),
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLPart)), 'Item' )),
    COMMETHOD([dispid(2003)], HRESULT, 'Add',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLPart)), 'Add' )),
    COMMETHOD([dispid(2004)], HRESULT, 'Delete',
              ( ['in'], BSTR, 'Id' )),
]
################################################################
## code template for CustomerData implementation
##class CustomerData_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Id):
##        '-no docstring-'
##        #return Item
##
##    def Add(self):
##        '-no docstring-'
##        #return Add
##
##    def Delete(self, Id):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'MsoClickState'
msoClickStateAfterAllAnimations = -2
msoClickStateBeforeAutomaticAnimations = -1
MsoClickState = c_int # enum
WebOptions._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'IncludeNavigation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'IncludeNavigation' )),
    COMMETHOD([dispid(2001), 'propput'], HRESULT, 'IncludeNavigation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'IncludeNavigation' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'FrameColors',
              ( ['out', 'retval'], POINTER(PpFrameColors), 'FrameColors' )),
    COMMETHOD([dispid(2002), 'propput'], HRESULT, 'FrameColors',
              ( ['in'], PpFrameColors, 'FrameColors' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'ResizeGraphics',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ResizeGraphics' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'ResizeGraphics',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ResizeGraphics' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ShowSlideAnimation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowSlideAnimation' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'ShowSlideAnimation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowSlideAnimation' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'OrganizeInFolder' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'OrganizeInFolder' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'UseLongFileNames' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'UseLongFileNames' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'RelyOnVML',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'RelyOnVML' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelyOnVML' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'AllowPNG',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AllowPNG' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AllowPNG' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ScreenSize',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize), 'ScreenSize' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize, 'ScreenSize' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Encoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'Encoding' )),
    COMMETHOD([dispid(2010), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'Encoding' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'FolderSuffix',
              ( ['out', 'retval'], POINTER(BSTR), 'FolderSuffix' )),
    COMMETHOD([dispid(2012)], HRESULT, 'UseDefaultFolderSuffix'),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'TargetBrowser',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser), 'TargetBrowser' )),
    COMMETHOD([dispid(2013), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser, 'TargetBrowser' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'HTMLVersion',
              ( ['out', 'retval'], POINTER(PpHTMLVersion), 'HTMLVersion' )),
    COMMETHOD([dispid(2014), 'propput'], HRESULT, 'HTMLVersion',
              ( ['in'], PpHTMLVersion, 'HTMLVersion' )),
]
################################################################
## code template for WebOptions implementation
##class WebOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return IncludeNavigation
##    def _set(self, IncludeNavigation):
##        '-no docstring-'
##    IncludeNavigation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FrameColors
##    def _set(self, FrameColors):
##        '-no docstring-'
##    FrameColors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ResizeGraphics
##    def _set(self, ResizeGraphics):
##        '-no docstring-'
##    ResizeGraphics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowSlideAnimation
##    def _set(self, ShowSlideAnimation):
##        '-no docstring-'
##    ShowSlideAnimation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OrganizeInFolder
##    def _set(self, OrganizeInFolder):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return UseLongFileNames
##    def _set(self, UseLongFileNames):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RelyOnVML
##    def _set(self, RelyOnVML):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AllowPNG
##    def _set(self, AllowPNG):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ScreenSize
##    def _set(self, ScreenSize):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Encoding
##    def _set(self, Encoding):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return FolderSuffix
##
##    def UseDefaultFolderSuffix(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return TargetBrowser
##    def _set(self, TargetBrowser):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HTMLVersion
##    def _set(self, HTMLVersion):
##        '-no docstring-'
##    HTMLVersion = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'PpAutoSize'
ppAutoSizeMixed = -2
ppAutoSizeNone = 0
ppAutoSizeShapeToFitText = 1
PpAutoSize = c_int # enum
TextFrame._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['out', 'retval'], POINTER(c_float), 'MarginBottom' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'MarginBottom' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['out', 'retval'], POINTER(c_float), 'MarginLeft' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'MarginLeft' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['out', 'retval'], POINTER(c_float), 'MarginRight' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'MarginRight' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['out', 'retval'], POINTER(c_float), 'MarginTop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'MarginTop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation), 'Orientation' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'HasText',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'HasText' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'TextRange',
              ( ['out', 'retval'], POINTER(POINTER(TextRange)), 'TextRange' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'Ruler',
              ( ['out', 'retval'], POINTER(POINTER(Ruler)), 'Ruler' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'HorizontalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor), 'HorizontalAnchor' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'HorizontalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor, 'HorizontalAnchor' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'VerticalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor), 'VerticalAnchor' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'VerticalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor, 'VerticalAnchor' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'AutoSize',
              ( ['out', 'retval'], POINTER(PpAutoSize), 'AutoSize' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], PpAutoSize, 'AutoSize' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'WordWrap' )),
    COMMETHOD([dispid(2010)], HRESULT, 'DeleteText'),
]
################################################################
## code template for TextFrame implementation
##class TextFrame_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginBottom
##    def _set(self, MarginBottom):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginLeft
##    def _set(self, MarginLeft):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginRight
##    def _set(self, MarginRight):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginTop
##    def _set(self, MarginTop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Orientation
##    def _set(self, Orientation):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasText(self):
##        '-no docstring-'
##        #return HasText
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return TextRange
##
##    @property
##    def Ruler(self):
##        '-no docstring-'
##        #return Ruler
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalAnchor
##    def _set(self, HorizontalAnchor):
##        '-no docstring-'
##    HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalAnchor
##    def _set(self, VerticalAnchor):
##        '-no docstring-'
##    VerticalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoSize
##    def _set(self, AutoSize):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def DeleteText(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlBackground'
xlBackgroundAutomatic = -4105
xlBackgroundOpaque = 3
xlBackgroundTransparent = 2
XlBackground = c_int # enum
ShapeNodes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeNode)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(12)], HRESULT, 'Insert',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(13)], HRESULT, 'SetEditingType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetPosition',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetSegmentType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' )),
]
################################################################
## code template for ShapeNodes implementation
##class ShapeNodes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, Index, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##
##    def SetEditingType(self, Index, EditingType):
##        '-no docstring-'
##        #return 
##
##    def SetPosition(self, Index, X1, Y1):
##        '-no docstring-'
##        #return 
##
##    def SetSegmentType(self, Index, SegmentType):
##        '-no docstring-'
##        #return 
##

Cell._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Shape' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'Borders' )),
    COMMETHOD([dispid(2005)], HRESULT, 'Merge',
              ( ['in'], POINTER(Cell), 'MergeTo' )),
    COMMETHOD([dispid(2006)], HRESULT, 'Split',
              ( ['in'], c_int, 'NumRows' ),
              ( ['in'], c_int, 'NumColumns' )),
    COMMETHOD([dispid(2007)], HRESULT, 'Select'),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Selected',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'Selected' )),
]
################################################################
## code template for Cell implementation
##class Cell_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Shape
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return Borders
##
##    def Merge(self, MergeTo):
##        '-no docstring-'
##        #return 
##
##    def Split(self, NumRows, NumColumns):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Selected(self):
##        '-no docstring-'
##        #return Selected
##


# values for enumeration 'XlChartGallery'
xlBuiltIn = 21
xlUserDefined = 22
xlAnyGallery = 23
XlChartGallery = c_int # enum
GroupShapes._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'pnShapes' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'Item' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'ppienum' )),
    COMMETHOD([dispid(10)], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'Range' )),
]
################################################################
## code template for GroupShapes implementation
##class GroupShapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pnShapes
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppienum
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return Range
##

CalloutFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppidisp' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'plCreator' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'AutomaticLength'),
    COMMETHOD([dispid(11)], HRESULT, 'CustomDrop',
              ( ['in'], c_float, 'Drop' )),
    COMMETHOD([dispid(12)], HRESULT, 'CustomLength',
              ( ['in'], c_float, 'Length' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetDrop',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutDropType, 'DropType' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Accent',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Accent' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Accent',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Accent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Angle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutAngleType), 'Angle' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Angle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutAngleType, 'Angle' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'AutoAttach',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoAttach' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'AutoAttach',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'AutoAttach' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'AutoLength' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Border' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Border',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Border' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Drop',
              ( ['out', 'retval'], POINTER(c_float), 'Drop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'DropType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutDropType), 'DropType' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Gap',
              ( ['out', 'retval'], POINTER(c_float), 'Gap' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Gap',
              ( ['in'], c_float, 'Gap' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Length',
              ( ['out', 'retval'], POINTER(c_float), 'Length' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType), 'Type' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'Type' )),
]
################################################################
## code template for CalloutFormat implementation
##class CalloutFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return ppidisp
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return plCreator
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def AutomaticLength(self):
##        '-no docstring-'
##        #return 
##
##    def CustomDrop(self, Drop):
##        '-no docstring-'
##        #return 
##
##    def CustomLength(self, Length):
##        '-no docstring-'
##        #return 
##
##    def PresetDrop(self, DropType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Accent
##    def _set(self, Accent):
##        '-no docstring-'
##    Accent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Angle
##    def _set(self, Angle):
##        '-no docstring-'
##    Angle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoAttach
##    def _set(self, AutoAttach):
##        '-no docstring-'
##    AutoAttach = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AutoLength(self):
##        '-no docstring-'
##        #return AutoLength
##
##    def _get(self):
##        '-no docstring-'
##        #return Border
##    def _set(self, Border):
##        '-no docstring-'
##    Border = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Drop(self):
##        '-no docstring-'
##        #return Drop
##
##    @property
##    def DropType(self):
##        '-no docstring-'
##        #return DropType
##
##    def _get(self):
##        '-no docstring-'
##        #return Gap
##    def _set(self, Gap):
##        '-no docstring-'
##    Gap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##

PublishObject._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'HTMLVersion',
              ( ['out', 'retval'], POINTER(PpHTMLVersion), 'HTMLVersion' )),
    COMMETHOD([dispid(2003), 'propput'], HRESULT, 'HTMLVersion',
              ( ['in'], PpHTMLVersion, 'HTMLVersion' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'SourceType',
              ( ['out', 'retval'], POINTER(PpPublishSourceType), 'SourceType' )),
    COMMETHOD([dispid(2004), 'propput'], HRESULT, 'SourceType',
              ( ['in'], PpPublishSourceType, 'SourceType' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'RangeStart',
              ( ['out', 'retval'], POINTER(c_int), 'RangeStart' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'RangeStart',
              ( ['in'], c_int, 'RangeStart' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'RangeEnd',
              ( ['out', 'retval'], POINTER(c_int), 'RangeEnd' )),
    COMMETHOD([dispid(2006), 'propput'], HRESULT, 'RangeEnd',
              ( ['in'], c_int, 'RangeEnd' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'SlideShowName',
              ( ['out', 'retval'], POINTER(BSTR), 'SlideShowName' )),
    COMMETHOD([dispid(2007), 'propput'], HRESULT, 'SlideShowName',
              ( ['in'], BSTR, 'SlideShowName' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'SpeakerNotes',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'SpeakerNotes' )),
    COMMETHOD([dispid(2008), 'propput'], HRESULT, 'SpeakerNotes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'SpeakerNotes' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'FileName',
              ( ['out', 'retval'], POINTER(BSTR), 'FileName' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'FileName',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2010)], HRESULT, 'Publish'),
]
################################################################
## code template for PublishObject implementation
##class PublishObject_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return HTMLVersion
##    def _set(self, HTMLVersion):
##        '-no docstring-'
##    HTMLVersion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SourceType
##    def _set(self, SourceType):
##        '-no docstring-'
##    SourceType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RangeStart
##    def _set(self, RangeStart):
##        '-no docstring-'
##    RangeStart = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RangeEnd
##    def _set(self, RangeEnd):
##        '-no docstring-'
##    RangeEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SlideShowName
##    def _set(self, SlideShowName):
##        '-no docstring-'
##    SlideShowName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SpeakerNotes
##    def _set(self, SpeakerNotes):
##        '-no docstring-'
##    SpeakerNotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FileName
##    def _set(self, FileName):
##        '-no docstring-'
##    FileName = property(_get, _set, doc = _set.__doc__)
##
##    def Publish(self):
##        '-no docstring-'
##        #return 
##

ChartFormat._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'ppFill' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.GlowFormat)), 'ppGlow' )),
    COMMETHOD([dispid(2003), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'ppLine' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppparent' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'ppPictureFormat' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'ppShadow' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SoftEdgeFormat)), 'ppSoftEdge' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame2)), 'ppTextFrame' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'ppThreeD' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'pval' )),
    COMMETHOD([dispid(2010), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2011), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'ppAdjustments' )),
    COMMETHOD([dispid(2012), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'AutoShapeType' )),
    COMMETHOD([dispid(2012), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'AutoShapeType' )),
]
################################################################
## code template for ChartFormat implementation
##class ChartFormat_Impl(object):
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return ppFill
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return ppGlow
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return ppLine
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppparent
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return ppPictureFormat
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return ppShadow
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return ppSoftEdge
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return ppTextFrame
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ppThreeD
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return pval
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return ppAdjustments
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoShapeType
##    def _set(self, AutoShapeType):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##

TextStyles._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], PpTextStyleType, 'Type' ),
              ( ['out', 'retval'], POINTER(POINTER(TextStyle)), 'Item' )),
]
################################################################
## code template for TextStyles implementation
##class TextStyles_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Type):
##        '-no docstring-'
##        #return Item
##

_Application._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Presentations',
              ( ['out', 'retval'], POINTER(POINTER(Presentations)), 'Presentations' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindows)), 'Windows' )),
    COMMETHOD([dispid(2003), 'hidden', 'propget'], HRESULT, 'Dialogs',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'Dialogs' )),
    COMMETHOD([dispid(2004), 'propget'], HRESULT, 'ActiveWindow',
              ( ['out', 'retval'], POINTER(POINTER(DocumentWindow)), 'ActiveWindow' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'ActivePresentation',
              ( ['out', 'retval'], POINTER(POINTER(Presentation)), 'ActivePresentation' )),
    COMMETHOD([dispid(2006), 'propget'], HRESULT, 'SlideShowWindows',
              ( ['out', 'retval'], POINTER(POINTER(SlideShowWindows)), 'SlideShowWindows' )),
    COMMETHOD([dispid(2007), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'CommandBars' )),
    COMMETHOD([dispid(2008), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'Path' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(2009), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'Caption' )),
    COMMETHOD([dispid(2009), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'Caption' )),
    COMMETHOD([dispid(2010), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Assistant)), 'Assistant' )),
    COMMETHOD([dispid(2011), 'hidden', 'propget'], HRESULT, 'FileSearch',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileSearch)), 'FileSearch' )),
    COMMETHOD([dispid(2012), 'hidden', 'propget'], HRESULT, 'FileFind',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IFind)), 'FileFind' )),
    COMMETHOD([dispid(2013), 'propget'], HRESULT, 'Build',
              ( ['out', 'retval'], POINTER(BSTR), 'Build' )),
    COMMETHOD([dispid(2014), 'propget'], HRESULT, 'Version',
              ( ['out', 'retval'], POINTER(BSTR), 'Version' )),
    COMMETHOD([dispid(2015), 'propget'], HRESULT, 'OperatingSystem',
              ( ['out', 'retval'], POINTER(BSTR), 'OperatingSystem' )),
    COMMETHOD([dispid(2016), 'propget'], HRESULT, 'ActivePrinter',
              ( ['out', 'retval'], POINTER(BSTR), 'ActivePrinter' )),
    COMMETHOD([dispid(2017), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'Creator' )),
    COMMETHOD([dispid(2018), 'propget'], HRESULT, 'AddIns',
              ( ['out', 'retval'], POINTER(POINTER(AddIns)), 'AddIns' )),
    COMMETHOD([dispid(2019), 'propget'], HRESULT, 'VBE',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBE)), 'VBE' )),
    COMMETHOD([dispid(2020)], HRESULT, 'Help',
              ( ['in', 'optional'], BSTR, 'HelpFile', 'vbapp10.chm' ),
              ( ['in', 'optional'], c_int, 'ContextID', 0 )),
    COMMETHOD([dispid(2021)], HRESULT, 'Quit'),
    COMMETHOD([dispid(2022)], HRESULT, 'Run',
              ( ['in'], BSTR, 'MacroName' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'safeArrayOfParams' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'Run' )),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'PPFileDialog',
              ( ['in'], PpFileDialogType, 'Type' ),
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'PPFileDialog' )),
    COMMETHOD([dispid(2024), 'restricted'], HRESULT, 'LaunchSpelling',
              ( ['in'], POINTER(DocumentWindow), 'pWindow' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'Left' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'Left' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'Top' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'Top' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(2028), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'Height' )),
    COMMETHOD([dispid(2028), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'Height' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(PpWindowState), 'WindowState' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'WindowState',
              ( ['in'], PpWindowState, 'WindowState' )),
    COMMETHOD([dispid(2030), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(2030), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(2031), 'restricted', 'propget'], HRESULT, 'HWND',
              ( ['out', 'retval'], POINTER(c_int), 'HWND' )),
    COMMETHOD([dispid(2032), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'Active' )),
    COMMETHOD([dispid(2033)], HRESULT, 'Activate'),
    COMMETHOD([dispid(2034), 'hidden', 'propget'], HRESULT, 'AnswerWizard',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.AnswerWizard)), 'AnswerWizard' )),
    COMMETHOD([dispid(2035), 'propget'], HRESULT, 'COMAddIns',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.COMAddIns)), 'COMAddIns' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'ProductCode',
              ( ['out', 'retval'], POINTER(BSTR), 'ProductCode' )),
    COMMETHOD([dispid(2037), 'hidden', 'propget'], HRESULT, 'DefaultWebOptions',
              ( ['out', 'retval'], POINTER(POINTER(DefaultWebOptions)), 'DefaultWebOptions' )),
    COMMETHOD([dispid(2038), 'propget'], HRESULT, 'LanguageSettings',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.LanguageSettings)), 'LanguageSettings' )),
    COMMETHOD([dispid(2039), 'hidden', 'propget'], HRESULT, 'MsoDebugOptions',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDebugOptions)), 'MsoDebugOptions' )),
    COMMETHOD([dispid(2040), 'propget'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowWindowsInTaskbar' )),
    COMMETHOD([dispid(2040), 'propput'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowWindowsInTaskbar' )),
    COMMETHOD([dispid(2041), 'hidden', 'propget'], HRESULT, 'Marker',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'Marker' )),
    COMMETHOD([dispid(2042), 'propget'], HRESULT, 'FeatureInstall',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall), 'FeatureInstall' )),
    COMMETHOD([dispid(2042), 'propput'], HRESULT, 'FeatureInstall',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall, 'FeatureInstall' )),
    COMMETHOD([dispid(2043), 'hidden'], HRESULT, 'GetOptionFlag',
              ( ['in'], c_int, 'Option' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Persist', False ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'GetOptionFlag' )),
    COMMETHOD([dispid(2044), 'hidden'], HRESULT, 'SetOptionFlag',
              ( ['in'], c_int, 'Option' ),
              ( ['in'], VARIANT_BOOL, 'State' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Persist', False )),
    COMMETHOD([dispid(2045), 'propget'], HRESULT, 'FileDialog',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileDialogType, 'Type' ),
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileDialog)), 'FileDialog' )),
    COMMETHOD([dispid(2046), 'propget'], HRESULT, 'DisplayGridLines',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayGridLines' )),
    COMMETHOD([dispid(2046), 'propput'], HRESULT, 'DisplayGridLines',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayGridLines' )),
    COMMETHOD([dispid(2047), 'propget'], HRESULT, 'AutomationSecurity',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity), 'AutomationSecurity' )),
    COMMETHOD([dispid(2047), 'propput'], HRESULT, 'AutomationSecurity',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity, 'AutomationSecurity' )),
    COMMETHOD([dispid(2048), 'propget'], HRESULT, 'NewPresentation',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.NewFile)), 'NewPresentation' )),
    COMMETHOD([dispid(2049), 'propget'], HRESULT, 'DisplayAlerts',
              ( ['out', 'retval'], POINTER(PpAlertLevel), 'DisplayAlerts' )),
    COMMETHOD([dispid(2049), 'propput'], HRESULT, 'DisplayAlerts',
              ( ['in'], PpAlertLevel, 'DisplayAlerts' )),
    COMMETHOD([dispid(2050), 'propget'], HRESULT, 'ShowStartupDialog',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'ShowStartupDialog' )),
    COMMETHOD([dispid(2050), 'propput'], HRESULT, 'ShowStartupDialog',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'ShowStartupDialog' )),
    COMMETHOD([dispid(2051), 'hidden'], HRESULT, 'SetPerfMarker',
              ( ['in'], c_int, 'Marker' )),
    COMMETHOD([dispid(2052), 'propget'], HRESULT, 'AutoCorrect',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrect)), 'AutoCorrect' )),
    COMMETHOD([dispid(2053), 'propget'], HRESULT, 'Options',
              ( ['out', 'retval'], POINTER(POINTER(Options)), 'Options' )),
    COMMETHOD([dispid(2054), 'hidden'], HRESULT, 'LaunchPublishSlidesDialog',
              ( ['in'], BSTR, 'SlideLibraryUrl' )),
    COMMETHOD([dispid(2055), 'hidden'], HRESULT, 'LaunchSendToPPTDialog',
              ( ['in'], POINTER(VARIANT), 'SlideUrls' )),
    COMMETHOD([dispid(2056), 'propget'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'DisplayDocumentInformationPanel' )),
    COMMETHOD([dispid(2056), 'propput'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['in'], VARIANT_BOOL, 'DisplayDocumentInformationPanel' )),
    COMMETHOD([dispid(2057), 'propget'], HRESULT, 'Assistance',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAssistance)), 'Assistance' )),
    COMMETHOD([dispid(2058), 'propget'], HRESULT, 'ActiveEncryptionSession',
              ( ['out', 'retval'], POINTER(c_int), 'ActiveEncryptionSession' )),
    COMMETHOD([dispid(2059), 'propget'], HRESULT, 'FileConverters',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'FileConverters' )),
    COMMETHOD([dispid(2060), 'propget'], HRESULT, 'SmartArtLayouts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayouts)), 'SmartArtLayouts' )),
    COMMETHOD([dispid(2061), 'propget'], HRESULT, 'SmartArtQuickStyles',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtQuickStyles)), 'SmartArtQuickStyles' )),
    COMMETHOD([dispid(2062), 'propget'], HRESULT, 'SmartArtColors',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtColors)), 'SmartArtColors' )),
    COMMETHOD([dispid(2063), 'propget'], HRESULT, 'ProtectedViewWindows',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindows)), 'ProtectedViewWindows' )),
    COMMETHOD([dispid(2064), 'propget'], HRESULT, 'ActiveProtectedViewWindow',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'ActiveProtectedViewWindow' )),
    COMMETHOD([dispid(2065), 'propget'], HRESULT, 'IsSandboxed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'IsSandboxed' )),
    COMMETHOD([dispid(2066), 'hidden', 'propget'], HRESULT, 'ResampleMediaTasks',
              ( ['out', 'retval'], POINTER(POINTER(ResampleMediaTasks)), 'ResampleMediaTasks' )),
    COMMETHOD([dispid(2067)], HRESULT, 'StartNewUndoEntry'),
    COMMETHOD([dispid(2068), 'propget'], HRESULT, 'FileValidation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileValidationMode), 'FileValidation' )),
    COMMETHOD([dispid(2068), 'propput'], HRESULT, 'FileValidation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileValidationMode, 'FileValidation' )),
    COMMETHOD([dispid(2069)], HRESULT, 'OpenThemeFile',
              ( ['in'], BSTR, 'themeFileName' ),
              ( ['out', 'retval'], POINTER(POINTER(Theme)), 'Theme' )),
    COMMETHOD([dispid(2070), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'pfChartDataPointTrack' )),
    COMMETHOD([dispid(2070), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'pfChartDataPointTrack' )),
    COMMETHOD([dispid(2071), 'propget'], HRESULT, 'DisplayGuides',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'DisplayGridLines' )),
    COMMETHOD([dispid(2071), 'propput'], HRESULT, 'DisplayGuides',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'DisplayGridLines' )),
]
################################################################
## code template for _Application implementation
##class _Application_Impl(object):
##    @property
##    def Presentations(self):
##        '-no docstring-'
##        #return Presentations
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return Windows
##
##    @property
##    def Dialogs(self):
##        '-no docstring-'
##        #return Dialogs
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return ActiveWindow
##
##    @property
##    def ActivePresentation(self):
##        '-no docstring-'
##        #return ActivePresentation
##
##    @property
##    def SlideShowWindows(self):
##        '-no docstring-'
##        #return SlideShowWindows
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return CommandBars
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return Path
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    def _get(self):
##        '-no docstring-'
##        #return Caption
##    def _set(self, Caption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return Assistant
##
##    @property
##    def FileSearch(self):
##        '-no docstring-'
##        #return FileSearch
##
##    @property
##    def FileFind(self):
##        '-no docstring-'
##        #return FileFind
##
##    @property
##    def Build(self):
##        '-no docstring-'
##        #return Build
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return Version
##
##    @property
##    def OperatingSystem(self):
##        '-no docstring-'
##        #return OperatingSystem
##
##    @property
##    def ActivePrinter(self):
##        '-no docstring-'
##        #return ActivePrinter
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return Creator
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return AddIns
##
##    @property
##    def VBE(self):
##        '-no docstring-'
##        #return VBE
##
##    def Help(self, HelpFile, ContextID):
##        '-no docstring-'
##        #return 
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def Run(self, MacroName, safeArrayOfParams):
##        '-no docstring-'
##        #return Run
##
##    def PPFileDialog(self, Type):
##        '-no docstring-'
##        #return PPFileDialog
##
##    def LaunchSpelling(self, pWindow):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Left
##    def _set(self, Left):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Top
##    def _set(self, Top):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Height
##    def _set(self, Height):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WindowState
##    def _set(self, WindowState):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HWND(self):
##        '-no docstring-'
##        #return HWND
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return Active
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AnswerWizard(self):
##        '-no docstring-'
##        #return AnswerWizard
##
##    @property
##    def COMAddIns(self):
##        '-no docstring-'
##        #return COMAddIns
##
##    @property
##    def ProductCode(self):
##        '-no docstring-'
##        #return ProductCode
##
##    @property
##    def DefaultWebOptions(self):
##        '-no docstring-'
##        #return DefaultWebOptions
##
##    @property
##    def LanguageSettings(self):
##        '-no docstring-'
##        #return LanguageSettings
##
##    @property
##    def MsoDebugOptions(self):
##        '-no docstring-'
##        #return MsoDebugOptions
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowWindowsInTaskbar
##    def _set(self, ShowWindowsInTaskbar):
##        '-no docstring-'
##    ShowWindowsInTaskbar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Marker(self):
##        '-no docstring-'
##        #return Marker
##
##    def _get(self):
##        '-no docstring-'
##        #return FeatureInstall
##    def _set(self, FeatureInstall):
##        '-no docstring-'
##    FeatureInstall = property(_get, _set, doc = _set.__doc__)
##
##    def GetOptionFlag(self, Option, Persist):
##        '-no docstring-'
##        #return GetOptionFlag
##
##    def SetOptionFlag(self, Option, State, Persist):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FileDialog(self, Type):
##        '-no docstring-'
##        #return FileDialog
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayGridLines
##    def _set(self, DisplayGridLines):
##        '-no docstring-'
##    DisplayGridLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return AutomationSecurity
##    def _set(self, AutomationSecurity):
##        '-no docstring-'
##    AutomationSecurity = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NewPresentation(self):
##        '-no docstring-'
##        #return NewPresentation
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayAlerts
##    def _set(self, DisplayAlerts):
##        '-no docstring-'
##    DisplayAlerts = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowStartupDialog
##    def _set(self, ShowStartupDialog):
##        '-no docstring-'
##    ShowStartupDialog = property(_get, _set, doc = _set.__doc__)
##
##    def SetPerfMarker(self, Marker):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AutoCorrect(self):
##        '-no docstring-'
##        #return AutoCorrect
##
##    @property
##    def Options(self):
##        '-no docstring-'
##        #return Options
##
##    def LaunchPublishSlidesDialog(self, SlideLibraryUrl):
##        '-no docstring-'
##        #return 
##
##    def LaunchSendToPPTDialog(self, SlideUrls):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayDocumentInformationPanel
##    def _set(self, DisplayDocumentInformationPanel):
##        '-no docstring-'
##    DisplayDocumentInformationPanel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Assistance(self):
##        '-no docstring-'
##        #return Assistance
##
##    @property
##    def ActiveEncryptionSession(self):
##        '-no docstring-'
##        #return ActiveEncryptionSession
##
##    @property
##    def FileConverters(self):
##        '-no docstring-'
##        #return FileConverters
##
##    @property
##    def SmartArtLayouts(self):
##        '-no docstring-'
##        #return SmartArtLayouts
##
##    @property
##    def SmartArtQuickStyles(self):
##        '-no docstring-'
##        #return SmartArtQuickStyles
##
##    @property
##    def SmartArtColors(self):
##        '-no docstring-'
##        #return SmartArtColors
##
##    @property
##    def ProtectedViewWindows(self):
##        '-no docstring-'
##        #return ProtectedViewWindows
##
##    @property
##    def ActiveProtectedViewWindow(self):
##        '-no docstring-'
##        #return ActiveProtectedViewWindow
##
##    @property
##    def IsSandboxed(self):
##        '-no docstring-'
##        #return IsSandboxed
##
##    @property
##    def ResampleMediaTasks(self):
##        '-no docstring-'
##        #return ResampleMediaTasks
##
##    def StartNewUndoEntry(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return FileValidation
##    def _set(self, FileValidation):
##        '-no docstring-'
##    FileValidation = property(_get, _set, doc = _set.__doc__)
##
##    def OpenThemeFile(self, themeFileName):
##        '-no docstring-'
##        #return Theme
##
##    def _get(self):
##        '-no docstring-'
##        #return pfChartDataPointTrack
##    def _set(self, pfChartDataPointTrack):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayGridLines
##    def _set(self, DisplayGridLines):
##        '-no docstring-'
##    DisplayGuides = property(_get, _set, doc = _set.__doc__)
##

Hyperlinks._methods_ = [
    COMMETHOD([dispid(2001), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'Application' )),
    COMMETHOD([dispid(2002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'Item' )),
]
################################################################
## code template for Hyperlinks implementation
##class Hyperlinks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##

__all__ = [ 'msoAnimTextUnitEffectByCharacter',
           'msoAnimEffect3DJumpAndTurn',
           'msoAnimFilterEffectSubtypeUpRight',
           'msoAnimEffectRandomBars', 'ppEffectFlyFromBottomLeft',
           'ppCheckInOverwriteVersion', 'CellRange',
           'xlTickLabelOrientationUpward', 'xlLabelPositionInsideEnd',
           'xlGeoMappingLevelState', 'xlMarkerStyleDash', 'xlSeries',
           'AnimationPoint', 'ppViewSlide', 'ppDateTimeUAQ5',
           'rgbLightSeaGreen', 'ThemeVariant', 'OCXExtender',
           'xlPivotChartDropZone', 'XlDataLabelPosition',
           'msoAnimFilterEffectTypeImage', 'ppPlaceholderChart',
           'msoAnimEffectAfterFreeze', 'ppActionOLEVerb',
           'ppBulletArabicDBPlain', 'msoAnimDirectionCenter',
           'xlPatternGrid', 'xlNothing', 'ppFollowColorsNone',
           'rgbMediumBlue', 'xlMarkerStylePicture', 'xlDiamond',
           'XlDisplayUnit', 'ppEffectFlashbulb',
           'msoAnimDirectionFontStrikethrough',
           'xlTickLabelPositionHigh', 'xlScaleLogarithmic',
           'msoAnimEffectWhip', 'msoAnimFilterEffectSubtypeUpLeft',
           'ppBulletStyleMixed', 'msoAnimEffectPathBuzzsaw',
           'ppSaveAsJPG', 'xlErrorBarIncludeNone',
           'ppAnimateByCategoryElements', 'Presentations',
           'ppEffectCoverDown', 'ppEffectPlusOut', 'xlColumnField',
           'AnimationSettings', 'xlTickMarkOutside', '_Presentation',
           'ppEffectRotateDown', 'ppEffectFlyThroughOut',
           'ppCheckInMajorVersion', 'xlYears', 'xlPatternHorizontal',
           'xlHorizontal', 'Model3DFormat', 'FillFormat',
           'xlDataField', 'xlConeToMax', 'xlThousands',
           'msoAnimEffectPathRight', 'msoAnimEffectAscend',
           'PpTextUnitEffect', 'ppEffectRippleLeftDown',
           'msoAnimFilterEffectTypeNone',
           'ppProtectedViewCloseNormal', 'xlBackgroundAutomatic',
           'msoAnimEffectPathPentagon', 'xlHAlignDistributed',
           'xlHAlignCenter', 'xlVAlignDistributed', 'xlCombination',
           'Panes', 'Slide', 'ppAfterEffectMixed',
           'msoAnimDirectionUpRight', 'Global', 'ppAdvanceOnTime',
           'ppPrintOutputFourSlideHandouts', 'xlShowLabelAndPercent',
           'xlIndexAscending', 'xlMarkerStyleCircle', 'Research',
           'msoAnimEffectStrips', 'msoAnimEffectPathDiamond',
           'rgbDarkGoldenrod', 'ppEffectStripsDownLeft',
           'msoAnimEffectPathInvertedTriangle', 'ppPublishAll',
           'XlGeoMappingLevel', 'msoAnimFilterEffectTypeCircle',
           'msoAnimEffectBoldReveal', 'msoAnimEffectRestartAlways',
           'xlMarkerStyleNone', 'ppEffectUncoverRight',
           'ppSaveAsXMLPresentation', 'msoAnimEffectPathWave',
           'OCXExtenderEvents', 'msoAnimateTextBySecondLevel',
           'xlMovingAvg', 'ppEffectFallOverLeft', 'ppEffectCubeUp',
           'FullSeriesCollection', 'PpTextLevelEffect',
           'msoAnimEffectChangeLineColor', 'ppEffectFlyFromTopRight',
           'xlSizeIsArea', 'msoAnimEffectPathUp', 'ppCaseUpper',
           'rgbRed', 'RotationEffect', 'ppAlignThaiDistribute',
           'MsoAnimAfterEffect', 'Axis',
           'msoAnimDirectionCycleClockwise', 'xlLabelPositionCenter',
           'ppViewTitleMaster', 'CalloutFormat',
           'PpResampleMediaProfile', 'ppBulletMixed', 'rgbCoral',
           'ActionSetting', 'xlCross', 'ppEffectFlyFromLeft',
           'ppPlaceholderTitle', 'xlTickLabelPositionNone',
           'msoAnimTypeMotion',
           'msoAnimFilterEffectSubtypeInVertical',
           'ResampleMediaTasks', 'ppPlaceholderMixed',
           'msoAnimEffectPathHeartbeat',
           'xlUnderlineStyleDoubleAccounting', 'xlTop',
           'msoAnimTextUnitEffectByParagraph',
           'ppEffectRippleRightUp', 'PpWindowState',
           'xlLabelPositionRight', 'xlPyramidToMax',
           'TableBackground', 'ppBulletAlphaLCParenRight', 'rgbPeru',
           'xlThick', 'ppEffectFlyFromBottomRight',
           'msoAnimAfterEffectHide', 'msoAnimOpacity', 'ppAlertsNone',
           'rgbDarkCyan', 'ppEffectNewsflash', 'xlFrontEnd',
           'ppPublishNamedSlideShow', 'ppPasteShape',
           'ppAnimateByCharacter', 'rgbIvory', 'xlCorner',
           'ppShowAll', 'xlUpBars', 'rgbCornsilk',
           'ppEffectGlitterDiamondRight', 'Columns',
           'xlCategoryLabelLevelAll', 'ppActionLastSlide',
           'ppBulletSimpChinPeriod', 'xlCustom', 'ppRDIAtMentions',
           'xlTickLabelOrientationVertical', 'PpPrintOutputType',
           'PpNumberedBulletStyle', 'ppResampleMediaProfileSmallest',
           'xlPatternGray50', 'XlParentDataLabelOptions',
           'ppPasteText', 'msoAnimEffectChangeFillColor',
           'ppSlideSize35MM', 'ppEffectBoxRight',
           'ppBulletThaiNumParenRight', 'ppDateTimeUAQ4',
           'xlGeoMappingLevelCountryRegion',
           'msoAnimFilterEffectTypeStrips', 'xlMedium',
           'xlAnyGallery', 'PlotArea', 'ppEffectPushRight',
           'ppAccent2', 'msoAnimEffectMediaStop', 'ConnectorFormat',
           'xlLightUp', 'msoAnimateTextByAllLevels',
           'ppDateTimeFigureOut', 'ppEffectGalleryLeft',
           'msoAnimateTextByFifthLevel', 'XlRgbColor',
           'ppDateTimeHmm', 'xlLegendPositionRight',
           'msoAnimEffectPathStairsDown', 'ppEffectFallOverRight',
           'ColorScheme', 'ppEffectGlitterHexagonDown', 'DropLines',
           'ppEffectOrigamiLeft', 'xl3DSurface',
           'msoAnimShapeShadowOpacity', 'msoAnimTextBulletFontName',
           'TextFrame', 'msoAnimEffectWheel',
           'ppSaveAsStrictOpenXMLPresentation', 'Floor',
           'msoAnimateLevelNone', 'LineFormat', 'msoAnimEffectGlide',
           'ppMediaTaskStatusQueued', 'rgbSlateGrey',
           'msoAnimEffectLightSpeed', 'rgbDarkSlateGray',
           'PpMediaType', 'PpAutoSize', 'xlConeToPoint',
           'ppBulletRomanLCParenBoth', 'rgbMaroon',
           'msoAnimEffectPathPeanut', 'ppEffectWipeLeft', 'xlNone',
           'xlVAlignCenter', 'msoAnimateDiagramOutByRing',
           'ppEffectRevealSmoothRight',
           'msoAnimateChartBySeriesElements', 'msoAnimTypeMixed',
           'msoAnimFilterEffectTypeCheckerboard',
           'ppRDIDocumentWorkspace', 'msoAnimDirectionOrdinalMask',
           'xlCategoryScale', 'msoAnimVisibility', 'ppAnimateByWord',
           'ppTransitionSpeedFast', 'rgbDarkSalmon',
           'msoAnimEffectPathArcDown', 'FileConverters', 'xlHundreds',
           'xlSplitByPosition', 'xlAutomaticScale', 'xlAbove',
           'Design', 'msoAnimShapeShadowOffsetY',
           'xlPatternLightHorizontal', 'msoAnimTextFontColor',
           'PpFollowColors', 'ppPlaceholderDate',
           'msoAnimFilterEffectSubtypeSpokes8',
           'msoAnimEffectPathBounceRight', 'xlSides', 'xlColumns',
           'xlMarkerStyleDot', 'HeadersFooters', 'ppSaveAsBMP',
           'ppLayoutTextAndObject', 'xlVertical', 'xlLegendEntry',
           'Chart', 'ppSaveAsWebArchive', 'XlCopyPictureFormat',
           'ppSaveAsOpenXMLPicturePresentation',
           'xlPatternCrissCross', 'ppEffectPushLeft', 'ppPlaying',
           'msoAnimDirectionOutBottom', 'msoAnimEffectCircle',
           'ppEffectCubeRight', 'xlDash', 'ppAnimateBySeriesElements',
           'rgbLightGrey', 'xlSquare', 'ppEffectPushDown',
           'ppCheckInMinorVersion', 'MediaBookmarks',
           'xlErrorBarIncludeBoth', 'ppViewNormal',
           'msoAnimShapePictureBrightness', 'Shapes', 'rgbPlum',
           'xlFrontSides', 'AddIns', 'xlAxisCrossesAutomatic',
           'PpAfterEffect', 'xlPower', 'SectionProperties',
           'rgbSlateGray', 'msoAnimateDiagramUp',
           'xlErrorBarIncludeMinusValues', 'XlPivotFieldOrientation',
           'ppBulletHindiNumParenRight', 'msoAnimColor',
           'ppSoundNone', 'ppEffectConveyorLeft',
           'msoAnimDirectionGradual',
           'msoAnimFilterEffectSubtypeFromBottom',
           'msoAnimEffectPathTrapezoid',
           'xlParentDataLabelOptionsNone', 'XlPieSliceIndex',
           'ppPrintSelection', 'msoAnimateChartByCategoryElements',
           'ppEffectStripsDownRight', 'xlAxis',
           'ppLayoutTextAndTwoObjects', 'xlBuiltIn', 'XlOrientation',
           'ppSaveAsTIF', 'xlHAlignJustify',
           'ppMediaTaskStatusInProgress', 'XlPictureAppearance',
           'ppPlaceholderHeader', 'xlTimeScale',
           'ppSlideSizeHagakiCard', 'ppEffectZoomBottom', 'Point',
           'msoAnimDirectionCycleCounterclockwise', 'Fonts',
           'ppEffectRandomBarsHorizontal', 'Options', 'rgbSandyBrown',
           'xlOuterCounterClockwisePoint', 'PpFileDialogType',
           'xlLabelPositionMixed', 'rgbPink', 'LegendEntry',
           'msoAnimFilterEffectTypeBarn', 'msoAnimEffectSpinner',
           'msoAnimEffectChangeFont', 'xlDataLabelsShowLabel',
           'xlLeaderLines', 'TextStyleLevels',
           'ppAnimateChartAllAtOnce', 'RulerLevels',
           'ProtectedViewWindow', 'ppAnimateLevelMixed',
           'ppDefaultStyle', 'PpChartUnitEffect', 'ScaleEffect',
           'Ruler', 'msoAnimEffectPathDiagonalDownRight',
           'MsoAnimEffect', 'ColorSchemes', 'msoAnimTypeRotation',
           'Selection', 'rgbMediumTurquoise', 'ppDateTimeHmmss',
           'ppTransitionSpeedMixed', 'ppSaveAsEMF', 'rgbAliceBlue',
           'msoAnimFilterEffectSubtypeSpokes3', 'rgbGreenYellow',
           'ppLayoutVerticalText', 'xlFront', 'xlStretch',
           'msoAnimateLevelMixed', 'xlGeoProjectionTypeAlbers',
           'xlCylinder', 'ppEffectGlitterDiamondDown',
           'msoAnimHeight', 'ppMediaTaskStatusFailed',
           'msoAnimFilterEffectSubtypeSpokes2', 'rgbSeashell',
           'ppRDIDocumentServerProperties', 'PpRemoveDocInfoType',
           'ppPasteBitmap', 'ppEffectZoomOutSlightly',
           'ppLayoutTwoObjectsAndObject',
           'xlDataLabelsShowBubbleSizes', 'xlHidden',
           'XlErrorBarType', 'ppEffectWipeUp', 'ppActionRunMacro',
           'ppTabStopLeft', 'ppEffectMorphByWord',
           'xlHAlignCenterAcrossSelection', 'ppWindowMaximized',
           'ppSaveAsGIF', 'msoAnimEffectPathTeardrop',
           'ppLayoutVerticalTitleAndText',
           'ppLayoutPictureWithCaption', 'SoundFormat',
           'msoAnimEffectMediaPause', 'rgbTeal',
           'ppEffectFlyThroughInBounce', 'ppEffectRotateUp',
           'ChartBorder', 'ppEffectBoxIn', 'rgbMediumVioletRed',
           'rgbDarkBlue', 'MouseDownHandler',
           'ppPlaceholderSlideNumber', 'ppFollowColorsMixed',
           'msoAnimTriggerOnPageClick', 'ppBulletRomanUCParenBoth',
           'xlIndexDescending', 'AxisTitle', 'ppBackground',
           'XlChartElementPosition', 'ppLayoutTwoColumnText',
           'PpSoundFormatType', 'ppUpdateOptionMixed',
           'xlTickLabelOrientationAutomatic', 'xlFloor',
           'ppSlideSizeB4ISOPaper', 'XlTrendlineType',
           'msoAnimDirectionBottomLeft',
           'msoAnimFilterEffectSubtypeOutHorizontal',
           'XlChartSplitType', 'ppEffectCoverRightUp',
           'ppDateTimeUAQ2', 'MsoAnimCommandType', 'ppMediaTypeMovie',
           'xlGeoMappingLevelWorld', 'ProtectedViewWindows',
           'ppActionEndShow', 'xlPatternAutomatic',
           'ppEffectPanRight', 'Timing', 'msoAnimEffectPathArcRight',
           'ppPrintOutputOutline', 'Guide', 'ppEffectDissolve',
           'msoAnimEffectPathEqualTriangle',
           'msoAnimTextUnitEffectMixed', 'XlBackground',
           'ppViewNotesMaster', 'rgbTurquoise', '_PowerRex',
           'ppFarEastLineBreakLevelCustom',
           'msoClickStateAfterAllAnimations',
           'xlDataLabelsShowLabelAndPercent', '_Slide',
           'ppLayoutTitle', 'ppLayoutOrgchart',
           'msoAnimTriggerOnMediaBookmark', 'rgbSalmon',
           'msoAnimateDiagramBreadthByLevel', 'msoAnimRotation',
           'ppActionRunProgram', 'ppNotReady',
           'msoAnimTriggerOnShapeClick', 'Comment', 'ppAlertsAll',
           'ppPlaceholderObject', 'rgbSnow', 'ppEffectRippleLeftUp',
           'Theme', 'ppAfterEffectHideOnClick',
           'msoAnimDirectionLeft', 'ppLayoutCustom', 'xlGray16',
           'ppLayoutTextOverObject', 'xlGray50', 'GroupShapes',
           'ppEffectPageCurlDoubleLeft', 'ppSoundFormatWAV',
           'xlGeoMappingLevelCountryRegionList', 'rgbTomato',
           'ppRDIComments', 'msoAnimEffectPathSpiralLeft',
           'rgbLightPink', 'rgbLinen',
           'ppFrameColorsPresentationSchemeAccentColor',
           'ppFixedFormatIntentScreen', 'ppEffectOrigamiRight',
           'ppEffectSplitVerticalIn', 'ppSelectionSlides',
           'PpAlertLevel', 'rgbPurple', 'PpSlideShowState',
           'PpViewType', 'xlUserDefined', 'xlUpward',
           'msoAnimEffectBoldFlash', 'ppPasteDefault',
           'PpDateTimeFormat', 'ppSlideShowUseSlideTimings',
           'ppSoundFormatMixed', 'rgbDarkGreen',
           'ppEffectCutThroughBlack', 'ppEffectFlyThroughOutBounce',
           'ppSlideShowPointerPen', 'ppAnimateBySecondLevel',
           'ppResampleMediaProfileSmaller', 'ppEffectBoxDown',
           'xlMinusValues', 'msoAnimEffectMediaPlayFromBookmark',
           'rgbMidnightBlue', 'ppBulletCircleNumDBPlain', 'HiLoLines',
           'PpPrintHandoutOrder', 'msoAnimDirectionHorizontalOut',
           'xlChartElementPositionCustom',
           'ppEffectWheelReverse1Spoke', 'ppEffectCoverLeftUp',
           'msoAnimTypeNone', 'ppBulletThaiAlphaParenBoth',
           'xlPatternLightDown', 'ppEffectFlipUp', 'XlLegendPosition',
           'rgbHoneydew', 'PpHTMLVersion', 'Presentation',
           'ppEffectRandom', 'ppBulletTradChinPlain',
           'ppBorderDiagonalUp', 'xlPrimary', 'ppEffectRotateLeft',
           'xlVAlignTop', 'ppDateTimeddddMMMMddyyyy', 'ChartTitle',
           'msoAnimEffectPathCurvedSquare', 'xlLogarithmic',
           'ppPrintOutputSixSlideHandouts', 'ppBulletPicture',
           'msoAnimEffectWedge', 'PublishObjects',
           'ppRDIRemovePersonalInformation', 'ppIndentKeepAttr',
           'ppShapeFormatJPG', 'msoAnimateChartByCategory',
           'xlParentDataLabelOptionsBanner', 'ppEffectMorphByObject',
           'xlDisplayUnitLabel', 'ppBulletRomanUCPeriod',
           'msoAnimEffectPathRightTriangle', 'msoAnimEffect3DArrive',
           'xlAllFaces', 'ppSaveAsPowerPoint3', 'ppEffectStretchUp',
           'msoAnimEffectFade', 'PresEvents', 'rgbChartreuse',
           'ppViewNotesPage', 'msoAnimFilterEffectSubtypeIn',
           'ppSlideShowPointerAutoArrow', 'ppEffectZoomCenter',
           'xlParentDataLabelOptionsOverlapping', 'rgbPapayaWhip',
           'ppPrintHandoutVerticalFirst', 'msoAnimDirectionUpLeft',
           'XlConstants', 'msoAnimEffectGrowWithColor',
           'msoAnimDirectionSlightly', 'Walls',
           'ppFrameColorsWhiteTextOnBlack', 'rgbDodgerBlue',
           'rgbBlanchedAlmond', 'msoAnimX',
           'msoAnimEffectPathCurvedX', 'xlPatternVertical',
           'ppBaselineAlignMixed', 'msoAnimFilterEffectTypeRandomBar',
           'ppBulletThaiNumPeriod', 'msoAnimEffectSplit', 'ppRDIAll',
           'ppPlaceholderBody', 'xlPatternLightUp',
           'xlTickMarkInside', 'ppEffectRevealBlackLeft', 'ppScaleXY',
           'xlPatternChecker', 'ppEffectPeelOffLeft', 'xlNextToAxis',
           'ppPasteGIF', 'xlSeriesColorGradientStyleDiverging',
           'rgbNavy', 'ppEffectVortexDown', 'xlJustify',
           'PpGuideOrientation', 'msoAnimEffectAfterHold',
           'PpChangeCase', 'Guides', 'xlMajorGridlines', 'xlLow',
           'ParagraphFormat', 'rgbYellow', 'msoAnimEffectFadedSwivel',
           'ppFileDialogOpen', 'ppLayoutObjectAndTwoObjects',
           'ppBulletThaiAlphaPeriod',
           'msoClickStateBeforeAutomaticAnimations',
           'xlPatternGray16', 'Shape', 'ShapeRange',
           'ppPrintOutputNineSlideHandouts', 'xlShape',
           'ChartColorFormat', 'ppBorderBottom',
           'ppEffectFlyThroughIn', 'ppDateTimeMMddyyhmmAMPM',
           'Comments', 'ppSaveAsPowerPoint4FarEast',
           'ppLayoutChartAndText', 'ppDirectionMixed', 'rgbLawnGreen',
           'ppEffectSplitHorizontalOut', 'rgbFuchsia',
           'ppMediaTypeSound', 'XlChartGallery', 'rgbLightGreen',
           'xlRowField', 'ppSlideSizeA3Paper',
           'xlErrorBarTypeStError', 'ppAlignmentMixed',
           'msoAnimateDiagramAllAtOnce', 'XlSeriesColorGradientStyle',
           'DataTable', 'PublishObject', 'xlTriangle',
           'msoAnimEffectColorWave', 'ppEffectCut',
           'msoAnimTriggerNone', 'rgbDeepPink',
           'ppAfterEffectNothing', 'msoAnimEffectZip', 'rgbSienna',
           'xlSingle', 'PpBorderType', 'xlErrorBars',
           'msoAnimDirectionVerticalOut', 'rgbDarkRed', 'rgbOrchid',
           'xlInnerCounterClockwisePoint', 'ppBulletAlphaLCPeriod',
           'msoAnimEffectPathCurvyStar', '_Master', 'ppCaseLower',
           'OLEControl', 'msoAnimEffectPathCurvyRight', 'Application',
           'MsoAnimFilterEffectSubtype',
           'msoAnimFilterEffectSubtypeAcross',
           'xlTickLabelPositionLow', 'xlTickLabelPositionNextToAxis',
           'xlLegendPositionBottom', 'XlRowCol',
           'ppPlaceholderVerticalObject', 'xlStack',
           'ChartCharacters', 'HeaderFooter', 'XlTimeUnit',
           'ppPrintPureBlackAndWhite', 'CategoryCollection',
           'ppSlideShowPointerEraser', 'RulerLevel', 'xlBoth',
           'ppIndentControlMixed', 'xlAxisCrossesMaximum',
           'ppLayoutFourObjects', 'ppRDIDocumentProperties',
           'ppEffectFlyFromTopLeft', 'ppEffectVortexRight',
           'ppEffectCrawlFromRight', 'ppEffectDrapeLeft',
           'msoAnimEffectPathTurnUp', 'PpParagraphAlignment',
           'xlScreen', 'rgbIndianRed', 'xlInside',
           'ppEffectGlitterHexagonUp', 'PpSlideLayout',
           'ppEffectGalleryRight', 'msoAnimEffectZoom',
           'ppActionFirstSlide', 'xlGradientStopPositionTypePercent',
           'rgbCornflowerBlue', 'msoAnimEffectAfterRemove',
           'PpSlideShowPointerType', 'ppEffectPrestige',
           'msoAnimAdditiveAddSum', 'ppActionMixed',
           'ppFollowColorsTextAndBackground', 'rgbSkyBlue',
           'ppSaveAsHTMLv3', 'ppSaveAsTemplate', 'ppWindowNormal',
           'ppTitle', 'ppPlaceholderVerticalTitle',
           'xlDataLabelsShowPercent', 'XlEndStyleCap',
           'xlMarkerStylePlus', 'PpFixedFormatIntent',
           'MediaBookmark', 'ppPlaceholderMediaClip',
           'xlColorIndexNone', 'ppDateTimedMMMyy',
           'ppLayoutTwoObjects', 'ppSlideSizeA4Paper', 'XlPattern',
           'rgbSeaGreen', 'msoAnimEffectDiamond',
           'msoAnimFilterEffectSubtypeVertical', 'XlHAlign',
           'msoAnimFilterEffectTypePixelate', 'ppEffectSwitchRight',
           'ppDateTimeMdyy', 'xlOutside', 'ppBulletThaiNumParenBoth',
           'XlValueSortOrder', 'msoAnimShapePictureContrast',
           'TextStyle', 'xlLightHorizontal', 'xlChecker', 'Gridlines',
           'TextRange', 'PpArrangeStyle', 'xlPrinter',
           'xlGeoMappingLevelCounty', 'DocumentWindows',
           'xlTrendline', 'xlColumn', 'PpTabStopType',
           'xlGeoProjectionTypeAutomatic', 'SlideShowTransition',
           'rgbAntiqueWhite', 'msoAnimFilterEffectTypeStretch',
           'PpUpdateOption', 'DownBars', 'xlNoCap',
           'msoAnimTriggerAfterPrevious', 'ppCaseSentence',
           'XlDisplayBlanksAs', 'msoAnimEffectPathSCurve2',
           'ppSaveAsOpenXMLShow', 'ppHorizontalGuide',
           'XlDataLabelSeparator', 'ppEffectHoneycomb',
           'ppDateTimeMMMMyy', 'xlDot', 'ppShapeFormatGIF',
           'msoAnimEffectPathSpiralRight',
           'msoAnimDirectionClockwise', 'NamedSlideShows',
           'Coauthoring', 'xlRTL', 'NamedSlideShow',
           'xlMarkerStyleAutomatic', 'msoAnimEffectDarken',
           'ChartData', 'ppEffectWheel4Spokes',
           'msoAnimFilterEffectTypeDissolve', 'ppDateTimeMMyy',
           'PpTransitionSpeed', 'msoAnimFilterEffectSubtypeRight',
           'msoAnimEffectPathSpring', 'CustomerData',
           'ppPrintOutputOneSlideHandouts', 'xlChartTitle',
           'TabStops', 'msoAnimEffectPath8PointStar', 'rgbOlive',
           'Tags', 'XlChartPicturePlacement', 'msoAnimEffectArcUp',
           'msoAnimDirectionTopRight', 'ppEffectSpiral',
           'CanvasShapes', 'PpColorSchemeIndex', 'ppEffectBoxOut',
           'xlRows', 'ppLayoutMediaClipAndText', 'xlGray25',
           'ppFixedFormatTypeXPS', 'xlPatternRectangularGradient',
           'ppBulletArabicParenBoth', 'ppEffectOrbitLeft',
           'ppPrintOutputTwoSlideHandouts', 'ppSlideSizeOnScreen16x9',
           'PpSlideShowRangeType', 'msoAnimFilterEffectSubtypeNone',
           'msoAnimFilterEffectSubtypeOutVertical', 'rgbRoyalBlue',
           'ppEffectCrawlFromLeft', 'ppEffectBlindsHorizontal',
           'msoAnimEffectBlast', 'ppSaveAsHTMLDual',
           'ppBaselineAlignTop', 'ppSaveAsDefault',
           'ppEffectUncoverLeft', 'ppEffectFlyFromBottom',
           'ppEffectFlashOnceMedium', 'PictureFormat', 'xlStError',
           'ChartCategory', 'msoAnimEffectLighten',
           'msoAnimEffectWave', 'ppBaselineAlignCenter',
           'msoAnimFilterEffectSubtypeSpokes4', 'ppShapeFormatBMP',
           'msoAnimEffectRestartWhenOff', 'msoAnimEffectColorReveal',
           'ppAnimateByAllLevels', 'msoAnimEffectDissolve',
           'rgbDarkTurquoise', 'rgbOrangeRed', 'rgbGray',
           'xlSeriesAxis', 'msoAnimDirectionCounterclockwise',
           'XlChartItem', 'ppEffectFade', 'PowerRex', 'ColorEffect',
           'xlSeriesNameLevelAll', 'ppSchemeColorMixed',
           'ppSlideSizeBanner', 'msoAnimTypeCommand', 'ExtraColors',
           'rgbGhostWhite', 'ppEffectWindRight',
           'msoAnimateTextByThirdLevel', 'xlInnerClockwisePoint',
           'msoAnimEffectPathFigure8Four', 'xlPatternNone',
           'msoAnimFilterEffectTypeWipe', 'msoAnimEffectUnfold',
           'ppHTMLv3', 'msoAnimEffectPathLoopdeLoop',
           'ppSaveAsOpenXMLAddin', 'ppResampleMediaProfileSmall',
           'msoAnimY', 'ppRevisionInfoMerged', 'ppViewSlideSorter',
           'xlDataTable', 'ppDateTimedMMMMyyyy', 'rgbLightSteelBlue',
           'msoAnimEffectExpand', 'ppLayoutTitleOnly',
           'xlAxisCrossesMinimum', 'xlSlantDashDot',
           'ppBaselineAlignBaseline', 'ppEffectCurtains',
           'ppAnimateByFourthLevel', 'xlMaximum',
           'msoAnimateDiagramInByRing', 'ppEffectShredRectangleIn',
           'msoAnimDirectionTop', 'msoAnimEffectBox',
           'ppAdvanceOnClick', 'xlRadarAxisLabels',
           'ResampleMediaTask', 'ppShapeFormatWMF', 'ppLayoutObject',
           'xlColorIndexAutomatic', 'ppShadow', 'TextEffectFormat',
           'msoAnimEffectDescend', 'ppSlideSizeB5JISPaper',
           'msoAnimateDiagramDown', 'ppEffectCombHorizontal',
           'xlGeoProjectionTypeMiller', 'xlShowLabel',
           'xlSplitByPercentValue', 'msoAnimTextFontItalic',
           'XlLineStyle', 'ppBorderDiagonalDown',
           'msoAnimEffectFloat', 'ppEffectFlyFromTop',
           'AnimationBehaviors', 'ppEffectZoomInSlightly',
           'ppBulletUnnumbered', 'rgbWhiteSmoke',
           'msoAnimTextBulletColor', 'ppEffectCubeDown', 'PrintRange',
           'xlPatternSemiGray75', 'MsoAnimTextUnitEffect', 'xlBox',
           'ppEffectAppear', 'msoAnimTextBulletNumber', 'Hyperlink',
           'xlChartY', 'ppEffectSwitchUp', 'xlWalls',
           'msoAnimateDiagramClockwiseIn',
           'ppSaveAsOpenXMLShowMacroEnabled',
           'msoAnimEffectPathDecayingWave', 'ppSaveAsAddIn',
           'ppEffectCircleOut', 'msoAnimEffectFlip', 'ShapeNode',
           'ppEffectRippleCenter', 'msoAnimDirectionOutSlightly',
           'xlStackScale', 'msoAnimTextFontStrikeThrough',
           'EApplication', 'xlDefaultAutoFormat',
           'ppBulletThaiAlphaParenRight', 'msoAnimShapeShadowType',
           'MasterEvents', 'xlNotPlotted', 'rgbGold',
           'msoAnimEffectPath5PointStar', 'xlChartArea',
           'ppRDIDocumentManagementPolicy', 'ppArrangeCascade',
           'msoAnimShapeFillBackColor', 'Trendlines', 'CustomLayout',
           'msoAnimShapeFillOpacity', 'ppPasteHTML',
           'ppBulletArabicPlain', 'ppLayoutLargeObject',
           'xlMidClockwiseRadiusPoint', 'xlMarkerStyleStar',
           'ppLayoutContentWithCaption', 'PpRevisionInfo',
           'msoAnimEffectSpin', 'msoAnimateDiagramDepthByNode',
           'rgbDimGray', 'ppShapeFormatPNG', 'SeriesCollection',
           'ppEffectUncoverDown', 'xlLegend', 'ppEffectRotateRight',
           'msoAnimTextBulletType',
           'xlMidCounterClockwiseRadiusPoint',
           'ppPlaceholderVerticalBody', 'ppPrintOutputNotesPages',
           'ppEffectRevealBlackRight', 'rgbLightSkyBlue',
           'ppEffectCrush', 'rgbPeachPuff', 'msoAnimEffectColorBlend',
           'ppAlignJustify', 'ppRDIPublishPath',
           'msoAnimFilterEffectSubtypeLeft',
           'xlGeoMappingLevelPostalCode', 'xlCorners',
           'ppPrintSlideRange', 'XlCategoryLabelLevel',
           'PpBaselineAlignment',
           'msoAnimFilterEffectSubtypeDownLeft', 'ppEffectPanUp',
           'ppTransitionSpeedSlow', 'msoAnimDirectionTopLeft',
           'xlLegendPositionCustom', 'ppBulletArabicDBPeriod',
           'PpPasteDataType', 'ppEffectCombVertical',
           'ppSoundFormatNone', 'msoAnimEffectPathSquare',
           'rgbDarkKhaki', 'msoAnimCommandTypeVerb',
           'xlPatternLightVertical', 'rgbBurlyWood', 'SoundEffect',
           'xlSolid', 'rgbLightCoral', 'xlBinsTypeManual',
           'ppPrintOutputThreeSlideHandouts',
           'msoAnimEffectPathParallelogram', 'ppEffectDiamondOut',
           'ppEffectAirplaneLeft', 'ppAnimateByParagraph',
           'PrintRanges', 'ppPlaceholderTable',
           'msoAnimAccumulateAlways', 'xlBackgroundTransparent',
           'msoAnimFilterEffectTypeWedge',
           'msoAnimateDiagramClockwiseOut', 'XlAxisGroup',
           'ppEffectVortexUp', 'xlDataLabelSeparatorDefault',
           'xlPatternSolid', 'msoAnimDirectionInBottom',
           'msoAnimEffectPathCurvyLeft', 'msoAnimEffectSwish',
           'ppEffectCoverRightDown', 'ppEffectCheckerboardDown',
           'ppEffectStretchDown', 'ppEffectDoorsHorizontal',
           'ppEffectWheel3Spokes', 'MsoAnimDirection',
           'xlErrorBarIncludePlusValues', 'Slides',
           'ppPlaceholderCenterTitle', 'xlDouble', 'SeriesLines',
           'xlSeriesNameLevelCustom', 'ppEffectPanDown',
           'msoAnimEffectPathTurnUpRight',
           'msoAnimDirectionHorizontal', 'ppMediaTypeOther',
           'TabStop', 'xlUnderlineStyleSingle', 'AnimationBehavior',
           'rgbForestGreen', 'ppBulletHindiNumPeriod',
           'PlaceholderFormat', 'xlMarkerStyleDiamond',
           'ppLayoutChart', 'XlRegionLabelOptions',
           'msoAnimTextBulletRelativeSize', 'Master',
           'ppSoundFormatMIDI', 'PpFarEastLineBreakLevel',
           'xlInnerCenterPoint', 'msoAnimEffectChangeFontSize',
           'ppSaveAsOpenXMLTemplate', 'rgbLavender',
           'ppAnimateByCategory', 'ppEffectOrbitDown',
           'ppLayoutTwoObjectsAndText', 'ppTabStopDecimal',
           'ppEffectSwitchLeft', 'ppEffectStretchLeft',
           'ppActionLastSlideViewed', 'ppEffectCoverLeftDown',
           'rgbOldLace', 'xlMillions', 'msoAnimEffectBoomerang',
           'ppBulletCircleNumWDWhitePlain', 'MsoAnimateByLevel',
           'xlDashDot', 'Collection', 'xlPercent', 'rgbLightBlue',
           'msoAnimShapePictureGamma',
           'ppFrameColorsPresentationSchemeTextColor', 'xlCrissCross',
           'xlValueAscending', 'rgbOrange', 'rgbLavenderBlush',
           'xlChartElementPositionAutomatic', 'ErrorBars',
           'ppBorderLeft', 'rgbHotPink', 'xlValueNone',
           'ppEffectShredStripsIn',
           'msoAnimFilterEffectSubtypeInHorizontal',
           'AnimationPoints', 'msoAnimEffectPathCircle',
           'rgbGoldenrod', 'ppAlignRight', 'msoAnimDirectionRight',
           'ChartFillFormat', 'rgbBeige',
           'ppSaveAsOpenXMLPresentation',
           'msoAnimEffectChangeFontStyle', 'ppEffectUncoverLeftDown',
           'msoAnimEffectCheckerboard', 'ppEffectDoorsVertical',
           'XlSizeRepresents', 'xlMillionMillions', 'ppDateTimeUAQ7',
           'ppClipRelativeToSlide', 'xlAxisTitle', 'xlOpaque',
           'rgbDarkSeaGreen', 'ppTabStopRight',
           'ppEffectStretchAcross', 'xlBinsTypeBinCount',
           'ppMediaTaskStatusNone', 'ppActionNextSlide',
           'ppSaveAsOpenXMLPresentationMacroEnabled',
           'xlMinorGridlines', 'ppSlideSizeOnScreen', 'UpBars',
           'ppSlideSizeLetterPaper', 'ppSoundStopPrevious',
           'ppMouseOver', 'ppEffectFracture', 'xlPolynomial',
           'msoAnimFilterEffectTypeBlinds', 'XlMarkerStyle',
           'ppMouseClick', 'rgbDarkSlateBlue',
           'msoAnimAfterEffectMixed', 'MsoAnimProperty',
           'msoAnimEffectBounce', 'Hyperlinks',
           'ppEffectPageCurlSingleRight', 'PpSoundEffectType',
           'xlHorizontalCoordinate', 'MsoAnimAccumulate',
           'ppAutoSizeMixed', 'rgbPowderBlue', 'xlMarkerStyleX',
           'xlDownward', 'msoAnimEffectPathDown', 'ppPrintCurrent',
           'xlHiLoLines', 'ppNotSchemeColor', 'xlCenterPoint',
           'msoAnimDirectionUp', 'ppEffectBlindsVertical',
           'ppEffectWheel2Spokes', 'msoAnimDirectionDownLeft',
           'msoAnimFilterEffectTypeWheel', 'DisplayUnitLabel',
           'ppEffectWarpOut', 'msoAnimEffectRandomEffects', 'Borders',
           'PlaySettings', 'ppAnimateByFifthLevel',
           'msoAnimDirectionBottom', 'ppSaveAsExternalConverter',
           'xlUnderlineStyleDouble', 'msoAnimDirectionNone',
           'ppPastePNG', 'msoAnimEffectPathPlus', 'ppPrintColor',
           'ppEffectUncoverUp', 'TextStyleLevel', 'xlSeriesLines',
           'xlLegendPositionTop', 'PpTextStyleType', 'rgbYellowGreen',
           'XlDataLabelsType', 'ppSlideSizeOverhead',
           'ppSlideSizeB5ISOPaper',
           'msoAnimFilterEffectSubtypeFromRight',
           'ppEffectVortexLeft', 'ppPrintOutputBuildSlides',
           'xlExponential', 'ppBulletTradChinPeriod',
           'ppLayoutTwoObjectsOverText', 'SlideRange',
           'msoAnimEffectTeeter', 'ppAnimateUnitMixed',
           'ppSlideShowBlackScreen', 'xlPlusValues',
           'msoAnimTextUnitEffectByWord', 'PpMouseActivation',
           'PageSetup', 'msoAnimAfterEffectNone', 'xlBar',
           'ppCaseTitle', 'msoAnimEffectSpiral', 'rgbIndigo',
           'msoAnimFilterEffectSubtypeSpokes1', 'PpFixedFormatType',
           'ppSaveAsPNG', 'XlChartPictureType',
           'msoAnimEffectRestartNever', 'rgbCadetBlue',
           'MsoAnimAdditive', 'rgbAzure', 'ppSaveAsPresForReview',
           'ppFill', 'ppBulletAlphaUCParenBoth', 'xlThousandMillions',
           'xlLegendPositionCorner', 'msoAnimDirectionVertical',
           'msoAnimShapeFillOn', 'ppBorderTop',
           'msoAnimShapeFillColor', 'rgbDarkOliveGreen', 'xlEnd',
           'msoAnimEffectPathCrescentMoon', 'ChartGroup',
           'rgbLemonChiffon', 'PpProtectedViewCloseReason',
           'msoAnimDirectionIn', 'xlBinsTypeAutomatic',
           'PpSelectionType', 'ppEffectSplitVerticalOut',
           'SlideShowWindow', 'ppEffectRandomBarsVertical',
           'msoAnimEffectTransparency', 'ppSelectionNone', 'xlDays',
           'xlOuterCenterPoint', 'msoAnimEffectStyleEmphasis',
           'XlBinsType', 'xlBinsTypeCategorical', 'rgbPaleTurquoise',
           'ppEffectGlitterHexagonRight', 'xlContext', 'xlFill',
           'MsoAnimTriggerType', 'msoAnimCommandTypeEvent', 'xlBelow',
           'msoAnimEffectCustom', 'xlTickLabelOrientationDownward',
           'ppEffectStripsRightDown', 'xlDropLines',
           'msoAnimEffectPathSCurve1', 'EffectInformation',
           'xlBackgroundOpaque', 'msoAnimEffectRiseUp',
           'ppViewPrintPreview', 'rgbGreen',
           'xlLabelPositionInsideBase', 'ObjectVerbs',
           'msoAnimateChartAllAtOnce', 'xlCircle', 'ppActionPlay',
           'XlTickMark', 'ppSlideShowPointerAlwaysHidden',
           'msoAnimEffectPathPointyStar', 'XlBarShape',
           'ppEffectPeelOffRight', 'ppSaveAsOpenXMLTheme',
           'ppEffectCoverUp', 'msoAnimDirectionFontShadow',
           'ppShowTypeWindow', 'rgbSilver', 'ChartArea',
           'rgbRosyBrown', 'ppShapeFormatEMF', 'xlCap',
           'ppPrintSection', 'ppDateTimeUAQ1', 'DataLabel',
           'ppEffectPushUp', 'ppPlaceholderPicture',
           'msoAnimTriggerMixed', 'Diagram', 'msoAnimEffectPathHeart',
           'ppSoundEffectsMixed', 'xlLinear', 'rgbSteelBlue',
           'xlPlus', 'rgbLimeGreen', 'Corners', 'xlMarkerStyleSquare',
           'ppEffectMorphByChar', 'ppEffectWarpIn', 'xlVAlignJustify',
           'rgbMediumPurple', 'msoAnimEffectPathTurnDown',
           'ppRDIContentType', 'ppWindowMinimized',
           'ppSaveAsPowerPoint7', 'xlTickLabelOrientationHorizontal',
           'ppEffectCrawlFromDown', 'msoAnimDirectionAcross',
           'ppBulletArabicAlphaDash', 'ppPaused', 'ppAutoSizeNone',
           'EffectParameters', 'msoAnimEffectPathDiagonalUpRight',
           'rgbBlack', 'rgbPaleGoldenrod', 'msoAnimTypeFilter',
           'Pane', 'OLEFormat', 'xlUnderlineStyleNone',
           'msoAnimEffectWipe', 'ppEffectStripsUpRight',
           'ppBulletCircleNumWDBlackPlain', 'rgbWhite',
           'ppEffectStripsLeftDown', 'PropertyEffect',
           'ppFixedFormatIntentPrint', 'XlGradientStopPositionType',
           'ppResampleMediaProfileCustom', 'msoAnimTypeProperty',
           'msoAnimEffectPathBean', 'rgbBlue', '_Application',
           'rgbDarkOrange', 'Rows', 'msoAnimEffectPinwheel',
           'ppActionHyperlink', 'ppBorderRight',
           'ppEffectPageCurlSingleLeft', 'rgbThistle', 'MsoAnimType',
           'ppLayoutTable', 'ppBulletNone', 'ppEffectFlipLeft',
           'rgbMediumOrchid', 'xlGeneral', 'ppEffectFlipDown',
           'DiagramNodes', 'msoAnimEffectComplementaryColor',
           'XlAxisType', 'ppFarEastLineBreakLevelNormal',
           'ppScaleToFit', 'ActionSettings',
           'msoAnimEffect3DTurntable', 'ppViewThumbnails',
           'msoAnimateDiagramClockwise', 'xlSemiGray75',
           'AutoCorrect', 'ppEffectOrbitUp', 'PpSlideShowAdvanceMode',
           'rgbKhaki', 'xlCenter', 'ppSlideSizeLedgerPaper',
           'XlColorIndex', 'WebOptions',
           'ppFarEastLineBreakLevelStrict', 'ppViewSlideMaster',
           'ThreeDFormat', 'Points', 'msoAnimTextFontEmboss',
           'msoAnimEffectStretchy', 'msoAnimTextFontSuperscript',
           'ppEffectStripsUpLeft', 'ppEffectRippleRightDown',
           'ShapeNodes', 'xlMonths', 'msoAnimEffectStretch',
           'ChartGroups', 'ppEffectCoverLeft',
           'ppEffectFerrisWheelRight', 'ppEffectBoxLeft',
           'xlLineStyleNone', 'rgbNavajoWhite', 'ppHTMLDual',
           'PpPublishSourceType', 'rgbBrown', 'ppPlaceholderOrgChart',
           'ppViewOutline', 'SlideShowWindows',
           'msoAnimTextFontUnderline', 'msoAnimTriggerWithPrevious',
           'ppBulletHindiAlpha1Period', 'xlHundredMillions',
           'MsoAnimFilterEffectType', 'ppEffectGlitterDiamondUp',
           'msoAnimEffectFlicker', 'xlErrorBarTypeFixedValue',
           'msoAnimDirectionDownRight', 'xlLegendKey', 'XlVAlign',
           'rgbMediumSeaGreen', 'ppBulletKanjiKoreanPlain',
           'xlLegendPositionLeft', 'ppLayoutText', 'FileConverter',
           'ppDateTimeUAQ6', 'ppSaveAsOpenXMLTemplateMacroEnabled',
           'MediaFormat', 'ppBulletArabicAbjadDash',
           'msoAnimDirectionInCenter', 'ppSlideShowPaused',
           'ppEffectSplitHorizontalIn', 'xlVAlignBottom',
           'msoAnimEffectPath4PointStar', 'ppEffectCrawlFromUp',
           'ppRevisionInfoNone', 'Axes', 'ppLayoutMixed',
           'xlLabelPositionLeft', 'rgbSlateBlue',
           'xlCategoryLabelLevelNone', 'ppAlignJustifyLow',
           'xlGradientStopPositionTypeExtremeValue',
           'msoAnimTextFontName', 'ppSlideShowManualAdvance',
           'msoAnimDirectionOutCenter', 'ppBodyStyle',
           'xlOuterClockwisePoint', 'xlHigh',
           'msoAnimateDiagramCounterClockwise', 'ppEffectPeekFromUp',
           'msoAnimateDiagramCounterClockwiseOut',
           'msoAnimEffectAfterTransition', 'msoAnimEffectFlashOnce',
           'DefaultWebOptions', 'xlGeoProjectionTypeRobinson',
           'ppMediaTypeMixed', 'xlEndSides',
           'xlGeoProjectionTypeMercator',
           'msoAnimFilterEffectSubtypeDown', 'SlideShowSettings',
           'msoAnimTypeColor', 'msoAnimDirectionDown',
           'ppAnimateByThirdLevel', 'ppEffectStretchRight',
           'ppViewMasterThumbnails', 'xlPatternGray75',
           'msoAnimFilterEffectSubtypeFromTop',
           'msoAnimateTextByFirstLevel', 'MsoClickState',
           'ppRelativeToSlide', 'PpShapeFormat',
           'msoAnimEffectPathHexagon', 'rgbMediumSlateBlue',
           'RGBColor', 'BulletFormat', 'rgbBisque',
           'msoAnimTypeScale', 'ppBulletArabicParenRight',
           'rgbLightSlateGrey', 'rgbMistyRose', 'rgbMintCream',
           'xlHairline', 'ppAccent3', 'rgbOliveDrab',
           'ppEffectDrapeRight', 'rgbAqua',
           'ppEffectWindowHorizontal', 'ppSoundFormatCDAudio',
           'rgbCrimson', 'ppAnimateLevelNone', 'ppStopped',
           'ppMediaTaskStatusDone', 'xlSeriesNameLevelNone',
           'ppUpdateOptionAutomatic', 'rgbLightSalmon',
           'ppSlideShowRunning', 'rgbWheat', 'ppAccent1', 'Table',
           'msoAnimShapePictureGrayscale', 'ppEffectFadeSmoothly',
           'xlTickMarkNone', 'ppSlideShowPointerArrow', 'Legend',
           'Series', 'ppBulletAlphaLCParenBoth', 'TickLabels',
           'MsoAnimEffectAfter', 'ppEffectGlitterHexagonLeft',
           'TextFrame2', 'msoAnimEffectComplementaryColor2',
           'rgbPaleGreen', 'ppRevisionInfoBaseline', 'xlGray75',
           'rgbLightCyan', 'ppSaveAsHTML', 'ppEffectConveyorRight',
           'msoAnimFilterEffectSubtypeHorizontal', 'PpActionType',
           'ppBulletHebrewAlphaDash', 'msoAnimFilterEffectTypePlus',
           'ppArrangeTiled', 'xlLeft', 'PpSaveAsFileType',
           'TextStyles', 'xlBottom', 'xlGrid',
           'ppEffectShredRectangleOut', 'msoAnimTextFontShadow',
           'ppActionNone', 'ppLayoutTextAndClipart',
           'msoAnimEffectPath6PointStar',
           'msoAnimFilterEffectSubtypeDownRight', 'LinkFormat',
           'xlUnderlineStyleSingleAccounting',
           'msoAnimFilterEffectTypeDiamond', 'msoAnimEffectSwivel',
           'ppEffectCubeLeft', 'ppEffectOrbitRight',
           'PpPrintRangeType', 'msoAnimDirectionInstant',
           'msoAnimEffectMediaPlay', 'ppTabStopMixed',
           'ppActionNamedSlideShow', 'XlUnderlineStyle',
           'ppSelectionText', 'xlTickMarkCross',
           'ppViewHandoutMaster', 'ppEffectStripsLeftUp',
           'msoAnimEffectBlinds', 'ppEffectZoomOut', 'rgbTan',
           'msoAnimEffectCenterRevolve', 'xlZero',
           'msoAnimDirectionBottomRight', 'xlPlotArea',
           'ppLayoutClipArtAndVerticalText', 'rgbDarkSlateGrey',
           'xlShowPercent', 'rgbLightSlateGray',
           'ppAutoSizeShapeToFitText', 'ppLayoutComparison',
           'xlPatternUp', 'ppEffectWipeRight',
           'XlTickLabelOrientation', 'ppShowTypeSpeaker',
           'ppEffectFlashOnceFast', 'ppVerticalGuide',
           'msoAnimateDiagramDepthByBranch', 'msoAnimEffectFly',
           'ppDirectionRightToLeft', 'xlPatternLinearGradient',
           'msoAnimEffectPathInvertedSquare', 'ppEffectBoxUp',
           'xlDistributed', 'ppRDISlideUpdateInformation',
           'xlScaleLinear', 'xlValueDescending', 'ppShowSlideRange',
           'msoAnimAccumulateNone', 'rgbDarkGrey',
           'ppPrintOutputSlides', 'xlShowValue',
           'msoAnimShapeShadowOn', 'PpExportMode',
           'msoAnimEffectPathFootball', 'msoAnimDirectionFontAllCaps',
           'msoAnimShapeLineColor', 'xlGray8',
           'ppBulletRomanLCParenRight', 'Player', 'XlSeriesNameLevel',
           'msoAnimShapeShadowColor', 'msoAnimEffectPathTurnRight',
           'ppEffectShredStripsOut', 'msoAnimEffectPathSwoosh',
           'rgbMoccasin', 'rgbNavyBlue', 'ppEffectFlyFromRight',
           'ppSlideSizeCustom', 'ppHTMLv4',
           'msoAnimEffectPathHorizontalFigure8', 'ppEffectPanLeft',
           'rgbFloralWhite', 'xlHAlignLeft', 'FilterEffect',
           'xlErrorBarTypeStDev', 'ppPrintHandoutHorizontalFirst',
           'MouseTracker', 'ppEffectCheckerboardAcross',
           'CommandEffect', 'ppRDIInkAnnotations', 'PpPlayerState',
           'ppBulletHindiAlphaPeriod', 'ppSaveAsRTF', 'ppEffectNone',
           'ppEffectUncoverRightDown', 'xlDownBars',
           'msoAnimEffectPathNeutron', 'ppEffectUncoverLeftUp',
           'xl3DBar', 'rgbBlueViolet', 'msoAnimEffectCredits',
           'LeaderLines', 'XlReadingOrder', 'xlRight',
           'ppEffectPeekFromLeft', 'msoAnimEffectAppear',
           'ppAlignDistribute', 'msoAnimEffectFold',
           'ppEffectWheel1Spoke', 'msoAnimDirectionOut',
           'DiagramNode', 'msoAnimEffect3DSwing', 'ppForeground',
           'xlValue', 'ThemeVariants', 'rgbDeepSkyBlue',
           'xlAutomatic', 'ppEffectWindowVertical', 'SlideNavigation',
           'msoAnimWidth', 'ppPasteOLEObject', 'PpSlideShowType',
           'xlSizeIsWidth', 'ppUpdateOptionManual',
           'xlRegionLabelOptionsNone', 'xlSecondary',
           'ppPlaceholderSubtitle', 'ppLayoutBlank',
           'xlSeriesColorGradientStyleSequential',
           'msoAnimAfterEffectHideOnNextClick', 'SldEvents',
           'xlBinsTypeBinSize', 'rgbFireBrick',
           'msoAnimEffectPathFunnel', 'msoAnimEffectContrastingColor',
           'msoAnimEffectFlashBulb',
           'xlGradientStopPositionTypeNumber', 'ppEffectFlipRight',
           'Sequences', 'msoAnimEffectPathSineWave',
           'ppDateTimeFormatMixed', 'ppSaveAsXPS',
           'ppEffectUncoverRightUp', 'ppSlideShowWhiteScreen',
           'ppBulletAlphaUCPeriod', 'PrintOptions',
           'ppBulletArabicPeriod', 'xlLTR',
           'msoAnimDirectionFontUnderline', 'LegendKey', 'AddIn',
           'xlSplitByCustomSplit', 'XlTickLabelPosition', 'Cell',
           'msoAnimTextBulletStyle', 'xlGeoMappingLevelDataOnly',
           'rgbGrey', 'ppLayoutVerticalTitleAndTextOverChart',
           'rgbDarkOrchid', 'xlErrorBarTypeCustom',
           'xlPyramidToPoint', 'msoAnimTextFontSize',
           'XlCategorySortOrder', 'rgbPaleVioletRed',
           'msoAnimDirectionFontItalic', 'msoAnimEffectFadedZoom',
           'ppBaselineAlignFarEast50', 'ppEffectStripsRightUp',
           'DiagramNodeChildren', 'msoAnimEffectPathArcUp',
           'ppActionPreviousSlide', 'ppSlideSizeB4JISPaper',
           'msoAnimNone', 'xlDataLabelsShowNone', 'xlScale',
           'CustomLayouts', 'SetEffect', 'ppDateTimeUAQ3',
           'Trendline', 'PpSlideSizeType', 'ppBulletRomanLCPeriod',
           'msoAnimFilterEffectSubtypeOut', 'ppDateTimehmmAMPM',
           'ppBulletNumbered', 'XlAxisCrosses',
           'xlRegionLabelOptionsBestFitOnly',
           'msoAnimEffectChangeFontColor', 'ChartFormat',
           'DocumentWindow', 'msoAnimEffectThinLine',
           'rgbSpringGreen', 'ppTitleStyle', '_Global',
           'ppShowTypeWindow2', 'msoAnimEffectBrushOnColor',
           'ppEffectSwitchDown', 'Row', 'PpEntryEffect',
           'xlYErrorBars', 'ShadowFormat', 'msoAnimTypeSet',
           'xlLightDown', 'msoAnimateDiagramBreadthByNode',
           'ppSaveAsPowerPoint4', 'ppSaveAsMetaFile',
           'xlLabelPositionOutsideEnd', 'ppEffectCoverRight',
           'ppEffectSwivel', 'ppLayoutClipartAndText',
           'msoAnimTextFontSubscript', 'Placeholders', 'Adjustments',
           'xlLabelPositionBelow', 'msoAnimEffectPathZigzag',
           'XlPieSliceLocation', 'ppEffectPeekFromRight',
           'ppDateTimeMMddyyHmm', 'ppLayoutTextAndMediaClip',
           'xlDataLabel', 'msoAnimEffectShimmer', 'ppEffectWedge',
           'PpMediaTaskStatus', 'xlPageField', 'Designs',
           'xlGeoMappingLevelAutomatic', 'ppAnimateBySeries',
           'msoAnimAfterEffectDim', 'ppEffectFlashOnceSlow',
           'msoAnimDirectionFontBold', 'ppAnimateChartMixed',
           'xlBitmap', 'msoAnimTextBulletCharacter',
           'ppPrintBlackAndWhite', 'XlScaleType',
           'ppSaveAsPresentation', 'ppEffectWindLeft',
           'ppEffectWheel8Spokes', 'xlDataLabelsShowValue',
           'ppProtectedViewCloseForced', 'msoAnimEffectCrawl',
           'ppEffectMixed', 'ChartFont',
           'msoAnimEffectPathVerticalFigure8', 'LegendEntries',
           'msoAnimEffectEaseIn', 'xlPicture', 'rgbDarkMagenta',
           'ppAdvanceModeMixed', 'ppFixedFormatTypePDF',
           'xlMarkerStyleTriangle', 'PpPlaceholderType',
           'xlHAlignFill', 'xlCategory', 'PpIndentControl',
           'xlHundredThousands', 'ppEffectPeekFromDown',
           'ppFrameColorsBlackTextOnWhite', 'xlPatternDown',
           'ppSaveAsPDF', 'xlThin', 'xlLabelPositionAbove',
           'ppSaveAsWMV', 'msoAnimEffectPathLeft', 'XlBorderWeight',
           'xlCategoryLabelLevelCustom', 'ppEffectWipeDown',
           'ppSelectionShapes', 'msoAnimAdditiveAddBase',
           'xlAxisCrossesCustom', 'msoAnimEffectDesaturate',
           'Sequence', 'PpCheckInVersionType',
           'ppPasteMetafilePicture', 'msoAnimateChartBySeries',
           'PpPrintColorType', 'rgbMediumSpringGreen',
           'xlInterpolated', 'xlStar', 'xlErrorBarTypePercent',
           'ppPrintAll', 'ppBulletSimpChinPlain',
           'ppShowNamedSlideShow', 'xlPatternGray25', 'Effect',
           'ppTabStopCenter', 'msoAnimFilterEffectSubtypeFromLeft',
           'msoAnimFilterEffectTypeFade', 'rgbDarkViolet',
           'ppBulletKanjiKoreanPeriod', 'ppEffectPageCurlDoubleRight',
           'ppDateTimehmmssAMPM', 'PpBulletType', 'xlFixedValue',
           'xlChartX', 'TableStyle', 'ppAlignLeft',
           'msoAnimCommandTypeCall', 'ppHTMLAutodetect',
           'ppShowTypeKiosk', 'ppAlignCenter', 'xlDashDotDot',
           'ppIndentReplaceAttr', 'msoAnimEffectGrowAndTurn',
           'XlGeoProjectionType', 'ppEffectRevealSmoothLeft',
           'ppSlideShowPointerNone', 'ppLayoutObjectOverText',
           'TimeLine', 'ppDirectionLeftToRight',
           'ppPlaceholderFooter', 'ppCaseToggle',
           'ppSaveAsOpenDocumentPresentation', 'ppSlideShowDone',
           'FreeformBuilder', 'ppTransitionSpeedMedium', 'Font',
           'xlMinimum', 'ppSoundFile', 'xlCategoryDescending',
           'msoAnimEffectPathOctagon', 'rgbAquamarine',
           'ppSlideSizeOnScreen16x10', 'msoAnimEffectVerticalGrow',
           'ppLayoutTextAndChart', 'xlLabelPositionCustom',
           'XlCategoryType', 'msoAnimateTextByFourthLevel',
           'ppPasteSVG', 'DataLabels',
           'ppBulletKanjiSimpChinDBPeriod',
           'ppBulletAlphaUCParenRight', 'Broadcast', 'ppSaveAsShow',
           'ppDateTimeMMMMdyyyy', 'rgbMediumAquamarine',
           'xlXErrorBars', 'msoAnimTextFontBold',
           'msoAnimShapeShadowOffsetX', 'msoAnimEffectGrowShrink',
           'xlSplitByValue', 'msoAnimEffectPeek', 'xlHAlignRight',
           'ppEffectFerrisWheelLeft', 'msoAnimEffectPathBounceLeft',
           'Interior', 'xlTransparent', 'msoAnimDirectionVerticalIn',
           'PpAdvanceMode', 'rgbLightGoldenrodYellow',
           'xlVerticalCoordinate', 'MsoAnimEffectRestart',
           'xlPatternGray8', 'ppFollowColorsScheme',
           'ppLayoutSectionHeader', 'View', 'xlPivotChartFieldButton',
           'xlLabelPositionBestFit', 'msoAnimEffectSling',
           'rgbLightYellow', 'PpDirection', 'ppSaveAsMP4',
           'msoAnimFilterEffectTypeSlide', 'rgbLightGray',
           'msoAnimEffectPathArcLeft', 'msoAnimDirectionInSlightly',
           'ppPasteEnhancedMetafile', 'ppProtectedViewCloseEdit',
           'xlTenMillions', 'ppAfterEffectHide', 'ppAfterEffectDim',
           'ppEffectZoomIn', 'msoAnimateDiagramCounterClockwiseIn',
           'rgbViolet', 'ppEffectGlitterDiamondLeft', 'rgbLime',
           'ppBaselineAlignAuto', 'XlErrorBarDirection',
           'PpFrameColors', 'ppBulletRomanUCParenRight',
           'msoAnimEffectPlus', 'ppPasteRTF',
           'msoAnimDirectionHorizontalIn', 'msoAnimShapeLineOn',
           'xlContinuous', 'ppPasteJPG', 'xlCategoryAscending',
           'xlTenThousands', 'ppPlaceholderBitmap', 'xlLightVertical',
           'ppSlideShowRehearseNewTimings', 'ppLayoutObjectAndText',
           'ppPublishSlideRange', 'msoAnimFilterEffectSubtypeUp',
           'msoAnimFilterEffectTypeBox', 'Column', 'rgbDarkGray',
           'SlideShowView', 'ppAnimateByFirstLevel', 'MotionEffect',
           'msoAnimEffectBrushOnUnderline', 'ppPrintNamedSlideShow',
           'xlHAlignGeneral', 'ColorFormat', 'ppFileDialogSave',
           'rgbDimGrey', 'ppFrameColorsBrowserColors',
           'XlErrorBarInclude', 'rgbGainsboro',
           'ppEffectAirplaneRight', 'xlRegionLabelOptionsShowAll']
from comtypes import _check_version; _check_version('1.1.10', 1626757318.424111)
